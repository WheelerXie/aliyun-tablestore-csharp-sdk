// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: table_store.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Alicloud.Openservices.Tablestore.Core.Protocol {

  /// <summary>Holder for reflection information generated from table_store.proto</summary>
  public static partial class TableStoreReflection {

    #region Descriptor
    /// <summary>File descriptor for table_store.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TableStoreReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChF0YWJsZV9zdG9yZS5wcm90bxIyY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNl",
            "cy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wiJgoFRXJyb3ISDAoEY29kZRgB",
            "IAIoCRIPCgdtZXNzYWdlGAIgASgJIsgBChBQcmltYXJ5S2V5U2NoZW1hEgwK",
            "BG5hbWUYASACKAkSUAoEdHlwZRgCIAIoDjJCLmNvbS5hbGljbG91ZC5vcGVu",
            "c2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlByaW1hcnlLZXlU",
            "eXBlElQKBm9wdGlvbhgDIAEoDjJELmNvbS5hbGljbG91ZC5vcGVuc2Vydmlj",
            "ZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlByaW1hcnlLZXlPcHRpb24i",
            "eAoTRGVmaW5lZENvbHVtblNjaGVtYRIMCgRuYW1lGAEgAigJElMKBHR5cGUY",
            "AiACKA4yRS5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUu",
            "Y29yZS5wcm90b2NvbC5EZWZpbmVkQ29sdW1uVHlwZSIsCg5QYXJ0aXRpb25S",
            "YW5nZRINCgViZWdpbhgBIAIoDBILCgNlbmQYAiACKAwi1QEKDFRhYmxlT3B0",
            "aW9ucxIUCgx0aW1lX3RvX2xpdmUYASABKAUSFAoMbWF4X3ZlcnNpb25zGAIg",
            "ASgFEl4KEWJsb29tX2ZpbHRlcl90eXBlGAMgASgOMkMuY29tLmFsaWNsb3Vk",
            "Lm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuQmxvb21G",
            "aWx0ZXJUeXBlEhIKCmJsb2NrX3NpemUYBCABKAUSJQodZGV2aWF0aW9uX2Nl",
            "bGxfdmVyc2lvbl9pbl9zZWMYBSABKAMi+QEKCUluZGV4TWV0YRIMCgRuYW1l",
            "GAEgAigJEhMKC3ByaW1hcnlfa2V5GAIgAygJEhYKDmRlZmluZWRfY29sdW1u",
            "GAMgAygJEl4KEWluZGV4X3VwZGF0ZV9tb2RlGAQgAigOMkMuY29tLmFsaWNs",
            "b3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuSW5k",
            "ZXhVcGRhdGVNb2RlElEKCmluZGV4X3R5cGUYBSACKA4yPS5jb20uYWxpY2xv",
            "dWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5JbmRl",
            "eFR5cGUirgIKCVRhYmxlTWV0YRISCgp0YWJsZV9uYW1lGAEgAigJElkKC3By",
            "aW1hcnlfa2V5GAIgAygLMkQuY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50",
            "YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuUHJpbWFyeUtleVNjaGVtYRJfCg5k",
            "ZWZpbmVkX2NvbHVtbhgDIAMoCzJHLmNvbS5hbGljbG91ZC5vcGVuc2Vydmlj",
            "ZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLkRlZmluZWRDb2x1bW5TY2hl",
            "bWESUQoKaW5kZXhfbWV0YRgEIAMoCzI9LmNvbS5hbGljbG91ZC5vcGVuc2Vy",
            "dmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLkluZGV4TWV0YSKJAQoJ",
            "Q29uZGl0aW9uEmIKDXJvd19leGlzdGVuY2UYASACKA4ySy5jb20uYWxpY2xv",
            "dWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5Sb3dF",
            "eGlzdGVuY2VFeHBlY3RhdGlvbhIYChBjb2x1bW5fY29uZGl0aW9uGAIgASgM",
            "IisKDENhcGFjaXR5VW5pdBIMCgRyZWFkGAEgASgFEg0KBXdyaXRlGAIgASgF",
            "IqwBChlSZXNlcnZlZFRocm91Z2hwdXREZXRhaWxzElcKDWNhcGFjaXR5X3Vu",
            "aXQYASACKAsyQC5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3Rv",
            "cmUuY29yZS5wcm90b2NvbC5DYXBhY2l0eVVuaXQSGgoSbGFzdF9pbmNyZWFz",
            "ZV90aW1lGAIgAigDEhoKEmxhc3RfZGVjcmVhc2VfdGltZRgDIAEoAyJtChJS",
            "ZXNlcnZlZFRocm91Z2hwdXQSVwoNY2FwYWNpdHlfdW5pdBgBIAIoCzJALmNv",
            "bS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3Rv",
            "Y29sLkNhcGFjaXR5VW5pdCJrChBDb25zdW1lZENhcGFjaXR5ElcKDWNhcGFj",
            "aXR5X3VuaXQYASACKAsyQC5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRh",
            "Ymxlc3RvcmUuY29yZS5wcm90b2NvbC5DYXBhY2l0eVVuaXQiRQoTU3RyZWFt",
            "U3BlY2lmaWNhdGlvbhIVCg1lbmFibGVfc3RyZWFtGAEgAigIEhcKD2V4cGly",
            "YXRpb25fdGltZRgCIAEoBSJsCg1TdHJlYW1EZXRhaWxzEhUKDWVuYWJsZV9z",
            "dHJlYW0YASACKAgSEQoJc3RyZWFtX2lkGAIgASgJEhcKD2V4cGlyYXRpb25f",
            "dGltZRgDIAEoBRIYChBsYXN0X2VuYWJsZV90aW1lGAQgASgDIq8EChJDcmVh",
            "dGVUYWJsZVJlcXVlc3QSUQoKdGFibGVfbWV0YRgBIAIoCzI9LmNvbS5hbGlj",
            "bG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlRh",
            "YmxlTWV0YRJjChNyZXNlcnZlZF90aHJvdWdocHV0GAIgAigLMkYuY29tLmFs",
            "aWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wu",
            "UmVzZXJ2ZWRUaHJvdWdocHV0ElcKDXRhYmxlX29wdGlvbnMYAyABKAsyQC5j",
            "b20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90",
            "b2NvbC5UYWJsZU9wdGlvbnMSVgoKcGFydGl0aW9ucxgEIAMoCzJCLmNvbS5h",
            "bGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29s",
            "LlBhcnRpdGlvblJhbmdlElwKC3N0cmVhbV9zcGVjGAUgASgLMkcuY29tLmFs",
            "aWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wu",
            "U3RyZWFtU3BlY2lmaWNhdGlvbhJSCgtpbmRleF9tZXRhcxgHIAMoCzI9LmNv",
            "bS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3Rv",
            "Y29sLkluZGV4TWV0YSIVChNDcmVhdGVUYWJsZVJlc3BvbnNlIpsBChJDcmVh",
            "dGVJbmRleFJlcXVlc3QSFwoPbWFpbl90YWJsZV9uYW1lGAEgAigJElEKCmlu",
            "ZGV4X21ldGEYAiACKAsyPS5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRh",
            "Ymxlc3RvcmUuY29yZS5wcm90b2NvbC5JbmRleE1ldGESGQoRaW5jbHVkZV9i",
            "YXNlX2RhdGEYAyABKAgiFQoTQ3JlYXRlSW5kZXhSZXNwb25zZSI/ChBEcm9w",
            "SW5kZXhSZXF1ZXN0EhcKD21haW5fdGFibGVfbmFtZRgBIAIoCRISCgppbmRl",
            "eF9uYW1lGAIgAigJIhMKEURyb3BJbmRleFJlc3BvbnNlIsQCChJVcGRhdGVU",
            "YWJsZVJlcXVlc3QSEgoKdGFibGVfbmFtZRgBIAIoCRJjChNyZXNlcnZlZF90",
            "aHJvdWdocHV0GAIgASgLMkYuY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50",
            "YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuUmVzZXJ2ZWRUaHJvdWdocHV0ElcK",
            "DXRhYmxlX29wdGlvbnMYAyABKAsyQC5jb20uYWxpY2xvdWQub3BlbnNlcnZp",
            "Y2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5UYWJsZU9wdGlvbnMSXAoL",
            "c3RyZWFtX3NwZWMYBCABKAsyRy5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2Vz",
            "LnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5TdHJlYW1TcGVjaWZpY2F0aW9u",
            "Ir0CChNVcGRhdGVUYWJsZVJlc3BvbnNlEnIKG3Jlc2VydmVkX3Rocm91Z2hw",
            "dXRfZGV0YWlscxgBIAIoCzJNLmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMu",
            "dGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlJlc2VydmVkVGhyb3VnaHB1dERl",
            "dGFpbHMSVwoNdGFibGVfb3B0aW9ucxgCIAIoCzJALmNvbS5hbGljbG91ZC5v",
            "cGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlRhYmxlT3B0",
            "aW9ucxJZCg5zdHJlYW1fZGV0YWlscxgDIAEoCzJBLmNvbS5hbGljbG91ZC5v",
            "cGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlN0cmVhbURl",
            "dGFpbHMiKgoURGVzY3JpYmVUYWJsZVJlcXVlc3QSEgoKdGFibGVfbmFtZRgB",
            "IAIoCSLTBAoVRGVzY3JpYmVUYWJsZVJlc3BvbnNlElEKCnRhYmxlX21ldGEY",
            "ASACKAsyPS5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUu",
            "Y29yZS5wcm90b2NvbC5UYWJsZU1ldGEScgobcmVzZXJ2ZWRfdGhyb3VnaHB1",
            "dF9kZXRhaWxzGAIgAigLMk0uY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50",
            "YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuUmVzZXJ2ZWRUaHJvdWdocHV0RGV0",
            "YWlscxJXCg10YWJsZV9vcHRpb25zGAMgAigLMkAuY29tLmFsaWNsb3VkLm9w",
            "ZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuVGFibGVPcHRp",
            "b25zElUKDHRhYmxlX3N0YXR1cxgEIAIoDjI/LmNvbS5hbGljbG91ZC5vcGVu",
            "c2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlRhYmxlU3RhdHVz",
            "ElkKDnN0cmVhbV9kZXRhaWxzGAUgASgLMkEuY29tLmFsaWNsb3VkLm9wZW5z",
            "ZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuU3RyZWFtRGV0YWls",
            "cxIUCgxzaGFyZF9zcGxpdHMYBiADKAwSUgoLaW5kZXhfbWV0YXMYCCADKAsy",
            "PS5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5w",
            "cm90b2NvbC5JbmRleE1ldGEiEgoQTGlzdFRhYmxlUmVxdWVzdCIoChFMaXN0",
            "VGFibGVSZXNwb25zZRITCgt0YWJsZV9uYW1lcxgBIAMoCSIoChJEZWxldGVU",
            "YWJsZVJlcXVlc3QSEgoKdGFibGVfbmFtZRgBIAIoCSIVChNEZWxldGVUYWJs",
            "ZVJlc3BvbnNlIiYKEExvYWRUYWJsZVJlcXVlc3QSEgoKdGFibGVfbmFtZRgB",
            "IAIoCSITChFMb2FkVGFibGVSZXNwb25zZSIoChJVbmxvYWRUYWJsZVJlcXVl",
            "c3QSEgoKdGFibGVfbmFtZRgBIAIoCSIVChNVbmxvYWRUYWJsZVJlc3BvbnNl",
            "IkgKCVRpbWVSYW5nZRISCgpzdGFydF90aW1lGAEgASgDEhAKCGVuZF90aW1l",
            "GAIgASgDEhUKDXNwZWNpZmljX3RpbWUYAyABKAMigQEKDVJldHVybkNvbnRl",
            "bnQSUwoLcmV0dXJuX3R5cGUYASABKA4yPi5jb20uYWxpY2xvdWQub3BlbnNl",
            "cnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5SZXR1cm5UeXBlEhsK",
            "E3JldHVybl9jb2x1bW5fbmFtZXMYAiADKAkitgIKDUdldFJvd1JlcXVlc3QS",
            "EgoKdGFibGVfbmFtZRgBIAIoCRITCgtwcmltYXJ5X2tleRgCIAIoDBIWCg5j",
            "b2x1bW5zX3RvX2dldBgDIAMoCRJRCgp0aW1lX3JhbmdlGAQgASgLMj0uY29t",
            "LmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9j",
            "b2wuVGltZVJhbmdlEhQKDG1heF92ZXJzaW9ucxgFIAEoBRIaCgxjYWNoZV9i",
            "bG9ja3MYBiABKAg6BHRydWUSDgoGZmlsdGVyGAcgASgMEhQKDHN0YXJ0X2Nv",
            "bHVtbhgIIAEoCRISCgplbmRfY29sdW1uGAkgASgJEg0KBXRva2VuGAogASgM",
            "EhYKDnRyYW5zYWN0aW9uX2lkGAsgASgJIokBCg5HZXRSb3dSZXNwb25zZRJW",
            "Cghjb25zdW1lZBgBIAIoCzJELmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMu",
            "dGFibGVzdG9yZS5jb3JlLnByb3RvY29sLkNvbnN1bWVkQ2FwYWNpdHkSCwoD",
            "cm93GAIgAigMEhIKCm5leHRfdG9rZW4YAyABKAwi/wEKEFVwZGF0ZVJvd1Jl",
            "cXVlc3QSEgoKdGFibGVfbmFtZRgBIAIoCRISCgpyb3dfY2hhbmdlGAIgAigM",
            "ElAKCWNvbmRpdGlvbhgDIAIoCzI9LmNvbS5hbGljbG91ZC5vcGVuc2Vydmlj",
            "ZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLkNvbmRpdGlvbhJZCg5yZXR1",
            "cm5fY29udGVudBgEIAEoCzJBLmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMu",
            "dGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlJldHVybkNvbnRlbnQSFgoOdHJh",
            "bnNhY3Rpb25faWQYBSABKAkieAoRVXBkYXRlUm93UmVzcG9uc2USVgoIY29u",
            "c3VtZWQYASACKAsyRC5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxl",
            "c3RvcmUuY29yZS5wcm90b2NvbC5Db25zdW1lZENhcGFjaXR5EgsKA3JvdxgC",
            "IAEoDCL1AQoNUHV0Um93UmVxdWVzdBISCgp0YWJsZV9uYW1lGAEgAigJEgsK",
            "A3JvdxgCIAIoDBJQCgljb25kaXRpb24YAyACKAsyPS5jb20uYWxpY2xvdWQu",
            "b3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5Db25kaXRp",
            "b24SWQoOcmV0dXJuX2NvbnRlbnQYBCABKAsyQS5jb20uYWxpY2xvdWQub3Bl",
            "bnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5SZXR1cm5Db250",
            "ZW50EhYKDnRyYW5zYWN0aW9uX2lkGAUgASgJInUKDlB1dFJvd1Jlc3BvbnNl",
            "ElYKCGNvbnN1bWVkGAEgAigLMkQuY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNl",
            "cy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuQ29uc3VtZWRDYXBhY2l0eRIL",
            "CgNyb3cYAiABKAwigAIKEERlbGV0ZVJvd1JlcXVlc3QSEgoKdGFibGVfbmFt",
            "ZRgBIAIoCRITCgtwcmltYXJ5X2tleRgCIAIoDBJQCgljb25kaXRpb24YAyAC",
            "KAsyPS5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29y",
            "ZS5wcm90b2NvbC5Db25kaXRpb24SWQoOcmV0dXJuX2NvbnRlbnQYBCABKAsy",
            "QS5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5w",
            "cm90b2NvbC5SZXR1cm5Db250ZW50EhYKDnRyYW5zYWN0aW9uX2lkGAUgASgJ",
            "IngKEURlbGV0ZVJvd1Jlc3BvbnNlElYKCGNvbnN1bWVkGAEgAigLMkQuY29t",
            "LmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9j",
            "b2wuQ29uc3VtZWRDYXBhY2l0eRILCgNyb3cYAiABKAwiqgIKGVRhYmxlSW5C",
            "YXRjaEdldFJvd1JlcXVlc3QSEgoKdGFibGVfbmFtZRgBIAIoCRITCgtwcmlt",
            "YXJ5X2tleRgCIAMoDBINCgV0b2tlbhgDIAMoDBIWCg5jb2x1bW5zX3RvX2dl",
            "dBgEIAMoCRJRCgp0aW1lX3JhbmdlGAUgASgLMj0uY29tLmFsaWNsb3VkLm9w",
            "ZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuVGltZVJhbmdl",
            "EhQKDG1heF92ZXJzaW9ucxgGIAEoBRIaCgxjYWNoZV9ibG9ja3MYByABKAg6",
            "BHRydWUSDgoGZmlsdGVyGAggASgMEhQKDHN0YXJ0X2NvbHVtbhgJIAEoCRIS",
            "CgplbmRfY29sdW1uGAogASgJInMKEkJhdGNoR2V0Um93UmVxdWVzdBJdCgZ0",
            "YWJsZXMYASADKAsyTS5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxl",
            "c3RvcmUuY29yZS5wcm90b2NvbC5UYWJsZUluQmF0Y2hHZXRSb3dSZXF1ZXN0",
            "IuwBChhSb3dJbkJhdGNoR2V0Um93UmVzcG9uc2USDQoFaXNfb2sYASACKAgS",
            "SAoFZXJyb3IYAiABKAsyOS5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRh",
            "Ymxlc3RvcmUuY29yZS5wcm90b2NvbC5FcnJvchJWCghjb25zdW1lZBgDIAEo",
            "CzJELmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3Jl",
            "LnByb3RvY29sLkNvbnN1bWVkQ2FwYWNpdHkSCwoDcm93GAQgASgMEhIKCm5l",
            "eHRfdG9rZW4YBSABKAwijAEKGlRhYmxlSW5CYXRjaEdldFJvd1Jlc3BvbnNl",
            "EhIKCnRhYmxlX25hbWUYASACKAkSWgoEcm93cxgCIAMoCzJMLmNvbS5hbGlj",
            "bG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlJv",
            "d0luQmF0Y2hHZXRSb3dSZXNwb25zZSJ1ChNCYXRjaEdldFJvd1Jlc3BvbnNl",
            "El4KBnRhYmxlcxgBIAMoCzJOLmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMu",
            "dGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlRhYmxlSW5CYXRjaEdldFJvd1Jl",
            "c3BvbnNlIq0CChlSb3dJbkJhdGNoV3JpdGVSb3dSZXF1ZXN0Ek8KBHR5cGUY",
            "ASACKA4yQS5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUu",
            "Y29yZS5wcm90b2NvbC5PcGVyYXRpb25UeXBlEhIKCnJvd19jaGFuZ2UYAiAC",
            "KAwSUAoJY29uZGl0aW9uGAMgAigLMj0uY29tLmFsaWNsb3VkLm9wZW5zZXJ2",
            "aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuQ29uZGl0aW9uElkKDnJl",
            "dHVybl9jb250ZW50GAQgASgLMkEuY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNl",
            "cy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuUmV0dXJuQ29udGVudCKOAQob",
            "VGFibGVJbkJhdGNoV3JpdGVSb3dSZXF1ZXN0EhIKCnRhYmxlX25hbWUYASAC",
            "KAkSWwoEcm93cxgCIAMoCzJNLmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMu",
            "dGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlJvd0luQmF0Y2hXcml0ZVJvd1Jl",
            "cXVlc3QijwEKFEJhdGNoV3JpdGVSb3dSZXF1ZXN0El8KBnRhYmxlcxgBIAMo",
            "CzJPLmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3Jl",
            "LnByb3RvY29sLlRhYmxlSW5CYXRjaFdyaXRlUm93UmVxdWVzdBIWCg50cmFu",
            "c2FjdGlvbl9pZBgCIAEoCSLaAQoaUm93SW5CYXRjaFdyaXRlUm93UmVzcG9u",
            "c2USDQoFaXNfb2sYASACKAgSSAoFZXJyb3IYAiABKAsyOS5jb20uYWxpY2xv",
            "dWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5FcnJv",
            "chJWCghjb25zdW1lZBgDIAEoCzJELmNvbS5hbGljbG91ZC5vcGVuc2Vydmlj",
            "ZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLkNvbnN1bWVkQ2FwYWNpdHkS",
            "CwoDcm93GAQgASgMIpABChxUYWJsZUluQmF0Y2hXcml0ZVJvd1Jlc3BvbnNl",
            "EhIKCnRhYmxlX25hbWUYASACKAkSXAoEcm93cxgCIAMoCzJOLmNvbS5hbGlj",
            "bG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnByb3RvY29sLlJv",
            "d0luQmF0Y2hXcml0ZVJvd1Jlc3BvbnNlInkKFUJhdGNoV3JpdGVSb3dSZXNw",
            "b25zZRJgCgZ0YWJsZXMYASADKAsyUC5jb20uYWxpY2xvdWQub3BlbnNlcnZp",
            "Y2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5UYWJsZUluQmF0Y2hXcml0",
            "ZVJvd1Jlc3BvbnNlItEFCg9HZXRSYW5nZVJlcXVlc3QSEgoKdGFibGVfbmFt",
            "ZRgBIAIoCRJQCglkaXJlY3Rpb24YAiACKA4yPS5jb20uYWxpY2xvdWQub3Bl",
            "bnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5EaXJlY3Rpb24S",
            "FgoOY29sdW1uc190b19nZXQYAyADKAkSUQoKdGltZV9yYW5nZRgEIAEoCzI9",
            "LmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVzdG9yZS5jb3JlLnBy",
            "b3RvY29sLlRpbWVSYW5nZRIUCgxtYXhfdmVyc2lvbnMYBSABKAUSDQoFbGlt",
            "aXQYBiABKAUSIwobaW5jbHVzaXZlX3N0YXJ0X3ByaW1hcnlfa2V5GAcgAigM",
            "EiEKGWV4Y2x1c2l2ZV9lbmRfcHJpbWFyeV9rZXkYCCACKAwSGgoMY2FjaGVf",
            "YmxvY2tzGAkgASgIOgR0cnVlEg4KBmZpbHRlchgKIAEoDBIUCgxzdGFydF9j",
            "b2x1bW4YCyABKAkSEgoKZW5kX2NvbHVtbhgMIAEoCRINCgV0b2tlbhgNIAEo",
            "DBIWCg50cmFuc2FjdGlvbl9pZBgOIAEoCRJxChRkYXRhX2Jsb2NrX3R5cGVf",
            "aGludBgPIAEoDjJBLmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVz",
            "dG9yZS5jb3JlLnByb3RvY29sLkRhdGFCbG9ja1R5cGU6EERCVF9QTEFJTl9C",
            "VUZGRVISKAoacmV0dXJuX2VudGlyZV9wcmltYXJ5X2tleXMYECABKAg6BHRy",
            "dWUSZgoSY29tcHJlc3NfdHlwZV9oaW50GBEgASgOMkAuY29tLmFsaWNsb3Vk",
            "Lm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuQ29tcHJl",
            "c3NUeXBlOghDUFRfTk9ORSLhAgoQR2V0UmFuZ2VSZXNwb25zZRJWCghjb25z",
            "dW1lZBgBIAIoCzJELmNvbS5hbGljbG91ZC5vcGVuc2VydmljZXMudGFibGVz",
            "dG9yZS5jb3JlLnByb3RvY29sLkNvbnN1bWVkQ2FwYWNpdHkSDAoEcm93cxgC",
            "IAIoDBIeChZuZXh0X3N0YXJ0X3ByaW1hcnlfa2V5GAMgASgMEhIKCm5leHRf",
            "dG9rZW4YBCABKAwSWgoPZGF0YV9ibG9ja190eXBlGAUgASgOMkEuY29tLmFs",
            "aWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wu",
            "RGF0YUJsb2NrVHlwZRJXCg1jb21wcmVzc190eXBlGAYgASgOMkAuY29tLmFs",
            "aWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wu",
            "Q29tcHJlc3NUeXBlIj8KHFN0YXJ0TG9jYWxUcmFuc2FjdGlvblJlcXVlc3QS",
            "EgoKdGFibGVfbmFtZRgBIAIoCRILCgNrZXkYAiACKAwiNwodU3RhcnRMb2Nh",
            "bFRyYW5zYWN0aW9uUmVzcG9uc2USFgoOdHJhbnNhY3Rpb25faWQYASACKAki",
            "MgoYQ29tbWl0VHJhbnNhY3Rpb25SZXF1ZXN0EhYKDnRyYW5zYWN0aW9uX2lk",
            "GAEgAigJIhsKGUNvbW1pdFRyYW5zYWN0aW9uUmVzcG9uc2UiMQoXQWJvcnRU",
            "cmFuc2FjdGlvblJlcXVlc3QSFgoOdHJhbnNhY3Rpb25faWQYASACKAkiGgoY",
            "QWJvcnRUcmFuc2FjdGlvblJlc3BvbnNlIicKEUxpc3RTdHJlYW1SZXF1ZXN0",
            "EhIKCnRhYmxlX25hbWUYASABKAkiRgoGU3RyZWFtEhEKCXN0cmVhbV9pZBgB",
            "IAIoCRISCgp0YWJsZV9uYW1lGAIgAigJEhUKDWNyZWF0aW9uX3RpbWUYAyAC",
            "KAMiYQoSTGlzdFN0cmVhbVJlc3BvbnNlEksKB3N0cmVhbXMYASADKAsyOi5j",
            "b20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5wcm90",
            "b2NvbC5TdHJlYW0iTQoLU3RyZWFtU2hhcmQSEAoIc2hhcmRfaWQYASACKAkS",
            "EQoJcGFyZW50X2lkGAIgASgJEhkKEXBhcmVudF9zaWJsaW5nX2lkGAMgASgJ",
            "ImEKFURlc2NyaWJlU3RyZWFtUmVxdWVzdBIRCglzdHJlYW1faWQYASACKAkS",
            "IAoYaW5jbHVzaXZlX3N0YXJ0X3NoYXJkX2lkGAIgASgJEhMKC3NoYXJkX2xp",
            "bWl0GAMgASgFIrACChZEZXNjcmliZVN0cmVhbVJlc3BvbnNlEhEKCXN0cmVh",
            "bV9pZBgBIAIoCRIXCg9leHBpcmF0aW9uX3RpbWUYAiACKAUSEgoKdGFibGVf",
            "bmFtZRgDIAIoCRIVCg1jcmVhdGlvbl90aW1lGAQgAigDElcKDXN0cmVhbV9z",
            "dGF0dXMYBSACKA4yQC5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxl",
            "c3RvcmUuY29yZS5wcm90b2NvbC5TdHJlYW1TdGF0dXMSTwoGc2hhcmRzGAYg",
            "AygLMj8uY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNv",
            "cmUucHJvdG9jb2wuU3RyZWFtU2hhcmQSFQoNbmV4dF9zaGFyZF9pZBgHIAEo",
            "CSI+ChdHZXRTaGFyZEl0ZXJhdG9yUmVxdWVzdBIRCglzdHJlYW1faWQYASAC",
            "KAkSEAoIc2hhcmRfaWQYAiACKAkiMgoYR2V0U2hhcmRJdGVyYXRvclJlc3Bv",
            "bnNlEhYKDnNoYXJkX2l0ZXJhdG9yGAEgAigJIj8KFkdldFN0cmVhbVJlY29y",
            "ZFJlcXVlc3QSFgoOc2hhcmRfaXRlcmF0b3IYASACKAkSDQoFbGltaXQYAiAB",
            "KAUinQIKF0dldFN0cmVhbVJlY29yZFJlc3BvbnNlEnAKDnN0cmVhbV9yZWNv",
            "cmRzGAEgAygLMlguY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0",
            "b3JlLmNvcmUucHJvdG9jb2wuR2V0U3RyZWFtUmVjb3JkUmVzcG9uc2UuU3Ry",
            "ZWFtUmVjb3JkEhsKE25leHRfc2hhcmRfaXRlcmF0b3IYAiABKAkacwoMU3Ry",
            "ZWFtUmVjb3JkElMKC2FjdGlvbl90eXBlGAEgAigOMj4uY29tLmFsaWNsb3Vk",
            "Lm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNvcmUucHJvdG9jb2wuQWN0aW9u",
            "VHlwZRIOCgZyZWNvcmQYAiACKAwiagofQ29tcHV0ZVNwbGl0UG9pbnRzQnlT",
            "aXplUmVxdWVzdBISCgp0YWJsZV9uYW1lGAEgAigJEhIKCnNwbGl0X3NpemUY",
            "AiACKAMSHwoXc3BsaXRfc2l6ZV91bml0X2luX2J5dGUYAyABKAMikAMKIENv",
            "bXB1dGVTcGxpdFBvaW50c0J5U2l6ZVJlc3BvbnNlElYKCGNvbnN1bWVkGAEg",
            "AigLMkQuY29tLmFsaWNsb3VkLm9wZW5zZXJ2aWNlcy50YWJsZXN0b3JlLmNv",
            "cmUucHJvdG9jb2wuQ29uc3VtZWRDYXBhY2l0eRJUCgZzY2hlbWEYAiADKAsy",
            "RC5jb20uYWxpY2xvdWQub3BlbnNlcnZpY2VzLnRhYmxlc3RvcmUuY29yZS5w",
            "cm90b2NvbC5QcmltYXJ5S2V5U2NoZW1hEhQKDHNwbGl0X3BvaW50cxgDIAMo",
            "DBJ1Cglsb2NhdGlvbnMYBCADKAsyYi5jb20uYWxpY2xvdWQub3BlbnNlcnZp",
            "Y2VzLnRhYmxlc3RvcmUuY29yZS5wcm90b2NvbC5Db21wdXRlU3BsaXRQb2lu",
            "dHNCeVNpemVSZXNwb25zZS5TcGxpdExvY2F0aW9uGjEKDVNwbGl0TG9jYXRp",
            "b24SEAoIbG9jYXRpb24YASACKAkSDgoGcmVwZWF0GAIgAigSKjUKDlByaW1h",
            "cnlLZXlUeXBlEgsKB0lOVEVHRVIQARIKCgZTVFJJTkcQAhIKCgZCSU5BUlkQ",
            "AypjChFEZWZpbmVkQ29sdW1uVHlwZRIPCgtEQ1RfSU5URUdFUhABEg4KCkRD",
            "VF9ET1VCTEUQAhIPCgtEQ1RfQk9PTEVBThADEg4KCkRDVF9TVFJJTkcQBBIM",
            "CghEQ1RfQkxPQhAHKiYKEFByaW1hcnlLZXlPcHRpb24SEgoOQVVUT19JTkNS",
            "RU1FTlQQASouCg9CbG9vbUZpbHRlclR5cGUSCAoETk9ORRABEggKBENFTEwQ",
            "AhIHCgNST1cQAypACg1EYXRhQmxvY2tUeXBlEhQKEERCVF9QTEFJTl9CVUZG",
            "RVIQABIZChVEQlRfU0lNUExFX1JPV19NQVRSSVgQASocCgxDb21wcmVzc1R5",
            "cGUSDAoIQ1BUX05PTkUQACo6Cg9JbmRleFVwZGF0ZU1vZGUSEwoPSVVNX0FT",
            "WU5DX0lOREVYEAASEgoOSVVNX1NZTkNfSU5ERVgQASo0CglJbmRleFR5cGUS",
            "EwoPSVRfR0xPQkFMX0lOREVYEAASEgoOSVRfTE9DQUxfSU5ERVgQASpRCgtU",
            "YWJsZVN0YXR1cxIKCgZBQ1RJVkUQARIMCghJTkFDVElWRRACEgsKB0xPQURJ",
            "TkcQAxINCglVTkxPQURJTkcQBBIMCghVUERBVElORxAFKk0KF1Jvd0V4aXN0",
            "ZW5jZUV4cGVjdGF0aW9uEgoKBklHTk9SRRAAEhAKDEVYUEVDVF9FWElTVBAB",
            "EhQKEEVYUEVDVF9OT1RfRVhJU1QQAio5CgpSZXR1cm5UeXBlEgsKB1JUX05P",
            "TkUQABIJCgVSVF9QSxABEhMKD1JUX0FGVEVSX01PRElGWRACKjAKDU9wZXJh",
            "dGlvblR5cGUSBwoDUFVUEAESCgoGVVBEQVRFEAISCgoGREVMRVRFEAMqJgoJ",
            "RGlyZWN0aW9uEgsKB0ZPUldBUkQQABIMCghCQUNLV0FSRBABKjYKDFN0cmVh",
            "bVN0YXR1cxITCg9TVFJFQU1fRU5BQkxJTkcQARIRCg1TVFJFQU1fQUNUSVZF",
            "EAIqOQoKQWN0aW9uVHlwZRILCgdQVVRfUk9XEAESDgoKVVBEQVRFX1JPVxAC",
            "Eg4KCkRFTEVURV9ST1cQAw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PrimaryKeyType), typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DefinedColumnType), typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PrimaryKeyOption), typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.BloomFilterType), typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DataBlockType), typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CompressType), typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexUpdateMode), typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexType), typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStatus), typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.RowExistenceExpectation), typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReturnType), typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.OperationType), typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Direction), typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamStatus), typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ActionType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Error), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Error.Parser, new[]{ "Code", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PrimaryKeySchema), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PrimaryKeySchema.Parser, new[]{ "Name", "Type", "Option" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DefinedColumnSchema), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DefinedColumnSchema.Parser, new[]{ "Name", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PartitionRange), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PartitionRange.Parser, new[]{ "Begin", "End" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableOptions), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableOptions.Parser, new[]{ "TimeToLive", "MaxVersions", "BloomFilterType", "BlockSize", "DeviationCellVersionInSec" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexMeta), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexMeta.Parser, new[]{ "Name", "PrimaryKey", "DefinedColumn", "IndexUpdateMode", "IndexType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableMeta), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableMeta.Parser, new[]{ "TableName", "PrimaryKey", "DefinedColumn", "IndexMeta" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Condition), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Condition.Parser, new[]{ "RowExistence", "ColumnCondition" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CapacityUnit), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CapacityUnit.Parser, new[]{ "Read", "Write" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReservedThroughputDetails), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReservedThroughputDetails.Parser, new[]{ "CapacityUnit", "LastIncreaseTime", "LastDecreaseTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReservedThroughput), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReservedThroughput.Parser, new[]{ "CapacityUnit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity.Parser, new[]{ "CapacityUnit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamSpecification), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamSpecification.Parser, new[]{ "EnableStream", "ExpirationTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamDetails), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamDetails.Parser, new[]{ "EnableStream", "StreamId", "ExpirationTime", "LastEnableTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CreateTableRequest), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CreateTableRequest.Parser, new[]{ "TableMeta", "ReservedThroughput", "TableOptions", "Partitions", "StreamSpec", "IndexMetas" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CreateTableResponse), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CreateTableResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CreateIndexRequest), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CreateIndexRequest.Parser, new[]{ "MainTableName", "IndexMeta", "IncludeBaseData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CreateIndexResponse), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CreateIndexResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DropIndexRequest), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DropIndexRequest.Parser, new[]{ "MainTableName", "IndexName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DropIndexResponse), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DropIndexResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.UpdateTableRequest), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.UpdateTableRequest.Parser, new[]{ "TableName", "ReservedThroughput", "TableOptions", "StreamSpec" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.UpdateTableResponse), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.UpdateTableResponse.Parser, new[]{ "ReservedThroughputDetails", "TableOptions", "StreamDetails" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DescribeTableRequest), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DescribeTableRequest.Parser, new[]{ "TableName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DescribeTableResponse), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DescribeTableResponse.Parser, new[]{ "TableMeta", "ReservedThroughputDetails", "TableOptions", "TableStatus", "StreamDetails", "ShardSplits", "IndexMetas" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ListTableRequest), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ListTableRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ListTableResponse), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ListTableResponse.Parser, new[]{ "TableNames" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DeleteTableRequest), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DeleteTableRequest.Parser, new[]{ "TableName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DeleteTableResponse), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DeleteTableResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.LoadTableRequest), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.LoadTableRequest.Parser, new[]{ "TableName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.LoadTableResponse), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.LoadTableResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.UnloadTableRequest), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.UnloadTableRequest.Parser, new[]{ "TableName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.UnloadTableResponse), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.UnloadTableResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TimeRange), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TimeRange.Parser, new[]{ "StartTime", "EndTime", "SpecificTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReturnContent), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReturnContent.Parser, new[]{ "ReturnType", "ReturnColumnNames" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.GetRowRequest), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.GetRowRequest.Parser, new[]{ "TableName", "PrimaryKey", "ColumnsToGet", "TimeRange", "MaxVersions", "CacheBlocks", "Filter", "StartColumn", "EndColumn", "Token", "TransactionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.GetRowResponse), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.GetRowResponse.Parser, new[]{ "Consumed", "Row", "NextToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.UpdateRowRequest), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.UpdateRowRequest.Parser, new[]{ "TableName", "RowChange", "Condition", "ReturnContent", "TransactionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.UpdateRowResponse), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.UpdateRowResponse.Parser, new[]{ "Consumed", "Row" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PutRowRequest), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PutRowRequest.Parser, new[]{ "TableName", "Row", "Condition", "ReturnContent", "TransactionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PutRowResponse), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PutRowResponse.Parser, new[]{ "Consumed", "Row" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DeleteRowRequest), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DeleteRowRequest.Parser, new[]{ "TableName", "PrimaryKey", "Condition", "ReturnContent", "TransactionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DeleteRowResponse), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DeleteRowResponse.Parser, new[]{ "Consumed", "Row" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableInBatchGetRowRequest), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableInBatchGetRowRequest.Parser, new[]{ "TableName", "PrimaryKey", "Token", "ColumnsToGet", "TimeRange", "MaxVersions", "CacheBlocks", "Filter", "StartColumn", "EndColumn" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.BatchGetRowRequest), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.BatchGetRowRequest.Parser, new[]{ "Tables" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.RowInBatchGetRowResponse), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.RowInBatchGetRowResponse.Parser, new[]{ "IsOk", "Error", "Consumed", "Row", "NextToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableInBatchGetRowResponse), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableInBatchGetRowResponse.Parser, new[]{ "TableName", "Rows" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.BatchGetRowResponse), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.BatchGetRowResponse.Parser, new[]{ "Tables" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.RowInBatchWriteRowRequest), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.RowInBatchWriteRowRequest.Parser, new[]{ "Type", "RowChange", "Condition", "ReturnContent" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableInBatchWriteRowRequest), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableInBatchWriteRowRequest.Parser, new[]{ "TableName", "Rows" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.BatchWriteRowRequest), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.BatchWriteRowRequest.Parser, new[]{ "Tables", "TransactionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.RowInBatchWriteRowResponse), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.RowInBatchWriteRowResponse.Parser, new[]{ "IsOk", "Error", "Consumed", "Row" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableInBatchWriteRowResponse), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableInBatchWriteRowResponse.Parser, new[]{ "TableName", "Rows" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.BatchWriteRowResponse), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.BatchWriteRowResponse.Parser, new[]{ "Tables" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.GetRangeRequest), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.GetRangeRequest.Parser, new[]{ "TableName", "Direction", "ColumnsToGet", "TimeRange", "MaxVersions", "Limit", "InclusiveStartPrimaryKey", "ExclusiveEndPrimaryKey", "CacheBlocks", "Filter", "StartColumn", "EndColumn", "Token", "TransactionId", "DataBlockTypeHint", "ReturnEntirePrimaryKeys", "CompressTypeHint" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.GetRangeResponse), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.GetRangeResponse.Parser, new[]{ "Consumed", "Rows", "NextStartPrimaryKey", "NextToken", "DataBlockType", "CompressType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StartLocalTransactionRequest), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StartLocalTransactionRequest.Parser, new[]{ "TableName", "Key" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StartLocalTransactionResponse), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StartLocalTransactionResponse.Parser, new[]{ "TransactionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CommitTransactionRequest), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CommitTransactionRequest.Parser, new[]{ "TransactionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CommitTransactionResponse), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CommitTransactionResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.AbortTransactionRequest), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.AbortTransactionRequest.Parser, new[]{ "TransactionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.AbortTransactionResponse), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.AbortTransactionResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ListStreamRequest), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ListStreamRequest.Parser, new[]{ "TableName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Stream), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Stream.Parser, new[]{ "StreamId", "TableName", "CreationTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ListStreamResponse), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ListStreamResponse.Parser, new[]{ "Streams" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamShard), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamShard.Parser, new[]{ "ShardId", "ParentId", "ParentSiblingId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DescribeStreamRequest), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DescribeStreamRequest.Parser, new[]{ "StreamId", "InclusiveStartShardId", "ShardLimit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DescribeStreamResponse), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DescribeStreamResponse.Parser, new[]{ "StreamId", "ExpirationTime", "TableName", "CreationTime", "StreamStatus", "Shards", "NextShardId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.GetShardIteratorRequest), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.GetShardIteratorRequest.Parser, new[]{ "StreamId", "ShardId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.GetShardIteratorResponse), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.GetShardIteratorResponse.Parser, new[]{ "ShardIterator" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.GetStreamRecordRequest), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.GetStreamRecordRequest.Parser, new[]{ "ShardIterator", "Limit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.GetStreamRecordResponse), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.GetStreamRecordResponse.Parser, new[]{ "StreamRecords", "NextShardIterator" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.GetStreamRecordResponse.Types.StreamRecord), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.GetStreamRecordResponse.Types.StreamRecord.Parser, new[]{ "ActionType", "Record" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ComputeSplitPointsBySizeRequest), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ComputeSplitPointsBySizeRequest.Parser, new[]{ "TableName", "SplitSize", "SplitSizeUnitInByte" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ComputeSplitPointsBySizeResponse), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ComputeSplitPointsBySizeResponse.Parser, new[]{ "Consumed", "Schema", "SplitPoints", "Locations" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ComputeSplitPointsBySizeResponse.Types.SplitLocation), global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ComputeSplitPointsBySizeResponse.Types.SplitLocation.Parser, new[]{ "Location", "Repeat" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Enums
  public enum PrimaryKeyType {
    [pbr::OriginalName("INTEGER")] Integer = 1,
    [pbr::OriginalName("STRING")] String = 2,
    [pbr::OriginalName("BINARY")] Binary = 3,
  }

  public enum DefinedColumnType {
    [pbr::OriginalName("DCT_INTEGER")] DctInteger = 1,
    [pbr::OriginalName("DCT_DOUBLE")] DctDouble = 2,
    [pbr::OriginalName("DCT_BOOLEAN")] DctBoolean = 3,
    [pbr::OriginalName("DCT_STRING")] DctString = 4,
    /// <summary>
    /// field 5 is reserved for date type, not supported yet
    /// field 6 is reserved for decimal type, not supported yet
    /// </summary>
    [pbr::OriginalName("DCT_BLOB")] DctBlob = 7,
  }

  public enum PrimaryKeyOption {
    [pbr::OriginalName("AUTO_INCREMENT")] AutoIncrement = 1,
  }

  public enum BloomFilterType {
    [pbr::OriginalName("NONE")] None = 1,
    [pbr::OriginalName("CELL")] Cell = 2,
    [pbr::OriginalName("ROW")] Row = 3,
  }

  public enum DataBlockType {
    [pbr::OriginalName("DBT_PLAIN_BUFFER")] DbtPlainBuffer = 0,
    [pbr::OriginalName("DBT_SIMPLE_ROW_MATRIX")] DbtSimpleRowMatrix = 1,
  }

  public enum CompressType {
    [pbr::OriginalName("CPT_NONE")] CptNone = 0,
  }

  public enum IndexUpdateMode {
    [pbr::OriginalName("IUM_ASYNC_INDEX")] IumAsyncIndex = 0,
    [pbr::OriginalName("IUM_SYNC_INDEX")] IumSyncIndex = 1,
  }

  public enum IndexType {
    [pbr::OriginalName("IT_GLOBAL_INDEX")] ItGlobalIndex = 0,
    [pbr::OriginalName("IT_LOCAL_INDEX")] ItLocalIndex = 1,
  }

  /// <summary>
  ///*
  /// 表的状态变更只与用户的操作对应，内部的机器failover等状况不对应表的状态变更。
  /// 有三个考虑：
  ///     一是一般场景下用户只会在做了对表的修改操作后才会去检查表的状态；
  ///     二是内部机器failover导致访问异常到用户能够查看到表的状态变更这两个时刻之间会有一段延迟，无法将表的不可服务状态与用户查看到的表的状态完全匹配上。
  ///     三是内部机器failover后不能说是表的整个状态变更，而应该是partition的状态变更，对应表的状态就是PARTIAL_FAILOVER，这个partial的粒度无法体现，会让用户更加困惑。
  /// </summary>
  public enum TableStatus {
    /// <summary>
    /// 表处于可服务状态。
    /// </summary>
    [pbr::OriginalName("ACTIVE")] Active = 1,
    /// <summary>
    /// 用户通过UnloadTable将表禁用。
    /// </summary>
    [pbr::OriginalName("INACTIVE")] Inactive = 2,
    /// <summary>
    /// 表正在被创建，partition还未全部加载完毕；或者表刚从INACTIVE状态被Enable。
    /// </summary>
    [pbr::OriginalName("LOADING")] Loading = 3,
    /// <summary>
    /// 表正在被删除（从delete table到partition完全unload的这段期间）或者表从ACTIVE状态被Unload。
    /// </summary>
    [pbr::OriginalName("UNLOADING")] Unloading = 4,
    /// <summary>
    /// 表正在被更新（table属性变更、预留吞吐量变更）。
    /// </summary>
    [pbr::OriginalName("UPDATING")] Updating = 5,
  }

  public enum RowExistenceExpectation {
    [pbr::OriginalName("IGNORE")] Ignore = 0,
    [pbr::OriginalName("EXPECT_EXIST")] ExpectExist = 1,
    [pbr::OriginalName("EXPECT_NOT_EXIST")] ExpectNotExist = 2,
  }

  public enum ReturnType {
    [pbr::OriginalName("RT_NONE")] RtNone = 0,
    [pbr::OriginalName("RT_PK")] RtPk = 1,
    [pbr::OriginalName("RT_AFTER_MODIFY")] RtAfterModify = 2,
  }

  public enum OperationType {
    [pbr::OriginalName("PUT")] Put = 1,
    [pbr::OriginalName("UPDATE")] Update = 2,
    [pbr::OriginalName("DELETE")] Delete = 3,
  }

  /// <summary>
  /// #############################################  GetRange  ############################################# 
  /// </summary>
  public enum Direction {
    [pbr::OriginalName("FORWARD")] Forward = 0,
    [pbr::OriginalName("BACKWARD")] Backward = 1,
  }

  public enum StreamStatus {
    [pbr::OriginalName("STREAM_ENABLING")] StreamEnabling = 1,
    [pbr::OriginalName("STREAM_ACTIVE")] StreamActive = 2,
  }

  public enum ActionType {
    [pbr::OriginalName("PUT_ROW")] PutRow = 1,
    [pbr::OriginalName("UPDATE_ROW")] UpdateRow = 2,
    [pbr::OriginalName("DELETE_ROW")] DeleteRow = 3,
  }

  #endregion

  #region Messages
  public sealed partial class Error : pb::IMessage<Error> {
    private static readonly pb::MessageParser<Error> _parser = new pb::MessageParser<Error>(() => new Error());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Error> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error(Error other) : this() {
      code_ = other.code_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error Clone() {
      return new Error(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static string CodeDefaultValue = "";

    private string code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_ ?? CodeDefaultValue; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCode {
      get { return code_ != null; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCode() {
      code_ = null;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Error);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Error other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasCode) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (HasMessage) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Error other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PrimaryKeySchema : pb::IMessage<PrimaryKeySchema> {
    private static readonly pb::MessageParser<PrimaryKeySchema> _parser = new pb::MessageParser<PrimaryKeySchema>(() => new PrimaryKeySchema());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrimaryKeySchema> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrimaryKeySchema() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrimaryKeySchema(PrimaryKeySchema other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      type_ = other.type_;
      option_ = other.option_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrimaryKeySchema Clone() {
      return new PrimaryKeySchema(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private readonly static global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PrimaryKeyType TypeDefaultValue = global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PrimaryKeyType.Integer;

    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PrimaryKeyType type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PrimaryKeyType Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "option" field.</summary>
    public const int OptionFieldNumber = 3;
    private readonly static global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PrimaryKeyOption OptionDefaultValue = global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PrimaryKeyOption.AutoIncrement;

    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PrimaryKeyOption option_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PrimaryKeyOption Option {
      get { if ((_hasBits0 & 2) != 0) { return option_; } else { return OptionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        option_ = value;
      }
    }
    /// <summary>Gets whether the "option" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOption {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "option" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOption() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrimaryKeySchema);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrimaryKeySchema other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (Option != other.Option) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasOption) hash ^= Option.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (HasOption) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Option);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (HasOption) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Option);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrimaryKeySchema other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasOption) {
        Option = other.Option;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PrimaryKeyType) input.ReadEnum();
            break;
          }
          case 24: {
            Option = (global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PrimaryKeyOption) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DefinedColumnSchema : pb::IMessage<DefinedColumnSchema> {
    private static readonly pb::MessageParser<DefinedColumnSchema> _parser = new pb::MessageParser<DefinedColumnSchema>(() => new DefinedColumnSchema());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DefinedColumnSchema> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DefinedColumnSchema() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DefinedColumnSchema(DefinedColumnSchema other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DefinedColumnSchema Clone() {
      return new DefinedColumnSchema(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private readonly static global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DefinedColumnType TypeDefaultValue = global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DefinedColumnType.DctInteger;

    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DefinedColumnType type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DefinedColumnType Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DefinedColumnSchema);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DefinedColumnSchema other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DefinedColumnSchema other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DefinedColumnType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PartitionRange : pb::IMessage<PartitionRange> {
    private static readonly pb::MessageParser<PartitionRange> _parser = new pb::MessageParser<PartitionRange>(() => new PartitionRange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PartitionRange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PartitionRange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PartitionRange(PartitionRange other) : this() {
      begin_ = other.begin_;
      end_ = other.end_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PartitionRange Clone() {
      return new PartitionRange(this);
    }

    /// <summary>Field number for the "begin" field.</summary>
    public const int BeginFieldNumber = 1;
    private readonly static pb::ByteString BeginDefaultValue = pb::ByteString.Empty;

    private pb::ByteString begin_;
    /// <summary>
    /// encoded as SQLVariant
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Begin {
      get { return begin_ ?? BeginDefaultValue; }
      set {
        begin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "begin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBegin {
      get { return begin_ != null; }
    }
    /// <summary>Clears the value of the "begin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBegin() {
      begin_ = null;
    }

    /// <summary>Field number for the "end" field.</summary>
    public const int EndFieldNumber = 2;
    private readonly static pb::ByteString EndDefaultValue = pb::ByteString.Empty;

    private pb::ByteString end_;
    /// <summary>
    /// encoded as SQLVariant
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString End {
      get { return end_ ?? EndDefaultValue; }
      set {
        end_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "end" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEnd {
      get { return end_ != null; }
    }
    /// <summary>Clears the value of the "end" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEnd() {
      end_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PartitionRange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PartitionRange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Begin != other.Begin) return false;
      if (End != other.End) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBegin) hash ^= Begin.GetHashCode();
      if (HasEnd) hash ^= End.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasBegin) {
        output.WriteRawTag(10);
        output.WriteBytes(Begin);
      }
      if (HasEnd) {
        output.WriteRawTag(18);
        output.WriteBytes(End);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasBegin) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Begin);
      }
      if (HasEnd) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(End);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PartitionRange other) {
      if (other == null) {
        return;
      }
      if (other.HasBegin) {
        Begin = other.Begin;
      }
      if (other.HasEnd) {
        End = other.End;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Begin = input.ReadBytes();
            break;
          }
          case 18: {
            End = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TableOptions : pb::IMessage<TableOptions> {
    private static readonly pb::MessageParser<TableOptions> _parser = new pb::MessageParser<TableOptions>(() => new TableOptions());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TableOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableOptions(TableOptions other) : this() {
      _hasBits0 = other._hasBits0;
      timeToLive_ = other.timeToLive_;
      maxVersions_ = other.maxVersions_;
      bloomFilterType_ = other.bloomFilterType_;
      blockSize_ = other.blockSize_;
      deviationCellVersionInSec_ = other.deviationCellVersionInSec_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableOptions Clone() {
      return new TableOptions(this);
    }

    /// <summary>Field number for the "time_to_live" field.</summary>
    public const int TimeToLiveFieldNumber = 1;
    private readonly static int TimeToLiveDefaultValue = 0;

    private int timeToLive_;
    /// <summary>
    /// 可以动态更改
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TimeToLive {
      get { if ((_hasBits0 & 1) != 0) { return timeToLive_; } else { return TimeToLiveDefaultValue; } }
      set {
        _hasBits0 |= 1;
        timeToLive_ = value;
      }
    }
    /// <summary>Gets whether the "time_to_live" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTimeToLive {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "time_to_live" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTimeToLive() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "max_versions" field.</summary>
    public const int MaxVersionsFieldNumber = 2;
    private readonly static int MaxVersionsDefaultValue = 0;

    private int maxVersions_;
    /// <summary>
    /// 可以动态更改
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxVersions {
      get { if ((_hasBits0 & 2) != 0) { return maxVersions_; } else { return MaxVersionsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        maxVersions_ = value;
      }
    }
    /// <summary>Gets whether the "max_versions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMaxVersions {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "max_versions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMaxVersions() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "bloom_filter_type" field.</summary>
    public const int BloomFilterTypeFieldNumber = 3;
    private readonly static global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.BloomFilterType BloomFilterTypeDefaultValue = global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.BloomFilterType.None;

    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.BloomFilterType bloomFilterType_;
    /// <summary>
    /// 可以动态更改
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.BloomFilterType BloomFilterType {
      get { if ((_hasBits0 & 4) != 0) { return bloomFilterType_; } else { return BloomFilterTypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        bloomFilterType_ = value;
      }
    }
    /// <summary>Gets whether the "bloom_filter_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBloomFilterType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "bloom_filter_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBloomFilterType() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "block_size" field.</summary>
    public const int BlockSizeFieldNumber = 4;
    private readonly static int BlockSizeDefaultValue = 0;

    private int blockSize_;
    /// <summary>
    /// 可以动态更改
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BlockSize {
      get { if ((_hasBits0 & 8) != 0) { return blockSize_; } else { return BlockSizeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        blockSize_ = value;
      }
    }
    /// <summary>Gets whether the "block_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBlockSize {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "block_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBlockSize() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "deviation_cell_version_in_sec" field.</summary>
    public const int DeviationCellVersionInSecFieldNumber = 5;
    private readonly static long DeviationCellVersionInSecDefaultValue = 0L;

    private long deviationCellVersionInSec_;
    /// <summary>
    /// 可以动态修改
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DeviationCellVersionInSec {
      get { if ((_hasBits0 & 16) != 0) { return deviationCellVersionInSec_; } else { return DeviationCellVersionInSecDefaultValue; } }
      set {
        _hasBits0 |= 16;
        deviationCellVersionInSec_ = value;
      }
    }
    /// <summary>Gets whether the "deviation_cell_version_in_sec" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeviationCellVersionInSec {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "deviation_cell_version_in_sec" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeviationCellVersionInSec() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TableOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TableOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TimeToLive != other.TimeToLive) return false;
      if (MaxVersions != other.MaxVersions) return false;
      if (BloomFilterType != other.BloomFilterType) return false;
      if (BlockSize != other.BlockSize) return false;
      if (DeviationCellVersionInSec != other.DeviationCellVersionInSec) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTimeToLive) hash ^= TimeToLive.GetHashCode();
      if (HasMaxVersions) hash ^= MaxVersions.GetHashCode();
      if (HasBloomFilterType) hash ^= BloomFilterType.GetHashCode();
      if (HasBlockSize) hash ^= BlockSize.GetHashCode();
      if (HasDeviationCellVersionInSec) hash ^= DeviationCellVersionInSec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTimeToLive) {
        output.WriteRawTag(8);
        output.WriteInt32(TimeToLive);
      }
      if (HasMaxVersions) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxVersions);
      }
      if (HasBloomFilterType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) BloomFilterType);
      }
      if (HasBlockSize) {
        output.WriteRawTag(32);
        output.WriteInt32(BlockSize);
      }
      if (HasDeviationCellVersionInSec) {
        output.WriteRawTag(40);
        output.WriteInt64(DeviationCellVersionInSec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTimeToLive) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeToLive);
      }
      if (HasMaxVersions) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxVersions);
      }
      if (HasBloomFilterType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BloomFilterType);
      }
      if (HasBlockSize) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BlockSize);
      }
      if (HasDeviationCellVersionInSec) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DeviationCellVersionInSec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TableOptions other) {
      if (other == null) {
        return;
      }
      if (other.HasTimeToLive) {
        TimeToLive = other.TimeToLive;
      }
      if (other.HasMaxVersions) {
        MaxVersions = other.MaxVersions;
      }
      if (other.HasBloomFilterType) {
        BloomFilterType = other.BloomFilterType;
      }
      if (other.HasBlockSize) {
        BlockSize = other.BlockSize;
      }
      if (other.HasDeviationCellVersionInSec) {
        DeviationCellVersionInSec = other.DeviationCellVersionInSec;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TimeToLive = input.ReadInt32();
            break;
          }
          case 16: {
            MaxVersions = input.ReadInt32();
            break;
          }
          case 24: {
            BloomFilterType = (global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.BloomFilterType) input.ReadEnum();
            break;
          }
          case 32: {
            BlockSize = input.ReadInt32();
            break;
          }
          case 40: {
            DeviationCellVersionInSec = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IndexMeta : pb::IMessage<IndexMeta> {
    private static readonly pb::MessageParser<IndexMeta> _parser = new pb::MessageParser<IndexMeta>(() => new IndexMeta());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IndexMeta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndexMeta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndexMeta(IndexMeta other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      primaryKey_ = other.primaryKey_.Clone();
      definedColumn_ = other.definedColumn_.Clone();
      indexUpdateMode_ = other.indexUpdateMode_;
      indexType_ = other.indexType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndexMeta Clone() {
      return new IndexMeta(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "primary_key" field.</summary>
    public const int PrimaryKeyFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_primaryKey_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> primaryKey_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> PrimaryKey {
      get { return primaryKey_; }
    }

    /// <summary>Field number for the "defined_column" field.</summary>
    public const int DefinedColumnFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_definedColumn_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> definedColumn_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> DefinedColumn {
      get { return definedColumn_; }
    }

    /// <summary>Field number for the "index_update_mode" field.</summary>
    public const int IndexUpdateModeFieldNumber = 4;
    private readonly static global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexUpdateMode IndexUpdateModeDefaultValue = global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexUpdateMode.IumAsyncIndex;

    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexUpdateMode indexUpdateMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexUpdateMode IndexUpdateMode {
      get { if ((_hasBits0 & 1) != 0) { return indexUpdateMode_; } else { return IndexUpdateModeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        indexUpdateMode_ = value;
      }
    }
    /// <summary>Gets whether the "index_update_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIndexUpdateMode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "index_update_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIndexUpdateMode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "index_type" field.</summary>
    public const int IndexTypeFieldNumber = 5;
    private readonly static global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexType IndexTypeDefaultValue = global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexType.ItGlobalIndex;

    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexType indexType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexType IndexType {
      get { if ((_hasBits0 & 2) != 0) { return indexType_; } else { return IndexTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        indexType_ = value;
      }
    }
    /// <summary>Gets whether the "index_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIndexType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "index_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIndexType() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IndexMeta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IndexMeta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!primaryKey_.Equals(other.primaryKey_)) return false;
      if(!definedColumn_.Equals(other.definedColumn_)) return false;
      if (IndexUpdateMode != other.IndexUpdateMode) return false;
      if (IndexType != other.IndexType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      hash ^= primaryKey_.GetHashCode();
      hash ^= definedColumn_.GetHashCode();
      if (HasIndexUpdateMode) hash ^= IndexUpdateMode.GetHashCode();
      if (HasIndexType) hash ^= IndexType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      primaryKey_.WriteTo(output, _repeated_primaryKey_codec);
      definedColumn_.WriteTo(output, _repeated_definedColumn_codec);
      if (HasIndexUpdateMode) {
        output.WriteRawTag(32);
        output.WriteEnum((int) IndexUpdateMode);
      }
      if (HasIndexType) {
        output.WriteRawTag(40);
        output.WriteEnum((int) IndexType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += primaryKey_.CalculateSize(_repeated_primaryKey_codec);
      size += definedColumn_.CalculateSize(_repeated_definedColumn_codec);
      if (HasIndexUpdateMode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) IndexUpdateMode);
      }
      if (HasIndexType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) IndexType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IndexMeta other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      primaryKey_.Add(other.primaryKey_);
      definedColumn_.Add(other.definedColumn_);
      if (other.HasIndexUpdateMode) {
        IndexUpdateMode = other.IndexUpdateMode;
      }
      if (other.HasIndexType) {
        IndexType = other.IndexType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            primaryKey_.AddEntriesFrom(input, _repeated_primaryKey_codec);
            break;
          }
          case 26: {
            definedColumn_.AddEntriesFrom(input, _repeated_definedColumn_codec);
            break;
          }
          case 32: {
            IndexUpdateMode = (global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexUpdateMode) input.ReadEnum();
            break;
          }
          case 40: {
            IndexType = (global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TableMeta : pb::IMessage<TableMeta> {
    private static readonly pb::MessageParser<TableMeta> _parser = new pb::MessageParser<TableMeta>(() => new TableMeta());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TableMeta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableMeta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableMeta(TableMeta other) : this() {
      tableName_ = other.tableName_;
      primaryKey_ = other.primaryKey_.Clone();
      definedColumn_ = other.definedColumn_.Clone();
      indexMeta_ = other.indexMeta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableMeta Clone() {
      return new TableMeta(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private readonly static string TableNameDefaultValue = "";

    private string tableName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_ ?? TableNameDefaultValue; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTableName {
      get { return tableName_ != null; }
    }
    /// <summary>Clears the value of the "table_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTableName() {
      tableName_ = null;
    }

    /// <summary>Field number for the "primary_key" field.</summary>
    public const int PrimaryKeyFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PrimaryKeySchema> _repeated_primaryKey_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PrimaryKeySchema.Parser);
    private readonly pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PrimaryKeySchema> primaryKey_ = new pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PrimaryKeySchema>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PrimaryKeySchema> PrimaryKey {
      get { return primaryKey_; }
    }

    /// <summary>Field number for the "defined_column" field.</summary>
    public const int DefinedColumnFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DefinedColumnSchema> _repeated_definedColumn_codec
        = pb::FieldCodec.ForMessage(26, global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DefinedColumnSchema.Parser);
    private readonly pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DefinedColumnSchema> definedColumn_ = new pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DefinedColumnSchema>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DefinedColumnSchema> DefinedColumn {
      get { return definedColumn_; }
    }

    /// <summary>Field number for the "index_meta" field.</summary>
    public const int IndexMetaFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexMeta> _repeated_indexMeta_codec
        = pb::FieldCodec.ForMessage(34, global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexMeta.Parser);
    private readonly pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexMeta> indexMeta_ = new pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexMeta>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexMeta> IndexMeta {
      get { return indexMeta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TableMeta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TableMeta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if(!primaryKey_.Equals(other.primaryKey_)) return false;
      if(!definedColumn_.Equals(other.definedColumn_)) return false;
      if(!indexMeta_.Equals(other.indexMeta_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTableName) hash ^= TableName.GetHashCode();
      hash ^= primaryKey_.GetHashCode();
      hash ^= definedColumn_.GetHashCode();
      hash ^= indexMeta_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTableName) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      primaryKey_.WriteTo(output, _repeated_primaryKey_codec);
      definedColumn_.WriteTo(output, _repeated_definedColumn_codec);
      indexMeta_.WriteTo(output, _repeated_indexMeta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTableName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      size += primaryKey_.CalculateSize(_repeated_primaryKey_codec);
      size += definedColumn_.CalculateSize(_repeated_definedColumn_codec);
      size += indexMeta_.CalculateSize(_repeated_indexMeta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TableMeta other) {
      if (other == null) {
        return;
      }
      if (other.HasTableName) {
        TableName = other.TableName;
      }
      primaryKey_.Add(other.primaryKey_);
      definedColumn_.Add(other.definedColumn_);
      indexMeta_.Add(other.indexMeta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            primaryKey_.AddEntriesFrom(input, _repeated_primaryKey_codec);
            break;
          }
          case 26: {
            definedColumn_.AddEntriesFrom(input, _repeated_definedColumn_codec);
            break;
          }
          case 34: {
            indexMeta_.AddEntriesFrom(input, _repeated_indexMeta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Condition : pb::IMessage<Condition> {
    private static readonly pb::MessageParser<Condition> _parser = new pb::MessageParser<Condition>(() => new Condition());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Condition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Condition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Condition(Condition other) : this() {
      _hasBits0 = other._hasBits0;
      rowExistence_ = other.rowExistence_;
      columnCondition_ = other.columnCondition_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Condition Clone() {
      return new Condition(this);
    }

    /// <summary>Field number for the "row_existence" field.</summary>
    public const int RowExistenceFieldNumber = 1;
    private readonly static global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.RowExistenceExpectation RowExistenceDefaultValue = global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.RowExistenceExpectation.Ignore;

    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.RowExistenceExpectation rowExistence_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.RowExistenceExpectation RowExistence {
      get { if ((_hasBits0 & 1) != 0) { return rowExistence_; } else { return RowExistenceDefaultValue; } }
      set {
        _hasBits0 |= 1;
        rowExistence_ = value;
      }
    }
    /// <summary>Gets whether the "row_existence" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRowExistence {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "row_existence" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRowExistence() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "column_condition" field.</summary>
    public const int ColumnConditionFieldNumber = 2;
    private readonly static pb::ByteString ColumnConditionDefaultValue = pb::ByteString.Empty;

    private pb::ByteString columnCondition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ColumnCondition {
      get { return columnCondition_ ?? ColumnConditionDefaultValue; }
      set {
        columnCondition_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "column_condition" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasColumnCondition {
      get { return columnCondition_ != null; }
    }
    /// <summary>Clears the value of the "column_condition" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearColumnCondition() {
      columnCondition_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Condition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Condition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RowExistence != other.RowExistence) return false;
      if (ColumnCondition != other.ColumnCondition) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRowExistence) hash ^= RowExistence.GetHashCode();
      if (HasColumnCondition) hash ^= ColumnCondition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasRowExistence) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RowExistence);
      }
      if (HasColumnCondition) {
        output.WriteRawTag(18);
        output.WriteBytes(ColumnCondition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasRowExistence) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RowExistence);
      }
      if (HasColumnCondition) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ColumnCondition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Condition other) {
      if (other == null) {
        return;
      }
      if (other.HasRowExistence) {
        RowExistence = other.RowExistence;
      }
      if (other.HasColumnCondition) {
        ColumnCondition = other.ColumnCondition;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RowExistence = (global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.RowExistenceExpectation) input.ReadEnum();
            break;
          }
          case 18: {
            ColumnCondition = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CapacityUnit : pb::IMessage<CapacityUnit> {
    private static readonly pb::MessageParser<CapacityUnit> _parser = new pb::MessageParser<CapacityUnit>(() => new CapacityUnit());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CapacityUnit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CapacityUnit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CapacityUnit(CapacityUnit other) : this() {
      _hasBits0 = other._hasBits0;
      read_ = other.read_;
      write_ = other.write_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CapacityUnit Clone() {
      return new CapacityUnit(this);
    }

    /// <summary>Field number for the "read" field.</summary>
    public const int ReadFieldNumber = 1;
    private readonly static int ReadDefaultValue = 0;

    private int read_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Read {
      get { if ((_hasBits0 & 1) != 0) { return read_; } else { return ReadDefaultValue; } }
      set {
        _hasBits0 |= 1;
        read_ = value;
      }
    }
    /// <summary>Gets whether the "read" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRead {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "read" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRead() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "write" field.</summary>
    public const int WriteFieldNumber = 2;
    private readonly static int WriteDefaultValue = 0;

    private int write_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Write {
      get { if ((_hasBits0 & 2) != 0) { return write_; } else { return WriteDefaultValue; } }
      set {
        _hasBits0 |= 2;
        write_ = value;
      }
    }
    /// <summary>Gets whether the "write" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasWrite {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "write" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearWrite() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CapacityUnit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CapacityUnit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Read != other.Read) return false;
      if (Write != other.Write) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRead) hash ^= Read.GetHashCode();
      if (HasWrite) hash ^= Write.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasRead) {
        output.WriteRawTag(8);
        output.WriteInt32(Read);
      }
      if (HasWrite) {
        output.WriteRawTag(16);
        output.WriteInt32(Write);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasRead) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Read);
      }
      if (HasWrite) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Write);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CapacityUnit other) {
      if (other == null) {
        return;
      }
      if (other.HasRead) {
        Read = other.Read;
      }
      if (other.HasWrite) {
        Write = other.Write;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Read = input.ReadInt32();
            break;
          }
          case 16: {
            Write = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservedThroughputDetails : pb::IMessage<ReservedThroughputDetails> {
    private static readonly pb::MessageParser<ReservedThroughputDetails> _parser = new pb::MessageParser<ReservedThroughputDetails>(() => new ReservedThroughputDetails());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservedThroughputDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservedThroughputDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservedThroughputDetails(ReservedThroughputDetails other) : this() {
      _hasBits0 = other._hasBits0;
      capacityUnit_ = other.capacityUnit_ != null ? other.capacityUnit_.Clone() : null;
      lastIncreaseTime_ = other.lastIncreaseTime_;
      lastDecreaseTime_ = other.lastDecreaseTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservedThroughputDetails Clone() {
      return new ReservedThroughputDetails(this);
    }

    /// <summary>Field number for the "capacity_unit" field.</summary>
    public const int CapacityUnitFieldNumber = 1;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CapacityUnit capacityUnit_;
    /// <summary>
    /// 表当前的预留吞吐量的值。
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CapacityUnit CapacityUnit {
      get { return capacityUnit_; }
      set {
        capacityUnit_ = value;
      }
    }

    /// <summary>Field number for the "last_increase_time" field.</summary>
    public const int LastIncreaseTimeFieldNumber = 2;
    private readonly static long LastIncreaseTimeDefaultValue = 0L;

    private long lastIncreaseTime_;
    /// <summary>
    /// 最后一次上调预留吞吐量的时间。
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastIncreaseTime {
      get { if ((_hasBits0 & 1) != 0) { return lastIncreaseTime_; } else { return LastIncreaseTimeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        lastIncreaseTime_ = value;
      }
    }
    /// <summary>Gets whether the "last_increase_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLastIncreaseTime {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "last_increase_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLastIncreaseTime() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "last_decrease_time" field.</summary>
    public const int LastDecreaseTimeFieldNumber = 3;
    private readonly static long LastDecreaseTimeDefaultValue = 0L;

    private long lastDecreaseTime_;
    /// <summary>
    /// 最后一次下调预留吞吐量的时间。
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastDecreaseTime {
      get { if ((_hasBits0 & 2) != 0) { return lastDecreaseTime_; } else { return LastDecreaseTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        lastDecreaseTime_ = value;
      }
    }
    /// <summary>Gets whether the "last_decrease_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLastDecreaseTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "last_decrease_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLastDecreaseTime() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservedThroughputDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservedThroughputDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CapacityUnit, other.CapacityUnit)) return false;
      if (LastIncreaseTime != other.LastIncreaseTime) return false;
      if (LastDecreaseTime != other.LastDecreaseTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (capacityUnit_ != null) hash ^= CapacityUnit.GetHashCode();
      if (HasLastIncreaseTime) hash ^= LastIncreaseTime.GetHashCode();
      if (HasLastDecreaseTime) hash ^= LastDecreaseTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (capacityUnit_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CapacityUnit);
      }
      if (HasLastIncreaseTime) {
        output.WriteRawTag(16);
        output.WriteInt64(LastIncreaseTime);
      }
      if (HasLastDecreaseTime) {
        output.WriteRawTag(24);
        output.WriteInt64(LastDecreaseTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (capacityUnit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CapacityUnit);
      }
      if (HasLastIncreaseTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastIncreaseTime);
      }
      if (HasLastDecreaseTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastDecreaseTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservedThroughputDetails other) {
      if (other == null) {
        return;
      }
      if (other.capacityUnit_ != null) {
        if (capacityUnit_ == null) {
          CapacityUnit = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CapacityUnit();
        }
        CapacityUnit.MergeFrom(other.CapacityUnit);
      }
      if (other.HasLastIncreaseTime) {
        LastIncreaseTime = other.LastIncreaseTime;
      }
      if (other.HasLastDecreaseTime) {
        LastDecreaseTime = other.LastDecreaseTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (capacityUnit_ == null) {
              CapacityUnit = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CapacityUnit();
            }
            input.ReadMessage(CapacityUnit);
            break;
          }
          case 16: {
            LastIncreaseTime = input.ReadInt64();
            break;
          }
          case 24: {
            LastDecreaseTime = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReservedThroughput : pb::IMessage<ReservedThroughput> {
    private static readonly pb::MessageParser<ReservedThroughput> _parser = new pb::MessageParser<ReservedThroughput>(() => new ReservedThroughput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReservedThroughput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservedThroughput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservedThroughput(ReservedThroughput other) : this() {
      capacityUnit_ = other.capacityUnit_ != null ? other.capacityUnit_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReservedThroughput Clone() {
      return new ReservedThroughput(this);
    }

    /// <summary>Field number for the "capacity_unit" field.</summary>
    public const int CapacityUnitFieldNumber = 1;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CapacityUnit capacityUnit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CapacityUnit CapacityUnit {
      get { return capacityUnit_; }
      set {
        capacityUnit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReservedThroughput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReservedThroughput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CapacityUnit, other.CapacityUnit)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (capacityUnit_ != null) hash ^= CapacityUnit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (capacityUnit_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CapacityUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (capacityUnit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CapacityUnit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReservedThroughput other) {
      if (other == null) {
        return;
      }
      if (other.capacityUnit_ != null) {
        if (capacityUnit_ == null) {
          CapacityUnit = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CapacityUnit();
        }
        CapacityUnit.MergeFrom(other.CapacityUnit);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (capacityUnit_ == null) {
              CapacityUnit = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CapacityUnit();
            }
            input.ReadMessage(CapacityUnit);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConsumedCapacity : pb::IMessage<ConsumedCapacity> {
    private static readonly pb::MessageParser<ConsumedCapacity> _parser = new pb::MessageParser<ConsumedCapacity>(() => new ConsumedCapacity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConsumedCapacity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConsumedCapacity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConsumedCapacity(ConsumedCapacity other) : this() {
      capacityUnit_ = other.capacityUnit_ != null ? other.capacityUnit_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConsumedCapacity Clone() {
      return new ConsumedCapacity(this);
    }

    /// <summary>Field number for the "capacity_unit" field.</summary>
    public const int CapacityUnitFieldNumber = 1;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CapacityUnit capacityUnit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CapacityUnit CapacityUnit {
      get { return capacityUnit_; }
      set {
        capacityUnit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConsumedCapacity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConsumedCapacity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CapacityUnit, other.CapacityUnit)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (capacityUnit_ != null) hash ^= CapacityUnit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (capacityUnit_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CapacityUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (capacityUnit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CapacityUnit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConsumedCapacity other) {
      if (other == null) {
        return;
      }
      if (other.capacityUnit_ != null) {
        if (capacityUnit_ == null) {
          CapacityUnit = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CapacityUnit();
        }
        CapacityUnit.MergeFrom(other.CapacityUnit);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (capacityUnit_ == null) {
              CapacityUnit = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CapacityUnit();
            }
            input.ReadMessage(CapacityUnit);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StreamSpecification : pb::IMessage<StreamSpecification> {
    private static readonly pb::MessageParser<StreamSpecification> _parser = new pb::MessageParser<StreamSpecification>(() => new StreamSpecification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamSpecification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamSpecification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamSpecification(StreamSpecification other) : this() {
      _hasBits0 = other._hasBits0;
      enableStream_ = other.enableStream_;
      expirationTime_ = other.expirationTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamSpecification Clone() {
      return new StreamSpecification(this);
    }

    /// <summary>Field number for the "enable_stream" field.</summary>
    public const int EnableStreamFieldNumber = 1;
    private readonly static bool EnableStreamDefaultValue = false;

    private bool enableStream_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EnableStream {
      get { if ((_hasBits0 & 1) != 0) { return enableStream_; } else { return EnableStreamDefaultValue; } }
      set {
        _hasBits0 |= 1;
        enableStream_ = value;
      }
    }
    /// <summary>Gets whether the "enable_stream" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEnableStream {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "enable_stream" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEnableStream() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "expiration_time" field.</summary>
    public const int ExpirationTimeFieldNumber = 2;
    private readonly static int ExpirationTimeDefaultValue = 0;

    private int expirationTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExpirationTime {
      get { if ((_hasBits0 & 2) != 0) { return expirationTime_; } else { return ExpirationTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        expirationTime_ = value;
      }
    }
    /// <summary>Gets whether the "expiration_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExpirationTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "expiration_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExpirationTime() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamSpecification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamSpecification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EnableStream != other.EnableStream) return false;
      if (ExpirationTime != other.ExpirationTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEnableStream) hash ^= EnableStream.GetHashCode();
      if (HasExpirationTime) hash ^= ExpirationTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasEnableStream) {
        output.WriteRawTag(8);
        output.WriteBool(EnableStream);
      }
      if (HasExpirationTime) {
        output.WriteRawTag(16);
        output.WriteInt32(ExpirationTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasEnableStream) {
        size += 1 + 1;
      }
      if (HasExpirationTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExpirationTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamSpecification other) {
      if (other == null) {
        return;
      }
      if (other.HasEnableStream) {
        EnableStream = other.EnableStream;
      }
      if (other.HasExpirationTime) {
        ExpirationTime = other.ExpirationTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EnableStream = input.ReadBool();
            break;
          }
          case 16: {
            ExpirationTime = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StreamDetails : pb::IMessage<StreamDetails> {
    private static readonly pb::MessageParser<StreamDetails> _parser = new pb::MessageParser<StreamDetails>(() => new StreamDetails());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamDetails(StreamDetails other) : this() {
      _hasBits0 = other._hasBits0;
      enableStream_ = other.enableStream_;
      streamId_ = other.streamId_;
      expirationTime_ = other.expirationTime_;
      lastEnableTime_ = other.lastEnableTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamDetails Clone() {
      return new StreamDetails(this);
    }

    /// <summary>Field number for the "enable_stream" field.</summary>
    public const int EnableStreamFieldNumber = 1;
    private readonly static bool EnableStreamDefaultValue = false;

    private bool enableStream_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EnableStream {
      get { if ((_hasBits0 & 1) != 0) { return enableStream_; } else { return EnableStreamDefaultValue; } }
      set {
        _hasBits0 |= 1;
        enableStream_ = value;
      }
    }
    /// <summary>Gets whether the "enable_stream" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEnableStream {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "enable_stream" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEnableStream() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 2;
    private readonly static string StreamIdDefaultValue = "";

    private string streamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StreamId {
      get { return streamId_ ?? StreamIdDefaultValue; }
      set {
        streamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "stream_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStreamId {
      get { return streamId_ != null; }
    }
    /// <summary>Clears the value of the "stream_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStreamId() {
      streamId_ = null;
    }

    /// <summary>Field number for the "expiration_time" field.</summary>
    public const int ExpirationTimeFieldNumber = 3;
    private readonly static int ExpirationTimeDefaultValue = 0;

    private int expirationTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExpirationTime {
      get { if ((_hasBits0 & 2) != 0) { return expirationTime_; } else { return ExpirationTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        expirationTime_ = value;
      }
    }
    /// <summary>Gets whether the "expiration_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExpirationTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "expiration_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExpirationTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "last_enable_time" field.</summary>
    public const int LastEnableTimeFieldNumber = 4;
    private readonly static long LastEnableTimeDefaultValue = 0L;

    private long lastEnableTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastEnableTime {
      get { if ((_hasBits0 & 4) != 0) { return lastEnableTime_; } else { return LastEnableTimeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        lastEnableTime_ = value;
      }
    }
    /// <summary>Gets whether the "last_enable_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLastEnableTime {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "last_enable_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLastEnableTime() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EnableStream != other.EnableStream) return false;
      if (StreamId != other.StreamId) return false;
      if (ExpirationTime != other.ExpirationTime) return false;
      if (LastEnableTime != other.LastEnableTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEnableStream) hash ^= EnableStream.GetHashCode();
      if (HasStreamId) hash ^= StreamId.GetHashCode();
      if (HasExpirationTime) hash ^= ExpirationTime.GetHashCode();
      if (HasLastEnableTime) hash ^= LastEnableTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasEnableStream) {
        output.WriteRawTag(8);
        output.WriteBool(EnableStream);
      }
      if (HasStreamId) {
        output.WriteRawTag(18);
        output.WriteString(StreamId);
      }
      if (HasExpirationTime) {
        output.WriteRawTag(24);
        output.WriteInt32(ExpirationTime);
      }
      if (HasLastEnableTime) {
        output.WriteRawTag(32);
        output.WriteInt64(LastEnableTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasEnableStream) {
        size += 1 + 1;
      }
      if (HasStreamId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StreamId);
      }
      if (HasExpirationTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExpirationTime);
      }
      if (HasLastEnableTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastEnableTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamDetails other) {
      if (other == null) {
        return;
      }
      if (other.HasEnableStream) {
        EnableStream = other.EnableStream;
      }
      if (other.HasStreamId) {
        StreamId = other.StreamId;
      }
      if (other.HasExpirationTime) {
        ExpirationTime = other.ExpirationTime;
      }
      if (other.HasLastEnableTime) {
        LastEnableTime = other.LastEnableTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EnableStream = input.ReadBool();
            break;
          }
          case 18: {
            StreamId = input.ReadString();
            break;
          }
          case 24: {
            ExpirationTime = input.ReadInt32();
            break;
          }
          case 32: {
            LastEnableTime = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// table_meta用于存储表中不可更改的schema属性，可以更改的ReservedThroughput和TableOptions独立出来，作为UpdateTable的参数。
  /// 加入GlobalIndex和LocalIndex之后，结构会变为：
  /// message CreateTableRequest {
  ///         required TableMeta table_meta = 1;
  ///         required ReservedThroughput reserved_throughput = 2;
  ///         required TableOptions table_options = 3;
  ///         repeated LocalIndex local_indexes = 4; // LocalIndex不再单独包含ReservedThroughput和TableOptions，其与主表共享配置。
  ///         repeated GlobalIndex global_indexes = 5; // GlobalIndex内单独包含ReservedThroughput和TableOptions
  /// }
  /// </summary>
  public sealed partial class CreateTableRequest : pb::IMessage<CreateTableRequest> {
    private static readonly pb::MessageParser<CreateTableRequest> _parser = new pb::MessageParser<CreateTableRequest>(() => new CreateTableRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateTableRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTableRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTableRequest(CreateTableRequest other) : this() {
      tableMeta_ = other.tableMeta_ != null ? other.tableMeta_.Clone() : null;
      reservedThroughput_ = other.reservedThroughput_ != null ? other.reservedThroughput_.Clone() : null;
      tableOptions_ = other.tableOptions_ != null ? other.tableOptions_.Clone() : null;
      partitions_ = other.partitions_.Clone();
      streamSpec_ = other.streamSpec_ != null ? other.streamSpec_.Clone() : null;
      indexMetas_ = other.indexMetas_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTableRequest Clone() {
      return new CreateTableRequest(this);
    }

    /// <summary>Field number for the "table_meta" field.</summary>
    public const int TableMetaFieldNumber = 1;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableMeta tableMeta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableMeta TableMeta {
      get { return tableMeta_; }
      set {
        tableMeta_ = value;
      }
    }

    /// <summary>Field number for the "reserved_throughput" field.</summary>
    public const int ReservedThroughputFieldNumber = 2;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReservedThroughput reservedThroughput_;
    /// <summary>
    /// 未放在TableOptions内，原因是UpdateTableResponse中会返回ReservedThroughputDetails，而TableOptions没有类似的返回结构。
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReservedThroughput ReservedThroughput {
      get { return reservedThroughput_; }
      set {
        reservedThroughput_ = value;
      }
    }

    /// <summary>Field number for the "table_options" field.</summary>
    public const int TableOptionsFieldNumber = 3;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableOptions tableOptions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableOptions TableOptions {
      get { return tableOptions_; }
      set {
        tableOptions_ = value;
      }
    }

    /// <summary>Field number for the "partitions" field.</summary>
    public const int PartitionsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PartitionRange> _repeated_partitions_codec
        = pb::FieldCodec.ForMessage(34, global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PartitionRange.Parser);
    private readonly pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PartitionRange> partitions_ = new pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PartitionRange>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PartitionRange> Partitions {
      get { return partitions_; }
    }

    /// <summary>Field number for the "stream_spec" field.</summary>
    public const int StreamSpecFieldNumber = 5;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamSpecification streamSpec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamSpecification StreamSpec {
      get { return streamSpec_; }
      set {
        streamSpec_ = value;
      }
    }

    /// <summary>Field number for the "index_metas" field.</summary>
    public const int IndexMetasFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexMeta> _repeated_indexMetas_codec
        = pb::FieldCodec.ForMessage(58, global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexMeta.Parser);
    private readonly pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexMeta> indexMetas_ = new pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexMeta>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexMeta> IndexMetas {
      get { return indexMetas_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateTableRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateTableRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TableMeta, other.TableMeta)) return false;
      if (!object.Equals(ReservedThroughput, other.ReservedThroughput)) return false;
      if (!object.Equals(TableOptions, other.TableOptions)) return false;
      if(!partitions_.Equals(other.partitions_)) return false;
      if (!object.Equals(StreamSpec, other.StreamSpec)) return false;
      if(!indexMetas_.Equals(other.indexMetas_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (tableMeta_ != null) hash ^= TableMeta.GetHashCode();
      if (reservedThroughput_ != null) hash ^= ReservedThroughput.GetHashCode();
      if (tableOptions_ != null) hash ^= TableOptions.GetHashCode();
      hash ^= partitions_.GetHashCode();
      if (streamSpec_ != null) hash ^= StreamSpec.GetHashCode();
      hash ^= indexMetas_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (tableMeta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TableMeta);
      }
      if (reservedThroughput_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReservedThroughput);
      }
      if (tableOptions_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TableOptions);
      }
      partitions_.WriteTo(output, _repeated_partitions_codec);
      if (streamSpec_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(StreamSpec);
      }
      indexMetas_.WriteTo(output, _repeated_indexMetas_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (tableMeta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TableMeta);
      }
      if (reservedThroughput_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReservedThroughput);
      }
      if (tableOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TableOptions);
      }
      size += partitions_.CalculateSize(_repeated_partitions_codec);
      if (streamSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StreamSpec);
      }
      size += indexMetas_.CalculateSize(_repeated_indexMetas_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateTableRequest other) {
      if (other == null) {
        return;
      }
      if (other.tableMeta_ != null) {
        if (tableMeta_ == null) {
          TableMeta = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableMeta();
        }
        TableMeta.MergeFrom(other.TableMeta);
      }
      if (other.reservedThroughput_ != null) {
        if (reservedThroughput_ == null) {
          ReservedThroughput = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReservedThroughput();
        }
        ReservedThroughput.MergeFrom(other.ReservedThroughput);
      }
      if (other.tableOptions_ != null) {
        if (tableOptions_ == null) {
          TableOptions = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableOptions();
        }
        TableOptions.MergeFrom(other.TableOptions);
      }
      partitions_.Add(other.partitions_);
      if (other.streamSpec_ != null) {
        if (streamSpec_ == null) {
          StreamSpec = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamSpecification();
        }
        StreamSpec.MergeFrom(other.StreamSpec);
      }
      indexMetas_.Add(other.indexMetas_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (tableMeta_ == null) {
              TableMeta = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableMeta();
            }
            input.ReadMessage(TableMeta);
            break;
          }
          case 18: {
            if (reservedThroughput_ == null) {
              ReservedThroughput = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReservedThroughput();
            }
            input.ReadMessage(ReservedThroughput);
            break;
          }
          case 26: {
            if (tableOptions_ == null) {
              TableOptions = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableOptions();
            }
            input.ReadMessage(TableOptions);
            break;
          }
          case 34: {
            partitions_.AddEntriesFrom(input, _repeated_partitions_codec);
            break;
          }
          case 42: {
            if (streamSpec_ == null) {
              StreamSpec = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamSpecification();
            }
            input.ReadMessage(StreamSpec);
            break;
          }
          case 58: {
            indexMetas_.AddEntriesFrom(input, _repeated_indexMetas_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateTableResponse : pb::IMessage<CreateTableResponse> {
    private static readonly pb::MessageParser<CreateTableResponse> _parser = new pb::MessageParser<CreateTableResponse>(() => new CreateTableResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateTableResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTableResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTableResponse(CreateTableResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTableResponse Clone() {
      return new CreateTableResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateTableResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateTableResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateTableResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class CreateIndexRequest : pb::IMessage<CreateIndexRequest> {
    private static readonly pb::MessageParser<CreateIndexRequest> _parser = new pb::MessageParser<CreateIndexRequest>(() => new CreateIndexRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateIndexRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateIndexRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateIndexRequest(CreateIndexRequest other) : this() {
      _hasBits0 = other._hasBits0;
      mainTableName_ = other.mainTableName_;
      indexMeta_ = other.indexMeta_ != null ? other.indexMeta_.Clone() : null;
      includeBaseData_ = other.includeBaseData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateIndexRequest Clone() {
      return new CreateIndexRequest(this);
    }

    /// <summary>Field number for the "main_table_name" field.</summary>
    public const int MainTableNameFieldNumber = 1;
    private readonly static string MainTableNameDefaultValue = "";

    private string mainTableName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MainTableName {
      get { return mainTableName_ ?? MainTableNameDefaultValue; }
      set {
        mainTableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "main_table_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMainTableName {
      get { return mainTableName_ != null; }
    }
    /// <summary>Clears the value of the "main_table_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMainTableName() {
      mainTableName_ = null;
    }

    /// <summary>Field number for the "index_meta" field.</summary>
    public const int IndexMetaFieldNumber = 2;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexMeta indexMeta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexMeta IndexMeta {
      get { return indexMeta_; }
      set {
        indexMeta_ = value;
      }
    }

    /// <summary>Field number for the "include_base_data" field.</summary>
    public const int IncludeBaseDataFieldNumber = 3;
    private readonly static bool IncludeBaseDataDefaultValue = false;

    private bool includeBaseData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IncludeBaseData {
      get { if ((_hasBits0 & 1) != 0) { return includeBaseData_; } else { return IncludeBaseDataDefaultValue; } }
      set {
        _hasBits0 |= 1;
        includeBaseData_ = value;
      }
    }
    /// <summary>Gets whether the "include_base_data" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIncludeBaseData {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "include_base_data" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIncludeBaseData() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateIndexRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateIndexRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MainTableName != other.MainTableName) return false;
      if (!object.Equals(IndexMeta, other.IndexMeta)) return false;
      if (IncludeBaseData != other.IncludeBaseData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMainTableName) hash ^= MainTableName.GetHashCode();
      if (indexMeta_ != null) hash ^= IndexMeta.GetHashCode();
      if (HasIncludeBaseData) hash ^= IncludeBaseData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasMainTableName) {
        output.WriteRawTag(10);
        output.WriteString(MainTableName);
      }
      if (indexMeta_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(IndexMeta);
      }
      if (HasIncludeBaseData) {
        output.WriteRawTag(24);
        output.WriteBool(IncludeBaseData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMainTableName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MainTableName);
      }
      if (indexMeta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IndexMeta);
      }
      if (HasIncludeBaseData) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateIndexRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasMainTableName) {
        MainTableName = other.MainTableName;
      }
      if (other.indexMeta_ != null) {
        if (indexMeta_ == null) {
          IndexMeta = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexMeta();
        }
        IndexMeta.MergeFrom(other.IndexMeta);
      }
      if (other.HasIncludeBaseData) {
        IncludeBaseData = other.IncludeBaseData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MainTableName = input.ReadString();
            break;
          }
          case 18: {
            if (indexMeta_ == null) {
              IndexMeta = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexMeta();
            }
            input.ReadMessage(IndexMeta);
            break;
          }
          case 24: {
            IncludeBaseData = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateIndexResponse : pb::IMessage<CreateIndexResponse> {
    private static readonly pb::MessageParser<CreateIndexResponse> _parser = new pb::MessageParser<CreateIndexResponse>(() => new CreateIndexResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateIndexResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateIndexResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateIndexResponse(CreateIndexResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateIndexResponse Clone() {
      return new CreateIndexResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateIndexResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateIndexResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateIndexResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class DropIndexRequest : pb::IMessage<DropIndexRequest> {
    private static readonly pb::MessageParser<DropIndexRequest> _parser = new pb::MessageParser<DropIndexRequest>(() => new DropIndexRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DropIndexRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropIndexRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropIndexRequest(DropIndexRequest other) : this() {
      mainTableName_ = other.mainTableName_;
      indexName_ = other.indexName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropIndexRequest Clone() {
      return new DropIndexRequest(this);
    }

    /// <summary>Field number for the "main_table_name" field.</summary>
    public const int MainTableNameFieldNumber = 1;
    private readonly static string MainTableNameDefaultValue = "";

    private string mainTableName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MainTableName {
      get { return mainTableName_ ?? MainTableNameDefaultValue; }
      set {
        mainTableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "main_table_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMainTableName {
      get { return mainTableName_ != null; }
    }
    /// <summary>Clears the value of the "main_table_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMainTableName() {
      mainTableName_ = null;
    }

    /// <summary>Field number for the "index_name" field.</summary>
    public const int IndexNameFieldNumber = 2;
    private readonly static string IndexNameDefaultValue = "";

    private string indexName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IndexName {
      get { return indexName_ ?? IndexNameDefaultValue; }
      set {
        indexName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "index_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIndexName {
      get { return indexName_ != null; }
    }
    /// <summary>Clears the value of the "index_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIndexName() {
      indexName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DropIndexRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DropIndexRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MainTableName != other.MainTableName) return false;
      if (IndexName != other.IndexName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMainTableName) hash ^= MainTableName.GetHashCode();
      if (HasIndexName) hash ^= IndexName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasMainTableName) {
        output.WriteRawTag(10);
        output.WriteString(MainTableName);
      }
      if (HasIndexName) {
        output.WriteRawTag(18);
        output.WriteString(IndexName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMainTableName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MainTableName);
      }
      if (HasIndexName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IndexName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DropIndexRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasMainTableName) {
        MainTableName = other.MainTableName;
      }
      if (other.HasIndexName) {
        IndexName = other.IndexName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MainTableName = input.ReadString();
            break;
          }
          case 18: {
            IndexName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DropIndexResponse : pb::IMessage<DropIndexResponse> {
    private static readonly pb::MessageParser<DropIndexResponse> _parser = new pb::MessageParser<DropIndexResponse>(() => new DropIndexResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DropIndexResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropIndexResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropIndexResponse(DropIndexResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropIndexResponse Clone() {
      return new DropIndexResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DropIndexResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DropIndexResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DropIndexResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// #############################################  UpdateTable  ############################################# 
  /// </summary>
  public sealed partial class UpdateTableRequest : pb::IMessage<UpdateTableRequest> {
    private static readonly pb::MessageParser<UpdateTableRequest> _parser = new pb::MessageParser<UpdateTableRequest>(() => new UpdateTableRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateTableRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTableRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTableRequest(UpdateTableRequest other) : this() {
      tableName_ = other.tableName_;
      reservedThroughput_ = other.reservedThroughput_ != null ? other.reservedThroughput_.Clone() : null;
      tableOptions_ = other.tableOptions_ != null ? other.tableOptions_.Clone() : null;
      streamSpec_ = other.streamSpec_ != null ? other.streamSpec_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTableRequest Clone() {
      return new UpdateTableRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private readonly static string TableNameDefaultValue = "";

    private string tableName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_ ?? TableNameDefaultValue; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTableName {
      get { return tableName_ != null; }
    }
    /// <summary>Clears the value of the "table_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTableName() {
      tableName_ = null;
    }

    /// <summary>Field number for the "reserved_throughput" field.</summary>
    public const int ReservedThroughputFieldNumber = 2;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReservedThroughput reservedThroughput_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReservedThroughput ReservedThroughput {
      get { return reservedThroughput_; }
      set {
        reservedThroughput_ = value;
      }
    }

    /// <summary>Field number for the "table_options" field.</summary>
    public const int TableOptionsFieldNumber = 3;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableOptions tableOptions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableOptions TableOptions {
      get { return tableOptions_; }
      set {
        tableOptions_ = value;
      }
    }

    /// <summary>Field number for the "stream_spec" field.</summary>
    public const int StreamSpecFieldNumber = 4;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamSpecification streamSpec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamSpecification StreamSpec {
      get { return streamSpec_; }
      set {
        streamSpec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateTableRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateTableRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if (!object.Equals(ReservedThroughput, other.ReservedThroughput)) return false;
      if (!object.Equals(TableOptions, other.TableOptions)) return false;
      if (!object.Equals(StreamSpec, other.StreamSpec)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTableName) hash ^= TableName.GetHashCode();
      if (reservedThroughput_ != null) hash ^= ReservedThroughput.GetHashCode();
      if (tableOptions_ != null) hash ^= TableOptions.GetHashCode();
      if (streamSpec_ != null) hash ^= StreamSpec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTableName) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (reservedThroughput_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReservedThroughput);
      }
      if (tableOptions_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TableOptions);
      }
      if (streamSpec_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StreamSpec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTableName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (reservedThroughput_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReservedThroughput);
      }
      if (tableOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TableOptions);
      }
      if (streamSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StreamSpec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateTableRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasTableName) {
        TableName = other.TableName;
      }
      if (other.reservedThroughput_ != null) {
        if (reservedThroughput_ == null) {
          ReservedThroughput = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReservedThroughput();
        }
        ReservedThroughput.MergeFrom(other.ReservedThroughput);
      }
      if (other.tableOptions_ != null) {
        if (tableOptions_ == null) {
          TableOptions = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableOptions();
        }
        TableOptions.MergeFrom(other.TableOptions);
      }
      if (other.streamSpec_ != null) {
        if (streamSpec_ == null) {
          StreamSpec = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamSpecification();
        }
        StreamSpec.MergeFrom(other.StreamSpec);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            if (reservedThroughput_ == null) {
              ReservedThroughput = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReservedThroughput();
            }
            input.ReadMessage(ReservedThroughput);
            break;
          }
          case 26: {
            if (tableOptions_ == null) {
              TableOptions = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableOptions();
            }
            input.ReadMessage(TableOptions);
            break;
          }
          case 34: {
            if (streamSpec_ == null) {
              StreamSpec = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamSpecification();
            }
            input.ReadMessage(StreamSpec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateTableResponse : pb::IMessage<UpdateTableResponse> {
    private static readonly pb::MessageParser<UpdateTableResponse> _parser = new pb::MessageParser<UpdateTableResponse>(() => new UpdateTableResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateTableResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTableResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTableResponse(UpdateTableResponse other) : this() {
      reservedThroughputDetails_ = other.reservedThroughputDetails_ != null ? other.reservedThroughputDetails_.Clone() : null;
      tableOptions_ = other.tableOptions_ != null ? other.tableOptions_.Clone() : null;
      streamDetails_ = other.streamDetails_ != null ? other.streamDetails_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTableResponse Clone() {
      return new UpdateTableResponse(this);
    }

    /// <summary>Field number for the "reserved_throughput_details" field.</summary>
    public const int ReservedThroughputDetailsFieldNumber = 1;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReservedThroughputDetails reservedThroughputDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReservedThroughputDetails ReservedThroughputDetails {
      get { return reservedThroughputDetails_; }
      set {
        reservedThroughputDetails_ = value;
      }
    }

    /// <summary>Field number for the "table_options" field.</summary>
    public const int TableOptionsFieldNumber = 2;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableOptions tableOptions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableOptions TableOptions {
      get { return tableOptions_; }
      set {
        tableOptions_ = value;
      }
    }

    /// <summary>Field number for the "stream_details" field.</summary>
    public const int StreamDetailsFieldNumber = 3;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamDetails streamDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamDetails StreamDetails {
      get { return streamDetails_; }
      set {
        streamDetails_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateTableResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateTableResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ReservedThroughputDetails, other.ReservedThroughputDetails)) return false;
      if (!object.Equals(TableOptions, other.TableOptions)) return false;
      if (!object.Equals(StreamDetails, other.StreamDetails)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reservedThroughputDetails_ != null) hash ^= ReservedThroughputDetails.GetHashCode();
      if (tableOptions_ != null) hash ^= TableOptions.GetHashCode();
      if (streamDetails_ != null) hash ^= StreamDetails.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reservedThroughputDetails_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ReservedThroughputDetails);
      }
      if (tableOptions_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TableOptions);
      }
      if (streamDetails_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(StreamDetails);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reservedThroughputDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReservedThroughputDetails);
      }
      if (tableOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TableOptions);
      }
      if (streamDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StreamDetails);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateTableResponse other) {
      if (other == null) {
        return;
      }
      if (other.reservedThroughputDetails_ != null) {
        if (reservedThroughputDetails_ == null) {
          ReservedThroughputDetails = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReservedThroughputDetails();
        }
        ReservedThroughputDetails.MergeFrom(other.ReservedThroughputDetails);
      }
      if (other.tableOptions_ != null) {
        if (tableOptions_ == null) {
          TableOptions = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableOptions();
        }
        TableOptions.MergeFrom(other.TableOptions);
      }
      if (other.streamDetails_ != null) {
        if (streamDetails_ == null) {
          StreamDetails = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamDetails();
        }
        StreamDetails.MergeFrom(other.StreamDetails);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (reservedThroughputDetails_ == null) {
              ReservedThroughputDetails = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReservedThroughputDetails();
            }
            input.ReadMessage(ReservedThroughputDetails);
            break;
          }
          case 18: {
            if (tableOptions_ == null) {
              TableOptions = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableOptions();
            }
            input.ReadMessage(TableOptions);
            break;
          }
          case 26: {
            if (streamDetails_ == null) {
              StreamDetails = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamDetails();
            }
            input.ReadMessage(StreamDetails);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// #############################################  DescribeTable  ############################################# 
  /// </summary>
  public sealed partial class DescribeTableRequest : pb::IMessage<DescribeTableRequest> {
    private static readonly pb::MessageParser<DescribeTableRequest> _parser = new pb::MessageParser<DescribeTableRequest>(() => new DescribeTableRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DescribeTableRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeTableRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeTableRequest(DescribeTableRequest other) : this() {
      tableName_ = other.tableName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeTableRequest Clone() {
      return new DescribeTableRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private readonly static string TableNameDefaultValue = "";

    private string tableName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_ ?? TableNameDefaultValue; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTableName {
      get { return tableName_ != null; }
    }
    /// <summary>Clears the value of the "table_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTableName() {
      tableName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DescribeTableRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DescribeTableRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTableName) hash ^= TableName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTableName) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTableName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DescribeTableRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasTableName) {
        TableName = other.TableName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DescribeTableResponse : pb::IMessage<DescribeTableResponse> {
    private static readonly pb::MessageParser<DescribeTableResponse> _parser = new pb::MessageParser<DescribeTableResponse>(() => new DescribeTableResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DescribeTableResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeTableResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeTableResponse(DescribeTableResponse other) : this() {
      _hasBits0 = other._hasBits0;
      tableMeta_ = other.tableMeta_ != null ? other.tableMeta_.Clone() : null;
      reservedThroughputDetails_ = other.reservedThroughputDetails_ != null ? other.reservedThroughputDetails_.Clone() : null;
      tableOptions_ = other.tableOptions_ != null ? other.tableOptions_.Clone() : null;
      tableStatus_ = other.tableStatus_;
      streamDetails_ = other.streamDetails_ != null ? other.streamDetails_.Clone() : null;
      shardSplits_ = other.shardSplits_.Clone();
      indexMetas_ = other.indexMetas_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeTableResponse Clone() {
      return new DescribeTableResponse(this);
    }

    /// <summary>Field number for the "table_meta" field.</summary>
    public const int TableMetaFieldNumber = 1;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableMeta tableMeta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableMeta TableMeta {
      get { return tableMeta_; }
      set {
        tableMeta_ = value;
      }
    }

    /// <summary>Field number for the "reserved_throughput_details" field.</summary>
    public const int ReservedThroughputDetailsFieldNumber = 2;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReservedThroughputDetails reservedThroughputDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReservedThroughputDetails ReservedThroughputDetails {
      get { return reservedThroughputDetails_; }
      set {
        reservedThroughputDetails_ = value;
      }
    }

    /// <summary>Field number for the "table_options" field.</summary>
    public const int TableOptionsFieldNumber = 3;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableOptions tableOptions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableOptions TableOptions {
      get { return tableOptions_; }
      set {
        tableOptions_ = value;
      }
    }

    /// <summary>Field number for the "table_status" field.</summary>
    public const int TableStatusFieldNumber = 4;
    private readonly static global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStatus TableStatusDefaultValue = global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStatus.Active;

    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStatus tableStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStatus TableStatus {
      get { if ((_hasBits0 & 1) != 0) { return tableStatus_; } else { return TableStatusDefaultValue; } }
      set {
        _hasBits0 |= 1;
        tableStatus_ = value;
      }
    }
    /// <summary>Gets whether the "table_status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTableStatus {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "table_status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTableStatus() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "stream_details" field.</summary>
    public const int StreamDetailsFieldNumber = 5;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamDetails streamDetails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamDetails StreamDetails {
      get { return streamDetails_; }
      set {
        streamDetails_ = value;
      }
    }

    /// <summary>Field number for the "shard_splits" field.</summary>
    public const int ShardSplitsFieldNumber = 6;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_shardSplits_codec
        = pb::FieldCodec.ForBytes(50);
    private readonly pbc::RepeatedField<pb::ByteString> shardSplits_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> ShardSplits {
      get { return shardSplits_; }
    }

    /// <summary>Field number for the "index_metas" field.</summary>
    public const int IndexMetasFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexMeta> _repeated_indexMetas_codec
        = pb::FieldCodec.ForMessage(66, global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexMeta.Parser);
    private readonly pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexMeta> indexMetas_ = new pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexMeta>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.IndexMeta> IndexMetas {
      get { return indexMetas_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DescribeTableResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DescribeTableResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TableMeta, other.TableMeta)) return false;
      if (!object.Equals(ReservedThroughputDetails, other.ReservedThroughputDetails)) return false;
      if (!object.Equals(TableOptions, other.TableOptions)) return false;
      if (TableStatus != other.TableStatus) return false;
      if (!object.Equals(StreamDetails, other.StreamDetails)) return false;
      if(!shardSplits_.Equals(other.shardSplits_)) return false;
      if(!indexMetas_.Equals(other.indexMetas_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (tableMeta_ != null) hash ^= TableMeta.GetHashCode();
      if (reservedThroughputDetails_ != null) hash ^= ReservedThroughputDetails.GetHashCode();
      if (tableOptions_ != null) hash ^= TableOptions.GetHashCode();
      if (HasTableStatus) hash ^= TableStatus.GetHashCode();
      if (streamDetails_ != null) hash ^= StreamDetails.GetHashCode();
      hash ^= shardSplits_.GetHashCode();
      hash ^= indexMetas_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (tableMeta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TableMeta);
      }
      if (reservedThroughputDetails_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReservedThroughputDetails);
      }
      if (tableOptions_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TableOptions);
      }
      if (HasTableStatus) {
        output.WriteRawTag(32);
        output.WriteEnum((int) TableStatus);
      }
      if (streamDetails_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(StreamDetails);
      }
      shardSplits_.WriteTo(output, _repeated_shardSplits_codec);
      indexMetas_.WriteTo(output, _repeated_indexMetas_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (tableMeta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TableMeta);
      }
      if (reservedThroughputDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReservedThroughputDetails);
      }
      if (tableOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TableOptions);
      }
      if (HasTableStatus) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TableStatus);
      }
      if (streamDetails_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StreamDetails);
      }
      size += shardSplits_.CalculateSize(_repeated_shardSplits_codec);
      size += indexMetas_.CalculateSize(_repeated_indexMetas_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DescribeTableResponse other) {
      if (other == null) {
        return;
      }
      if (other.tableMeta_ != null) {
        if (tableMeta_ == null) {
          TableMeta = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableMeta();
        }
        TableMeta.MergeFrom(other.TableMeta);
      }
      if (other.reservedThroughputDetails_ != null) {
        if (reservedThroughputDetails_ == null) {
          ReservedThroughputDetails = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReservedThroughputDetails();
        }
        ReservedThroughputDetails.MergeFrom(other.ReservedThroughputDetails);
      }
      if (other.tableOptions_ != null) {
        if (tableOptions_ == null) {
          TableOptions = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableOptions();
        }
        TableOptions.MergeFrom(other.TableOptions);
      }
      if (other.HasTableStatus) {
        TableStatus = other.TableStatus;
      }
      if (other.streamDetails_ != null) {
        if (streamDetails_ == null) {
          StreamDetails = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamDetails();
        }
        StreamDetails.MergeFrom(other.StreamDetails);
      }
      shardSplits_.Add(other.shardSplits_);
      indexMetas_.Add(other.indexMetas_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (tableMeta_ == null) {
              TableMeta = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableMeta();
            }
            input.ReadMessage(TableMeta);
            break;
          }
          case 18: {
            if (reservedThroughputDetails_ == null) {
              ReservedThroughputDetails = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReservedThroughputDetails();
            }
            input.ReadMessage(ReservedThroughputDetails);
            break;
          }
          case 26: {
            if (tableOptions_ == null) {
              TableOptions = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableOptions();
            }
            input.ReadMessage(TableOptions);
            break;
          }
          case 32: {
            TableStatus = (global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStatus) input.ReadEnum();
            break;
          }
          case 42: {
            if (streamDetails_ == null) {
              StreamDetails = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamDetails();
            }
            input.ReadMessage(StreamDetails);
            break;
          }
          case 50: {
            shardSplits_.AddEntriesFrom(input, _repeated_shardSplits_codec);
            break;
          }
          case 66: {
            indexMetas_.AddEntriesFrom(input, _repeated_indexMetas_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// #############################################  ListTable  ############################################# 
  /// </summary>
  public sealed partial class ListTableRequest : pb::IMessage<ListTableRequest> {
    private static readonly pb::MessageParser<ListTableRequest> _parser = new pb::MessageParser<ListTableRequest>(() => new ListTableRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListTableRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTableRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTableRequest(ListTableRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTableRequest Clone() {
      return new ListTableRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListTableRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListTableRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListTableRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  ///*
  /// 当前只返回一个简单的名称列表，需要讨论是否有业务场景需要获取除了表名之外的其他信息。
  /// 其他信息可以包含预留吞吐量以及表的状态，这个信息只能是一个粗略的信息，表的详细信息还是需要通过DescribeTable来获取。
  /// </summary>
  public sealed partial class ListTableResponse : pb::IMessage<ListTableResponse> {
    private static readonly pb::MessageParser<ListTableResponse> _parser = new pb::MessageParser<ListTableResponse>(() => new ListTableResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListTableResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTableResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTableResponse(ListTableResponse other) : this() {
      tableNames_ = other.tableNames_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTableResponse Clone() {
      return new ListTableResponse(this);
    }

    /// <summary>Field number for the "table_names" field.</summary>
    public const int TableNamesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_tableNames_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> tableNames_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> TableNames {
      get { return tableNames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListTableResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListTableResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!tableNames_.Equals(other.tableNames_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= tableNames_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      tableNames_.WriteTo(output, _repeated_tableNames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += tableNames_.CalculateSize(_repeated_tableNames_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListTableResponse other) {
      if (other == null) {
        return;
      }
      tableNames_.Add(other.tableNames_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            tableNames_.AddEntriesFrom(input, _repeated_tableNames_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// #############################################  DeleteTable  ############################################# 
  /// </summary>
  public sealed partial class DeleteTableRequest : pb::IMessage<DeleteTableRequest> {
    private static readonly pb::MessageParser<DeleteTableRequest> _parser = new pb::MessageParser<DeleteTableRequest>(() => new DeleteTableRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteTableRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTableRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTableRequest(DeleteTableRequest other) : this() {
      tableName_ = other.tableName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTableRequest Clone() {
      return new DeleteTableRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private readonly static string TableNameDefaultValue = "";

    private string tableName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_ ?? TableNameDefaultValue; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTableName {
      get { return tableName_ != null; }
    }
    /// <summary>Clears the value of the "table_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTableName() {
      tableName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteTableRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteTableRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTableName) hash ^= TableName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTableName) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTableName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteTableRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasTableName) {
        TableName = other.TableName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteTableResponse : pb::IMessage<DeleteTableResponse> {
    private static readonly pb::MessageParser<DeleteTableResponse> _parser = new pb::MessageParser<DeleteTableResponse>(() => new DeleteTableResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteTableResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTableResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTableResponse(DeleteTableResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTableResponse Clone() {
      return new DeleteTableResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteTableResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteTableResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteTableResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// #############################################  LoadTable  ############################################# 
  /// </summary>
  public sealed partial class LoadTableRequest : pb::IMessage<LoadTableRequest> {
    private static readonly pb::MessageParser<LoadTableRequest> _parser = new pb::MessageParser<LoadTableRequest>(() => new LoadTableRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadTableRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadTableRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadTableRequest(LoadTableRequest other) : this() {
      tableName_ = other.tableName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadTableRequest Clone() {
      return new LoadTableRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private readonly static string TableNameDefaultValue = "";

    private string tableName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_ ?? TableNameDefaultValue; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTableName {
      get { return tableName_ != null; }
    }
    /// <summary>Clears the value of the "table_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTableName() {
      tableName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadTableRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadTableRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTableName) hash ^= TableName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTableName) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTableName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadTableRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasTableName) {
        TableName = other.TableName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoadTableResponse : pb::IMessage<LoadTableResponse> {
    private static readonly pb::MessageParser<LoadTableResponse> _parser = new pb::MessageParser<LoadTableResponse>(() => new LoadTableResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadTableResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadTableResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadTableResponse(LoadTableResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadTableResponse Clone() {
      return new LoadTableResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadTableResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadTableResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadTableResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// #############################################  UnloadTable  ############################################# 
  /// </summary>
  public sealed partial class UnloadTableRequest : pb::IMessage<UnloadTableRequest> {
    private static readonly pb::MessageParser<UnloadTableRequest> _parser = new pb::MessageParser<UnloadTableRequest>(() => new UnloadTableRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnloadTableRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnloadTableRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnloadTableRequest(UnloadTableRequest other) : this() {
      tableName_ = other.tableName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnloadTableRequest Clone() {
      return new UnloadTableRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private readonly static string TableNameDefaultValue = "";

    private string tableName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_ ?? TableNameDefaultValue; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTableName {
      get { return tableName_ != null; }
    }
    /// <summary>Clears the value of the "table_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTableName() {
      tableName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnloadTableRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnloadTableRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTableName) hash ^= TableName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTableName) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTableName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnloadTableRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasTableName) {
        TableName = other.TableName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnloadTableResponse : pb::IMessage<UnloadTableResponse> {
    private static readonly pb::MessageParser<UnloadTableResponse> _parser = new pb::MessageParser<UnloadTableResponse>(() => new UnloadTableResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnloadTableResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnloadTableResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnloadTableResponse(UnloadTableResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnloadTableResponse Clone() {
      return new UnloadTableResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnloadTableResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnloadTableResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnloadTableResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  ///*
  /// 时间戳的取值最小值为0，最大值为INT64.MAX
  /// 1. 若要查询一个范围，则指定start_time和end_time
  /// 2. 若要查询一个特定时间戳，则指定specific_time
  /// </summary>
  public sealed partial class TimeRange : pb::IMessage<TimeRange> {
    private static readonly pb::MessageParser<TimeRange> _parser = new pb::MessageParser<TimeRange>(() => new TimeRange());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimeRange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeRange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeRange(TimeRange other) : this() {
      _hasBits0 = other._hasBits0;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      specificTime_ = other.specificTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeRange Clone() {
      return new TimeRange(this);
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 1;
    private readonly static long StartTimeDefaultValue = 0L;

    private long startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartTime {
      get { if ((_hasBits0 & 1) != 0) { return startTime_; } else { return StartTimeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        startTime_ = value;
      }
    }
    /// <summary>Gets whether the "start_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStartTime {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "start_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStartTime() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 2;
    private readonly static long EndTimeDefaultValue = 0L;

    private long endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndTime {
      get { if ((_hasBits0 & 2) != 0) { return endTime_; } else { return EndTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        endTime_ = value;
      }
    }
    /// <summary>Gets whether the "end_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEndTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "end_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEndTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "specific_time" field.</summary>
    public const int SpecificTimeFieldNumber = 3;
    private readonly static long SpecificTimeDefaultValue = 0L;

    private long specificTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SpecificTime {
      get { if ((_hasBits0 & 4) != 0) { return specificTime_; } else { return SpecificTimeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        specificTime_ = value;
      }
    }
    /// <summary>Gets whether the "specific_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSpecificTime {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "specific_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSpecificTime() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimeRange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimeRange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      if (SpecificTime != other.SpecificTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStartTime) hash ^= StartTime.GetHashCode();
      if (HasEndTime) hash ^= EndTime.GetHashCode();
      if (HasSpecificTime) hash ^= SpecificTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasStartTime) {
        output.WriteRawTag(8);
        output.WriteInt64(StartTime);
      }
      if (HasEndTime) {
        output.WriteRawTag(16);
        output.WriteInt64(EndTime);
      }
      if (HasSpecificTime) {
        output.WriteRawTag(24);
        output.WriteInt64(SpecificTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasStartTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTime);
      }
      if (HasEndTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTime);
      }
      if (HasSpecificTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SpecificTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimeRange other) {
      if (other == null) {
        return;
      }
      if (other.HasStartTime) {
        StartTime = other.StartTime;
      }
      if (other.HasEndTime) {
        EndTime = other.EndTime;
      }
      if (other.HasSpecificTime) {
        SpecificTime = other.SpecificTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartTime = input.ReadInt64();
            break;
          }
          case 16: {
            EndTime = input.ReadInt64();
            break;
          }
          case 24: {
            SpecificTime = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReturnContent : pb::IMessage<ReturnContent> {
    private static readonly pb::MessageParser<ReturnContent> _parser = new pb::MessageParser<ReturnContent>(() => new ReturnContent());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReturnContent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReturnContent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReturnContent(ReturnContent other) : this() {
      _hasBits0 = other._hasBits0;
      returnType_ = other.returnType_;
      returnColumnNames_ = other.returnColumnNames_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReturnContent Clone() {
      return new ReturnContent(this);
    }

    /// <summary>Field number for the "return_type" field.</summary>
    public const int ReturnTypeFieldNumber = 1;
    private readonly static global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReturnType ReturnTypeDefaultValue = global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReturnType.RtNone;

    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReturnType returnType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReturnType ReturnType {
      get { if ((_hasBits0 & 1) != 0) { return returnType_; } else { return ReturnTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        returnType_ = value;
      }
    }
    /// <summary>Gets whether the "return_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReturnType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "return_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReturnType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "return_column_names" field.</summary>
    public const int ReturnColumnNamesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_returnColumnNames_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> returnColumnNames_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ReturnColumnNames {
      get { return returnColumnNames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReturnContent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReturnContent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReturnType != other.ReturnType) return false;
      if(!returnColumnNames_.Equals(other.returnColumnNames_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasReturnType) hash ^= ReturnType.GetHashCode();
      hash ^= returnColumnNames_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasReturnType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ReturnType);
      }
      returnColumnNames_.WriteTo(output, _repeated_returnColumnNames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasReturnType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReturnType);
      }
      size += returnColumnNames_.CalculateSize(_repeated_returnColumnNames_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReturnContent other) {
      if (other == null) {
        return;
      }
      if (other.HasReturnType) {
        ReturnType = other.ReturnType;
      }
      returnColumnNames_.Add(other.returnColumnNames_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReturnType = (global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReturnType) input.ReadEnum();
            break;
          }
          case 18: {
            returnColumnNames_.AddEntriesFrom(input, _repeated_returnColumnNames_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// 1. 支持用户指定版本时间戳范围或者特定的版本时间来读取指定版本的列
  /// 2. 目前暂不支持行内的断点
  /// </summary>
  public sealed partial class GetRowRequest : pb::IMessage<GetRowRequest> {
    private static readonly pb::MessageParser<GetRowRequest> _parser = new pb::MessageParser<GetRowRequest>(() => new GetRowRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRowRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRowRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRowRequest(GetRowRequest other) : this() {
      _hasBits0 = other._hasBits0;
      tableName_ = other.tableName_;
      primaryKey_ = other.primaryKey_;
      columnsToGet_ = other.columnsToGet_.Clone();
      timeRange_ = other.timeRange_ != null ? other.timeRange_.Clone() : null;
      maxVersions_ = other.maxVersions_;
      cacheBlocks_ = other.cacheBlocks_;
      filter_ = other.filter_;
      startColumn_ = other.startColumn_;
      endColumn_ = other.endColumn_;
      token_ = other.token_;
      transactionId_ = other.transactionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRowRequest Clone() {
      return new GetRowRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private readonly static string TableNameDefaultValue = "";

    private string tableName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_ ?? TableNameDefaultValue; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTableName {
      get { return tableName_ != null; }
    }
    /// <summary>Clears the value of the "table_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTableName() {
      tableName_ = null;
    }

    /// <summary>Field number for the "primary_key" field.</summary>
    public const int PrimaryKeyFieldNumber = 2;
    private readonly static pb::ByteString PrimaryKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString primaryKey_;
    /// <summary>
    /// encoded as InplaceRowChangeSet, but only has primary key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PrimaryKey {
      get { return primaryKey_ ?? PrimaryKeyDefaultValue; }
      set {
        primaryKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "primary_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPrimaryKey {
      get { return primaryKey_ != null; }
    }
    /// <summary>Clears the value of the "primary_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPrimaryKey() {
      primaryKey_ = null;
    }

    /// <summary>Field number for the "columns_to_get" field.</summary>
    public const int ColumnsToGetFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_columnsToGet_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> columnsToGet_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 不指定则读出所有的列
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ColumnsToGet {
      get { return columnsToGet_; }
    }

    /// <summary>Field number for the "time_range" field.</summary>
    public const int TimeRangeFieldNumber = 4;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TimeRange timeRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TimeRange TimeRange {
      get { return timeRange_; }
      set {
        timeRange_ = value;
      }
    }

    /// <summary>Field number for the "max_versions" field.</summary>
    public const int MaxVersionsFieldNumber = 5;
    private readonly static int MaxVersionsDefaultValue = 0;

    private int maxVersions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxVersions {
      get { if ((_hasBits0 & 1) != 0) { return maxVersions_; } else { return MaxVersionsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        maxVersions_ = value;
      }
    }
    /// <summary>Gets whether the "max_versions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMaxVersions {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "max_versions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMaxVersions() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "cache_blocks" field.</summary>
    public const int CacheBlocksFieldNumber = 6;
    private readonly static bool CacheBlocksDefaultValue = true;

    private bool cacheBlocks_;
    /// <summary>
    /// 本次读出的数据是否进入BlockCache
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CacheBlocks {
      get { if ((_hasBits0 & 2) != 0) { return cacheBlocks_; } else { return CacheBlocksDefaultValue; } }
      set {
        _hasBits0 |= 2;
        cacheBlocks_ = value;
      }
    }
    /// <summary>Gets whether the "cache_blocks" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCacheBlocks {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "cache_blocks" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCacheBlocks() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 7;
    private readonly static pb::ByteString FilterDefaultValue = pb::ByteString.Empty;

    private pb::ByteString filter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Filter {
      get { return filter_ ?? FilterDefaultValue; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "filter" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFilter {
      get { return filter_ != null; }
    }
    /// <summary>Clears the value of the "filter" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFilter() {
      filter_ = null;
    }

    /// <summary>Field number for the "start_column" field.</summary>
    public const int StartColumnFieldNumber = 8;
    private readonly static string StartColumnDefaultValue = "";

    private string startColumn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartColumn {
      get { return startColumn_ ?? StartColumnDefaultValue; }
      set {
        startColumn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "start_column" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStartColumn {
      get { return startColumn_ != null; }
    }
    /// <summary>Clears the value of the "start_column" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStartColumn() {
      startColumn_ = null;
    }

    /// <summary>Field number for the "end_column" field.</summary>
    public const int EndColumnFieldNumber = 9;
    private readonly static string EndColumnDefaultValue = "";

    private string endColumn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndColumn {
      get { return endColumn_ ?? EndColumnDefaultValue; }
      set {
        endColumn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "end_column" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEndColumn {
      get { return endColumn_ != null; }
    }
    /// <summary>Clears the value of the "end_column" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEndColumn() {
      endColumn_ = null;
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 10;
    private readonly static pb::ByteString TokenDefaultValue = pb::ByteString.Empty;

    private pb::ByteString token_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearToken() {
      token_ = null;
    }

    /// <summary>Field number for the "transaction_id" field.</summary>
    public const int TransactionIdFieldNumber = 11;
    private readonly static string TransactionIdDefaultValue = "";

    private string transactionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TransactionId {
      get { return transactionId_ ?? TransactionIdDefaultValue; }
      set {
        transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "transaction_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTransactionId {
      get { return transactionId_ != null; }
    }
    /// <summary>Clears the value of the "transaction_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTransactionId() {
      transactionId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRowRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRowRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if (PrimaryKey != other.PrimaryKey) return false;
      if(!columnsToGet_.Equals(other.columnsToGet_)) return false;
      if (!object.Equals(TimeRange, other.TimeRange)) return false;
      if (MaxVersions != other.MaxVersions) return false;
      if (CacheBlocks != other.CacheBlocks) return false;
      if (Filter != other.Filter) return false;
      if (StartColumn != other.StartColumn) return false;
      if (EndColumn != other.EndColumn) return false;
      if (Token != other.Token) return false;
      if (TransactionId != other.TransactionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTableName) hash ^= TableName.GetHashCode();
      if (HasPrimaryKey) hash ^= PrimaryKey.GetHashCode();
      hash ^= columnsToGet_.GetHashCode();
      if (timeRange_ != null) hash ^= TimeRange.GetHashCode();
      if (HasMaxVersions) hash ^= MaxVersions.GetHashCode();
      if (HasCacheBlocks) hash ^= CacheBlocks.GetHashCode();
      if (HasFilter) hash ^= Filter.GetHashCode();
      if (HasStartColumn) hash ^= StartColumn.GetHashCode();
      if (HasEndColumn) hash ^= EndColumn.GetHashCode();
      if (HasToken) hash ^= Token.GetHashCode();
      if (HasTransactionId) hash ^= TransactionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTableName) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (HasPrimaryKey) {
        output.WriteRawTag(18);
        output.WriteBytes(PrimaryKey);
      }
      columnsToGet_.WriteTo(output, _repeated_columnsToGet_codec);
      if (timeRange_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TimeRange);
      }
      if (HasMaxVersions) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxVersions);
      }
      if (HasCacheBlocks) {
        output.WriteRawTag(48);
        output.WriteBool(CacheBlocks);
      }
      if (HasFilter) {
        output.WriteRawTag(58);
        output.WriteBytes(Filter);
      }
      if (HasStartColumn) {
        output.WriteRawTag(66);
        output.WriteString(StartColumn);
      }
      if (HasEndColumn) {
        output.WriteRawTag(74);
        output.WriteString(EndColumn);
      }
      if (HasToken) {
        output.WriteRawTag(82);
        output.WriteBytes(Token);
      }
      if (HasTransactionId) {
        output.WriteRawTag(90);
        output.WriteString(TransactionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTableName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (HasPrimaryKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PrimaryKey);
      }
      size += columnsToGet_.CalculateSize(_repeated_columnsToGet_codec);
      if (timeRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeRange);
      }
      if (HasMaxVersions) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxVersions);
      }
      if (HasCacheBlocks) {
        size += 1 + 1;
      }
      if (HasFilter) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Filter);
      }
      if (HasStartColumn) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartColumn);
      }
      if (HasEndColumn) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndColumn);
      }
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Token);
      }
      if (HasTransactionId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TransactionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRowRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasTableName) {
        TableName = other.TableName;
      }
      if (other.HasPrimaryKey) {
        PrimaryKey = other.PrimaryKey;
      }
      columnsToGet_.Add(other.columnsToGet_);
      if (other.timeRange_ != null) {
        if (timeRange_ == null) {
          TimeRange = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TimeRange();
        }
        TimeRange.MergeFrom(other.TimeRange);
      }
      if (other.HasMaxVersions) {
        MaxVersions = other.MaxVersions;
      }
      if (other.HasCacheBlocks) {
        CacheBlocks = other.CacheBlocks;
      }
      if (other.HasFilter) {
        Filter = other.Filter;
      }
      if (other.HasStartColumn) {
        StartColumn = other.StartColumn;
      }
      if (other.HasEndColumn) {
        EndColumn = other.EndColumn;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      if (other.HasTransactionId) {
        TransactionId = other.TransactionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            PrimaryKey = input.ReadBytes();
            break;
          }
          case 26: {
            columnsToGet_.AddEntriesFrom(input, _repeated_columnsToGet_codec);
            break;
          }
          case 34: {
            if (timeRange_ == null) {
              TimeRange = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TimeRange();
            }
            input.ReadMessage(TimeRange);
            break;
          }
          case 40: {
            MaxVersions = input.ReadInt32();
            break;
          }
          case 48: {
            CacheBlocks = input.ReadBool();
            break;
          }
          case 58: {
            Filter = input.ReadBytes();
            break;
          }
          case 66: {
            StartColumn = input.ReadString();
            break;
          }
          case 74: {
            EndColumn = input.ReadString();
            break;
          }
          case 82: {
            Token = input.ReadBytes();
            break;
          }
          case 90: {
            TransactionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetRowResponse : pb::IMessage<GetRowResponse> {
    private static readonly pb::MessageParser<GetRowResponse> _parser = new pb::MessageParser<GetRowResponse>(() => new GetRowResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRowResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRowResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRowResponse(GetRowResponse other) : this() {
      consumed_ = other.consumed_ != null ? other.consumed_.Clone() : null;
      row_ = other.row_;
      nextToken_ = other.nextToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRowResponse Clone() {
      return new GetRowResponse(this);
    }

    /// <summary>Field number for the "consumed" field.</summary>
    public const int ConsumedFieldNumber = 1;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity consumed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity Consumed {
      get { return consumed_; }
      set {
        consumed_ = value;
      }
    }

    /// <summary>Field number for the "row" field.</summary>
    public const int RowFieldNumber = 2;
    private readonly static pb::ByteString RowDefaultValue = pb::ByteString.Empty;

    private pb::ByteString row_;
    /// <summary>
    /// encoded as InplaceRowChangeSet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Row {
      get { return row_ ?? RowDefaultValue; }
      set {
        row_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "row" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRow {
      get { return row_ != null; }
    }
    /// <summary>Clears the value of the "row" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRow() {
      row_ = null;
    }

    /// <summary>Field number for the "next_token" field.</summary>
    public const int NextTokenFieldNumber = 3;
    private readonly static pb::ByteString NextTokenDefaultValue = pb::ByteString.Empty;

    private pb::ByteString nextToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString NextToken {
      get { return nextToken_ ?? NextTokenDefaultValue; }
      set {
        nextToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "next_token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNextToken {
      get { return nextToken_ != null; }
    }
    /// <summary>Clears the value of the "next_token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNextToken() {
      nextToken_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRowResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRowResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Consumed, other.Consumed)) return false;
      if (Row != other.Row) return false;
      if (NextToken != other.NextToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (consumed_ != null) hash ^= Consumed.GetHashCode();
      if (HasRow) hash ^= Row.GetHashCode();
      if (HasNextToken) hash ^= NextToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (consumed_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Consumed);
      }
      if (HasRow) {
        output.WriteRawTag(18);
        output.WriteBytes(Row);
      }
      if (HasNextToken) {
        output.WriteRawTag(26);
        output.WriteBytes(NextToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (consumed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Consumed);
      }
      if (HasRow) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Row);
      }
      if (HasNextToken) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(NextToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRowResponse other) {
      if (other == null) {
        return;
      }
      if (other.consumed_ != null) {
        if (consumed_ == null) {
          Consumed = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity();
        }
        Consumed.MergeFrom(other.Consumed);
      }
      if (other.HasRow) {
        Row = other.Row;
      }
      if (other.HasNextToken) {
        NextToken = other.NextToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (consumed_ == null) {
              Consumed = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity();
            }
            input.ReadMessage(Consumed);
            break;
          }
          case 18: {
            Row = input.ReadBytes();
            break;
          }
          case 26: {
            NextToken = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// #############################################  UpdateRow  ############################################# 
  /// </summary>
  public sealed partial class UpdateRowRequest : pb::IMessage<UpdateRowRequest> {
    private static readonly pb::MessageParser<UpdateRowRequest> _parser = new pb::MessageParser<UpdateRowRequest>(() => new UpdateRowRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateRowRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRowRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRowRequest(UpdateRowRequest other) : this() {
      tableName_ = other.tableName_;
      rowChange_ = other.rowChange_;
      condition_ = other.condition_ != null ? other.condition_.Clone() : null;
      returnContent_ = other.returnContent_ != null ? other.returnContent_.Clone() : null;
      transactionId_ = other.transactionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRowRequest Clone() {
      return new UpdateRowRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private readonly static string TableNameDefaultValue = "";

    private string tableName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_ ?? TableNameDefaultValue; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTableName {
      get { return tableName_ != null; }
    }
    /// <summary>Clears the value of the "table_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTableName() {
      tableName_ = null;
    }

    /// <summary>Field number for the "row_change" field.</summary>
    public const int RowChangeFieldNumber = 2;
    private readonly static pb::ByteString RowChangeDefaultValue = pb::ByteString.Empty;

    private pb::ByteString rowChange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString RowChange {
      get { return rowChange_ ?? RowChangeDefaultValue; }
      set {
        rowChange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "row_change" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRowChange {
      get { return rowChange_ != null; }
    }
    /// <summary>Clears the value of the "row_change" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRowChange() {
      rowChange_ = null;
    }

    /// <summary>Field number for the "condition" field.</summary>
    public const int ConditionFieldNumber = 3;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Condition condition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Condition Condition {
      get { return condition_; }
      set {
        condition_ = value;
      }
    }

    /// <summary>Field number for the "return_content" field.</summary>
    public const int ReturnContentFieldNumber = 4;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReturnContent returnContent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReturnContent ReturnContent {
      get { return returnContent_; }
      set {
        returnContent_ = value;
      }
    }

    /// <summary>Field number for the "transaction_id" field.</summary>
    public const int TransactionIdFieldNumber = 5;
    private readonly static string TransactionIdDefaultValue = "";

    private string transactionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TransactionId {
      get { return transactionId_ ?? TransactionIdDefaultValue; }
      set {
        transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "transaction_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTransactionId {
      get { return transactionId_ != null; }
    }
    /// <summary>Clears the value of the "transaction_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTransactionId() {
      transactionId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateRowRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateRowRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if (RowChange != other.RowChange) return false;
      if (!object.Equals(Condition, other.Condition)) return false;
      if (!object.Equals(ReturnContent, other.ReturnContent)) return false;
      if (TransactionId != other.TransactionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTableName) hash ^= TableName.GetHashCode();
      if (HasRowChange) hash ^= RowChange.GetHashCode();
      if (condition_ != null) hash ^= Condition.GetHashCode();
      if (returnContent_ != null) hash ^= ReturnContent.GetHashCode();
      if (HasTransactionId) hash ^= TransactionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTableName) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (HasRowChange) {
        output.WriteRawTag(18);
        output.WriteBytes(RowChange);
      }
      if (condition_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Condition);
      }
      if (returnContent_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ReturnContent);
      }
      if (HasTransactionId) {
        output.WriteRawTag(42);
        output.WriteString(TransactionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTableName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (HasRowChange) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RowChange);
      }
      if (condition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Condition);
      }
      if (returnContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReturnContent);
      }
      if (HasTransactionId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TransactionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateRowRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasTableName) {
        TableName = other.TableName;
      }
      if (other.HasRowChange) {
        RowChange = other.RowChange;
      }
      if (other.condition_ != null) {
        if (condition_ == null) {
          Condition = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Condition();
        }
        Condition.MergeFrom(other.Condition);
      }
      if (other.returnContent_ != null) {
        if (returnContent_ == null) {
          ReturnContent = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReturnContent();
        }
        ReturnContent.MergeFrom(other.ReturnContent);
      }
      if (other.HasTransactionId) {
        TransactionId = other.TransactionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            RowChange = input.ReadBytes();
            break;
          }
          case 26: {
            if (condition_ == null) {
              Condition = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Condition();
            }
            input.ReadMessage(Condition);
            break;
          }
          case 34: {
            if (returnContent_ == null) {
              ReturnContent = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReturnContent();
            }
            input.ReadMessage(ReturnContent);
            break;
          }
          case 42: {
            TransactionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateRowResponse : pb::IMessage<UpdateRowResponse> {
    private static readonly pb::MessageParser<UpdateRowResponse> _parser = new pb::MessageParser<UpdateRowResponse>(() => new UpdateRowResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateRowResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRowResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRowResponse(UpdateRowResponse other) : this() {
      consumed_ = other.consumed_ != null ? other.consumed_.Clone() : null;
      row_ = other.row_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRowResponse Clone() {
      return new UpdateRowResponse(this);
    }

    /// <summary>Field number for the "consumed" field.</summary>
    public const int ConsumedFieldNumber = 1;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity consumed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity Consumed {
      get { return consumed_; }
      set {
        consumed_ = value;
      }
    }

    /// <summary>Field number for the "row" field.</summary>
    public const int RowFieldNumber = 2;
    private readonly static pb::ByteString RowDefaultValue = pb::ByteString.Empty;

    private pb::ByteString row_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Row {
      get { return row_ ?? RowDefaultValue; }
      set {
        row_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "row" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRow {
      get { return row_ != null; }
    }
    /// <summary>Clears the value of the "row" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRow() {
      row_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateRowResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateRowResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Consumed, other.Consumed)) return false;
      if (Row != other.Row) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (consumed_ != null) hash ^= Consumed.GetHashCode();
      if (HasRow) hash ^= Row.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (consumed_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Consumed);
      }
      if (HasRow) {
        output.WriteRawTag(18);
        output.WriteBytes(Row);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (consumed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Consumed);
      }
      if (HasRow) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Row);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateRowResponse other) {
      if (other == null) {
        return;
      }
      if (other.consumed_ != null) {
        if (consumed_ == null) {
          Consumed = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity();
        }
        Consumed.MergeFrom(other.Consumed);
      }
      if (other.HasRow) {
        Row = other.Row;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (consumed_ == null) {
              Consumed = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity();
            }
            input.ReadMessage(Consumed);
            break;
          }
          case 18: {
            Row = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// 这里允许用户为每列单独设置timestamp，而不是强制整行统一一个timestamp。
  /// 原因是列都是用统一的结构，该结构本身是带timestamp的，其次强制统一timestamp增强了规范性但是丧失了灵活性，且该规范性没有明显的好处，反而带来了结构的复杂。
  /// </summary>
  public sealed partial class PutRowRequest : pb::IMessage<PutRowRequest> {
    private static readonly pb::MessageParser<PutRowRequest> _parser = new pb::MessageParser<PutRowRequest>(() => new PutRowRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutRowRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutRowRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutRowRequest(PutRowRequest other) : this() {
      tableName_ = other.tableName_;
      row_ = other.row_;
      condition_ = other.condition_ != null ? other.condition_.Clone() : null;
      returnContent_ = other.returnContent_ != null ? other.returnContent_.Clone() : null;
      transactionId_ = other.transactionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutRowRequest Clone() {
      return new PutRowRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private readonly static string TableNameDefaultValue = "";

    private string tableName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_ ?? TableNameDefaultValue; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTableName {
      get { return tableName_ != null; }
    }
    /// <summary>Clears the value of the "table_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTableName() {
      tableName_ = null;
    }

    /// <summary>Field number for the "row" field.</summary>
    public const int RowFieldNumber = 2;
    private readonly static pb::ByteString RowDefaultValue = pb::ByteString.Empty;

    private pb::ByteString row_;
    /// <summary>
    /// encoded as InplaceRowChangeSet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Row {
      get { return row_ ?? RowDefaultValue; }
      set {
        row_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "row" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRow {
      get { return row_ != null; }
    }
    /// <summary>Clears the value of the "row" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRow() {
      row_ = null;
    }

    /// <summary>Field number for the "condition" field.</summary>
    public const int ConditionFieldNumber = 3;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Condition condition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Condition Condition {
      get { return condition_; }
      set {
        condition_ = value;
      }
    }

    /// <summary>Field number for the "return_content" field.</summary>
    public const int ReturnContentFieldNumber = 4;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReturnContent returnContent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReturnContent ReturnContent {
      get { return returnContent_; }
      set {
        returnContent_ = value;
      }
    }

    /// <summary>Field number for the "transaction_id" field.</summary>
    public const int TransactionIdFieldNumber = 5;
    private readonly static string TransactionIdDefaultValue = "";

    private string transactionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TransactionId {
      get { return transactionId_ ?? TransactionIdDefaultValue; }
      set {
        transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "transaction_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTransactionId {
      get { return transactionId_ != null; }
    }
    /// <summary>Clears the value of the "transaction_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTransactionId() {
      transactionId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutRowRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutRowRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if (Row != other.Row) return false;
      if (!object.Equals(Condition, other.Condition)) return false;
      if (!object.Equals(ReturnContent, other.ReturnContent)) return false;
      if (TransactionId != other.TransactionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTableName) hash ^= TableName.GetHashCode();
      if (HasRow) hash ^= Row.GetHashCode();
      if (condition_ != null) hash ^= Condition.GetHashCode();
      if (returnContent_ != null) hash ^= ReturnContent.GetHashCode();
      if (HasTransactionId) hash ^= TransactionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTableName) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (HasRow) {
        output.WriteRawTag(18);
        output.WriteBytes(Row);
      }
      if (condition_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Condition);
      }
      if (returnContent_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ReturnContent);
      }
      if (HasTransactionId) {
        output.WriteRawTag(42);
        output.WriteString(TransactionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTableName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (HasRow) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Row);
      }
      if (condition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Condition);
      }
      if (returnContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReturnContent);
      }
      if (HasTransactionId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TransactionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutRowRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasTableName) {
        TableName = other.TableName;
      }
      if (other.HasRow) {
        Row = other.Row;
      }
      if (other.condition_ != null) {
        if (condition_ == null) {
          Condition = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Condition();
        }
        Condition.MergeFrom(other.Condition);
      }
      if (other.returnContent_ != null) {
        if (returnContent_ == null) {
          ReturnContent = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReturnContent();
        }
        ReturnContent.MergeFrom(other.ReturnContent);
      }
      if (other.HasTransactionId) {
        TransactionId = other.TransactionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            Row = input.ReadBytes();
            break;
          }
          case 26: {
            if (condition_ == null) {
              Condition = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Condition();
            }
            input.ReadMessage(Condition);
            break;
          }
          case 34: {
            if (returnContent_ == null) {
              ReturnContent = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReturnContent();
            }
            input.ReadMessage(ReturnContent);
            break;
          }
          case 42: {
            TransactionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PutRowResponse : pb::IMessage<PutRowResponse> {
    private static readonly pb::MessageParser<PutRowResponse> _parser = new pb::MessageParser<PutRowResponse>(() => new PutRowResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutRowResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutRowResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutRowResponse(PutRowResponse other) : this() {
      consumed_ = other.consumed_ != null ? other.consumed_.Clone() : null;
      row_ = other.row_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutRowResponse Clone() {
      return new PutRowResponse(this);
    }

    /// <summary>Field number for the "consumed" field.</summary>
    public const int ConsumedFieldNumber = 1;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity consumed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity Consumed {
      get { return consumed_; }
      set {
        consumed_ = value;
      }
    }

    /// <summary>Field number for the "row" field.</summary>
    public const int RowFieldNumber = 2;
    private readonly static pb::ByteString RowDefaultValue = pb::ByteString.Empty;

    private pb::ByteString row_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Row {
      get { return row_ ?? RowDefaultValue; }
      set {
        row_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "row" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRow {
      get { return row_ != null; }
    }
    /// <summary>Clears the value of the "row" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRow() {
      row_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutRowResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutRowResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Consumed, other.Consumed)) return false;
      if (Row != other.Row) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (consumed_ != null) hash ^= Consumed.GetHashCode();
      if (HasRow) hash ^= Row.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (consumed_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Consumed);
      }
      if (HasRow) {
        output.WriteRawTag(18);
        output.WriteBytes(Row);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (consumed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Consumed);
      }
      if (HasRow) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Row);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutRowResponse other) {
      if (other == null) {
        return;
      }
      if (other.consumed_ != null) {
        if (consumed_ == null) {
          Consumed = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity();
        }
        Consumed.MergeFrom(other.Consumed);
      }
      if (other.HasRow) {
        Row = other.Row;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (consumed_ == null) {
              Consumed = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity();
            }
            input.ReadMessage(Consumed);
            break;
          }
          case 18: {
            Row = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// OTS只支持删除该行的所有列所有版本，不支持：
  ///  1. 删除所有列的所有小于等于某个版本的所有版本
  /// </summary>
  public sealed partial class DeleteRowRequest : pb::IMessage<DeleteRowRequest> {
    private static readonly pb::MessageParser<DeleteRowRequest> _parser = new pb::MessageParser<DeleteRowRequest>(() => new DeleteRowRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteRowRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRowRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRowRequest(DeleteRowRequest other) : this() {
      tableName_ = other.tableName_;
      primaryKey_ = other.primaryKey_;
      condition_ = other.condition_ != null ? other.condition_.Clone() : null;
      returnContent_ = other.returnContent_ != null ? other.returnContent_.Clone() : null;
      transactionId_ = other.transactionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRowRequest Clone() {
      return new DeleteRowRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private readonly static string TableNameDefaultValue = "";

    private string tableName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_ ?? TableNameDefaultValue; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTableName {
      get { return tableName_ != null; }
    }
    /// <summary>Clears the value of the "table_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTableName() {
      tableName_ = null;
    }

    /// <summary>Field number for the "primary_key" field.</summary>
    public const int PrimaryKeyFieldNumber = 2;
    private readonly static pb::ByteString PrimaryKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString primaryKey_;
    /// <summary>
    /// encoded as InplaceRowChangeSet, but only has primary key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PrimaryKey {
      get { return primaryKey_ ?? PrimaryKeyDefaultValue; }
      set {
        primaryKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "primary_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPrimaryKey {
      get { return primaryKey_ != null; }
    }
    /// <summary>Clears the value of the "primary_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPrimaryKey() {
      primaryKey_ = null;
    }

    /// <summary>Field number for the "condition" field.</summary>
    public const int ConditionFieldNumber = 3;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Condition condition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Condition Condition {
      get { return condition_; }
      set {
        condition_ = value;
      }
    }

    /// <summary>Field number for the "return_content" field.</summary>
    public const int ReturnContentFieldNumber = 4;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReturnContent returnContent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReturnContent ReturnContent {
      get { return returnContent_; }
      set {
        returnContent_ = value;
      }
    }

    /// <summary>Field number for the "transaction_id" field.</summary>
    public const int TransactionIdFieldNumber = 5;
    private readonly static string TransactionIdDefaultValue = "";

    private string transactionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TransactionId {
      get { return transactionId_ ?? TransactionIdDefaultValue; }
      set {
        transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "transaction_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTransactionId {
      get { return transactionId_ != null; }
    }
    /// <summary>Clears the value of the "transaction_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTransactionId() {
      transactionId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteRowRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteRowRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if (PrimaryKey != other.PrimaryKey) return false;
      if (!object.Equals(Condition, other.Condition)) return false;
      if (!object.Equals(ReturnContent, other.ReturnContent)) return false;
      if (TransactionId != other.TransactionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTableName) hash ^= TableName.GetHashCode();
      if (HasPrimaryKey) hash ^= PrimaryKey.GetHashCode();
      if (condition_ != null) hash ^= Condition.GetHashCode();
      if (returnContent_ != null) hash ^= ReturnContent.GetHashCode();
      if (HasTransactionId) hash ^= TransactionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTableName) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (HasPrimaryKey) {
        output.WriteRawTag(18);
        output.WriteBytes(PrimaryKey);
      }
      if (condition_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Condition);
      }
      if (returnContent_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ReturnContent);
      }
      if (HasTransactionId) {
        output.WriteRawTag(42);
        output.WriteString(TransactionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTableName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (HasPrimaryKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PrimaryKey);
      }
      if (condition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Condition);
      }
      if (returnContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReturnContent);
      }
      if (HasTransactionId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TransactionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteRowRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasTableName) {
        TableName = other.TableName;
      }
      if (other.HasPrimaryKey) {
        PrimaryKey = other.PrimaryKey;
      }
      if (other.condition_ != null) {
        if (condition_ == null) {
          Condition = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Condition();
        }
        Condition.MergeFrom(other.Condition);
      }
      if (other.returnContent_ != null) {
        if (returnContent_ == null) {
          ReturnContent = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReturnContent();
        }
        ReturnContent.MergeFrom(other.ReturnContent);
      }
      if (other.HasTransactionId) {
        TransactionId = other.TransactionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            PrimaryKey = input.ReadBytes();
            break;
          }
          case 26: {
            if (condition_ == null) {
              Condition = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Condition();
            }
            input.ReadMessage(Condition);
            break;
          }
          case 34: {
            if (returnContent_ == null) {
              ReturnContent = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReturnContent();
            }
            input.ReadMessage(ReturnContent);
            break;
          }
          case 42: {
            TransactionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteRowResponse : pb::IMessage<DeleteRowResponse> {
    private static readonly pb::MessageParser<DeleteRowResponse> _parser = new pb::MessageParser<DeleteRowResponse>(() => new DeleteRowResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteRowResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRowResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRowResponse(DeleteRowResponse other) : this() {
      consumed_ = other.consumed_ != null ? other.consumed_.Clone() : null;
      row_ = other.row_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRowResponse Clone() {
      return new DeleteRowResponse(this);
    }

    /// <summary>Field number for the "consumed" field.</summary>
    public const int ConsumedFieldNumber = 1;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity consumed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity Consumed {
      get { return consumed_; }
      set {
        consumed_ = value;
      }
    }

    /// <summary>Field number for the "row" field.</summary>
    public const int RowFieldNumber = 2;
    private readonly static pb::ByteString RowDefaultValue = pb::ByteString.Empty;

    private pb::ByteString row_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Row {
      get { return row_ ?? RowDefaultValue; }
      set {
        row_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "row" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRow {
      get { return row_ != null; }
    }
    /// <summary>Clears the value of the "row" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRow() {
      row_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteRowResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteRowResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Consumed, other.Consumed)) return false;
      if (Row != other.Row) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (consumed_ != null) hash ^= Consumed.GetHashCode();
      if (HasRow) hash ^= Row.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (consumed_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Consumed);
      }
      if (HasRow) {
        output.WriteRawTag(18);
        output.WriteBytes(Row);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (consumed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Consumed);
      }
      if (HasRow) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Row);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteRowResponse other) {
      if (other == null) {
        return;
      }
      if (other.consumed_ != null) {
        if (consumed_ == null) {
          Consumed = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity();
        }
        Consumed.MergeFrom(other.Consumed);
      }
      if (other.HasRow) {
        Row = other.Row;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (consumed_ == null) {
              Consumed = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity();
            }
            input.ReadMessage(Consumed);
            break;
          }
          case 18: {
            Row = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// HBase支持Batch操作的每行都拥有不同的查询参数，OTS不支持。
  /// </summary>
  public sealed partial class TableInBatchGetRowRequest : pb::IMessage<TableInBatchGetRowRequest> {
    private static readonly pb::MessageParser<TableInBatchGetRowRequest> _parser = new pb::MessageParser<TableInBatchGetRowRequest>(() => new TableInBatchGetRowRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TableInBatchGetRowRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableInBatchGetRowRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableInBatchGetRowRequest(TableInBatchGetRowRequest other) : this() {
      _hasBits0 = other._hasBits0;
      tableName_ = other.tableName_;
      primaryKey_ = other.primaryKey_.Clone();
      token_ = other.token_.Clone();
      columnsToGet_ = other.columnsToGet_.Clone();
      timeRange_ = other.timeRange_ != null ? other.timeRange_.Clone() : null;
      maxVersions_ = other.maxVersions_;
      cacheBlocks_ = other.cacheBlocks_;
      filter_ = other.filter_;
      startColumn_ = other.startColumn_;
      endColumn_ = other.endColumn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableInBatchGetRowRequest Clone() {
      return new TableInBatchGetRowRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private readonly static string TableNameDefaultValue = "";

    private string tableName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_ ?? TableNameDefaultValue; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTableName {
      get { return tableName_ != null; }
    }
    /// <summary>Clears the value of the "table_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTableName() {
      tableName_ = null;
    }

    /// <summary>Field number for the "primary_key" field.</summary>
    public const int PrimaryKeyFieldNumber = 2;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_primaryKey_codec
        = pb::FieldCodec.ForBytes(18);
    private readonly pbc::RepeatedField<pb::ByteString> primaryKey_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    /// encoded as InplaceRowChangeSet, but only has primary key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> PrimaryKey {
      get { return primaryKey_; }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 3;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_token_codec
        = pb::FieldCodec.ForBytes(26);
    private readonly pbc::RepeatedField<pb::ByteString> token_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Token {
      get { return token_; }
    }

    /// <summary>Field number for the "columns_to_get" field.</summary>
    public const int ColumnsToGetFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_columnsToGet_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> columnsToGet_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 不指定则读出所有的列
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ColumnsToGet {
      get { return columnsToGet_; }
    }

    /// <summary>Field number for the "time_range" field.</summary>
    public const int TimeRangeFieldNumber = 5;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TimeRange timeRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TimeRange TimeRange {
      get { return timeRange_; }
      set {
        timeRange_ = value;
      }
    }

    /// <summary>Field number for the "max_versions" field.</summary>
    public const int MaxVersionsFieldNumber = 6;
    private readonly static int MaxVersionsDefaultValue = 0;

    private int maxVersions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxVersions {
      get { if ((_hasBits0 & 1) != 0) { return maxVersions_; } else { return MaxVersionsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        maxVersions_ = value;
      }
    }
    /// <summary>Gets whether the "max_versions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMaxVersions {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "max_versions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMaxVersions() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "cache_blocks" field.</summary>
    public const int CacheBlocksFieldNumber = 7;
    private readonly static bool CacheBlocksDefaultValue = true;

    private bool cacheBlocks_;
    /// <summary>
    /// 本次读出的数据是否进入BlockCache
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CacheBlocks {
      get { if ((_hasBits0 & 2) != 0) { return cacheBlocks_; } else { return CacheBlocksDefaultValue; } }
      set {
        _hasBits0 |= 2;
        cacheBlocks_ = value;
      }
    }
    /// <summary>Gets whether the "cache_blocks" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCacheBlocks {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "cache_blocks" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCacheBlocks() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 8;
    private readonly static pb::ByteString FilterDefaultValue = pb::ByteString.Empty;

    private pb::ByteString filter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Filter {
      get { return filter_ ?? FilterDefaultValue; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "filter" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFilter {
      get { return filter_ != null; }
    }
    /// <summary>Clears the value of the "filter" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFilter() {
      filter_ = null;
    }

    /// <summary>Field number for the "start_column" field.</summary>
    public const int StartColumnFieldNumber = 9;
    private readonly static string StartColumnDefaultValue = "";

    private string startColumn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartColumn {
      get { return startColumn_ ?? StartColumnDefaultValue; }
      set {
        startColumn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "start_column" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStartColumn {
      get { return startColumn_ != null; }
    }
    /// <summary>Clears the value of the "start_column" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStartColumn() {
      startColumn_ = null;
    }

    /// <summary>Field number for the "end_column" field.</summary>
    public const int EndColumnFieldNumber = 10;
    private readonly static string EndColumnDefaultValue = "";

    private string endColumn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndColumn {
      get { return endColumn_ ?? EndColumnDefaultValue; }
      set {
        endColumn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "end_column" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEndColumn {
      get { return endColumn_ != null; }
    }
    /// <summary>Clears the value of the "end_column" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEndColumn() {
      endColumn_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TableInBatchGetRowRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TableInBatchGetRowRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if(!primaryKey_.Equals(other.primaryKey_)) return false;
      if(!token_.Equals(other.token_)) return false;
      if(!columnsToGet_.Equals(other.columnsToGet_)) return false;
      if (!object.Equals(TimeRange, other.TimeRange)) return false;
      if (MaxVersions != other.MaxVersions) return false;
      if (CacheBlocks != other.CacheBlocks) return false;
      if (Filter != other.Filter) return false;
      if (StartColumn != other.StartColumn) return false;
      if (EndColumn != other.EndColumn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTableName) hash ^= TableName.GetHashCode();
      hash ^= primaryKey_.GetHashCode();
      hash ^= token_.GetHashCode();
      hash ^= columnsToGet_.GetHashCode();
      if (timeRange_ != null) hash ^= TimeRange.GetHashCode();
      if (HasMaxVersions) hash ^= MaxVersions.GetHashCode();
      if (HasCacheBlocks) hash ^= CacheBlocks.GetHashCode();
      if (HasFilter) hash ^= Filter.GetHashCode();
      if (HasStartColumn) hash ^= StartColumn.GetHashCode();
      if (HasEndColumn) hash ^= EndColumn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTableName) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      primaryKey_.WriteTo(output, _repeated_primaryKey_codec);
      token_.WriteTo(output, _repeated_token_codec);
      columnsToGet_.WriteTo(output, _repeated_columnsToGet_codec);
      if (timeRange_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(TimeRange);
      }
      if (HasMaxVersions) {
        output.WriteRawTag(48);
        output.WriteInt32(MaxVersions);
      }
      if (HasCacheBlocks) {
        output.WriteRawTag(56);
        output.WriteBool(CacheBlocks);
      }
      if (HasFilter) {
        output.WriteRawTag(66);
        output.WriteBytes(Filter);
      }
      if (HasStartColumn) {
        output.WriteRawTag(74);
        output.WriteString(StartColumn);
      }
      if (HasEndColumn) {
        output.WriteRawTag(82);
        output.WriteString(EndColumn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTableName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      size += primaryKey_.CalculateSize(_repeated_primaryKey_codec);
      size += token_.CalculateSize(_repeated_token_codec);
      size += columnsToGet_.CalculateSize(_repeated_columnsToGet_codec);
      if (timeRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeRange);
      }
      if (HasMaxVersions) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxVersions);
      }
      if (HasCacheBlocks) {
        size += 1 + 1;
      }
      if (HasFilter) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Filter);
      }
      if (HasStartColumn) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartColumn);
      }
      if (HasEndColumn) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndColumn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TableInBatchGetRowRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasTableName) {
        TableName = other.TableName;
      }
      primaryKey_.Add(other.primaryKey_);
      token_.Add(other.token_);
      columnsToGet_.Add(other.columnsToGet_);
      if (other.timeRange_ != null) {
        if (timeRange_ == null) {
          TimeRange = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TimeRange();
        }
        TimeRange.MergeFrom(other.TimeRange);
      }
      if (other.HasMaxVersions) {
        MaxVersions = other.MaxVersions;
      }
      if (other.HasCacheBlocks) {
        CacheBlocks = other.CacheBlocks;
      }
      if (other.HasFilter) {
        Filter = other.Filter;
      }
      if (other.HasStartColumn) {
        StartColumn = other.StartColumn;
      }
      if (other.HasEndColumn) {
        EndColumn = other.EndColumn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            primaryKey_.AddEntriesFrom(input, _repeated_primaryKey_codec);
            break;
          }
          case 26: {
            token_.AddEntriesFrom(input, _repeated_token_codec);
            break;
          }
          case 34: {
            columnsToGet_.AddEntriesFrom(input, _repeated_columnsToGet_codec);
            break;
          }
          case 42: {
            if (timeRange_ == null) {
              TimeRange = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TimeRange();
            }
            input.ReadMessage(TimeRange);
            break;
          }
          case 48: {
            MaxVersions = input.ReadInt32();
            break;
          }
          case 56: {
            CacheBlocks = input.ReadBool();
            break;
          }
          case 66: {
            Filter = input.ReadBytes();
            break;
          }
          case 74: {
            StartColumn = input.ReadString();
            break;
          }
          case 82: {
            EndColumn = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BatchGetRowRequest : pb::IMessage<BatchGetRowRequest> {
    private static readonly pb::MessageParser<BatchGetRowRequest> _parser = new pb::MessageParser<BatchGetRowRequest>(() => new BatchGetRowRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchGetRowRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchGetRowRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchGetRowRequest(BatchGetRowRequest other) : this() {
      tables_ = other.tables_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchGetRowRequest Clone() {
      return new BatchGetRowRequest(this);
    }

    /// <summary>Field number for the "tables" field.</summary>
    public const int TablesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableInBatchGetRowRequest> _repeated_tables_codec
        = pb::FieldCodec.ForMessage(10, global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableInBatchGetRowRequest.Parser);
    private readonly pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableInBatchGetRowRequest> tables_ = new pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableInBatchGetRowRequest>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableInBatchGetRowRequest> Tables {
      get { return tables_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchGetRowRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchGetRowRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!tables_.Equals(other.tables_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= tables_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      tables_.WriteTo(output, _repeated_tables_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += tables_.CalculateSize(_repeated_tables_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchGetRowRequest other) {
      if (other == null) {
        return;
      }
      tables_.Add(other.tables_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            tables_.AddEntriesFrom(input, _repeated_tables_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RowInBatchGetRowResponse : pb::IMessage<RowInBatchGetRowResponse> {
    private static readonly pb::MessageParser<RowInBatchGetRowResponse> _parser = new pb::MessageParser<RowInBatchGetRowResponse>(() => new RowInBatchGetRowResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RowInBatchGetRowResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RowInBatchGetRowResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RowInBatchGetRowResponse(RowInBatchGetRowResponse other) : this() {
      _hasBits0 = other._hasBits0;
      isOk_ = other.isOk_;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      consumed_ = other.consumed_ != null ? other.consumed_.Clone() : null;
      row_ = other.row_;
      nextToken_ = other.nextToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RowInBatchGetRowResponse Clone() {
      return new RowInBatchGetRowResponse(this);
    }

    /// <summary>Field number for the "is_ok" field.</summary>
    public const int IsOkFieldNumber = 1;
    private readonly static bool IsOkDefaultValue = false;

    private bool isOk_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOk {
      get { if ((_hasBits0 & 1) != 0) { return isOk_; } else { return IsOkDefaultValue; } }
      set {
        _hasBits0 |= 1;
        isOk_ = value;
      }
    }
    /// <summary>Gets whether the "is_ok" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIsOk {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "is_ok" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIsOk() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Error error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Error Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "consumed" field.</summary>
    public const int ConsumedFieldNumber = 3;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity consumed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity Consumed {
      get { return consumed_; }
      set {
        consumed_ = value;
      }
    }

    /// <summary>Field number for the "row" field.</summary>
    public const int RowFieldNumber = 4;
    private readonly static pb::ByteString RowDefaultValue = pb::ByteString.Empty;

    private pb::ByteString row_;
    /// <summary>
    /// encoded as InplaceRowChangeSet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Row {
      get { return row_ ?? RowDefaultValue; }
      set {
        row_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "row" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRow {
      get { return row_ != null; }
    }
    /// <summary>Clears the value of the "row" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRow() {
      row_ = null;
    }

    /// <summary>Field number for the "next_token" field.</summary>
    public const int NextTokenFieldNumber = 5;
    private readonly static pb::ByteString NextTokenDefaultValue = pb::ByteString.Empty;

    private pb::ByteString nextToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString NextToken {
      get { return nextToken_ ?? NextTokenDefaultValue; }
      set {
        nextToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "next_token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNextToken {
      get { return nextToken_ != null; }
    }
    /// <summary>Clears the value of the "next_token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNextToken() {
      nextToken_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RowInBatchGetRowResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RowInBatchGetRowResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsOk != other.IsOk) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (!object.Equals(Consumed, other.Consumed)) return false;
      if (Row != other.Row) return false;
      if (NextToken != other.NextToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIsOk) hash ^= IsOk.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (consumed_ != null) hash ^= Consumed.GetHashCode();
      if (HasRow) hash ^= Row.GetHashCode();
      if (HasNextToken) hash ^= NextToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasIsOk) {
        output.WriteRawTag(8);
        output.WriteBool(IsOk);
      }
      if (error_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Error);
      }
      if (consumed_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Consumed);
      }
      if (HasRow) {
        output.WriteRawTag(34);
        output.WriteBytes(Row);
      }
      if (HasNextToken) {
        output.WriteRawTag(42);
        output.WriteBytes(NextToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasIsOk) {
        size += 1 + 1;
      }
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (consumed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Consumed);
      }
      if (HasRow) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Row);
      }
      if (HasNextToken) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(NextToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RowInBatchGetRowResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasIsOk) {
        IsOk = other.IsOk;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Error();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.consumed_ != null) {
        if (consumed_ == null) {
          Consumed = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity();
        }
        Consumed.MergeFrom(other.Consumed);
      }
      if (other.HasRow) {
        Row = other.Row;
      }
      if (other.HasNextToken) {
        NextToken = other.NextToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsOk = input.ReadBool();
            break;
          }
          case 18: {
            if (error_ == null) {
              Error = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Error();
            }
            input.ReadMessage(Error);
            break;
          }
          case 26: {
            if (consumed_ == null) {
              Consumed = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity();
            }
            input.ReadMessage(Consumed);
            break;
          }
          case 34: {
            Row = input.ReadBytes();
            break;
          }
          case 42: {
            NextToken = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TableInBatchGetRowResponse : pb::IMessage<TableInBatchGetRowResponse> {
    private static readonly pb::MessageParser<TableInBatchGetRowResponse> _parser = new pb::MessageParser<TableInBatchGetRowResponse>(() => new TableInBatchGetRowResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TableInBatchGetRowResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableInBatchGetRowResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableInBatchGetRowResponse(TableInBatchGetRowResponse other) : this() {
      tableName_ = other.tableName_;
      rows_ = other.rows_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableInBatchGetRowResponse Clone() {
      return new TableInBatchGetRowResponse(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private readonly static string TableNameDefaultValue = "";

    private string tableName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_ ?? TableNameDefaultValue; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTableName {
      get { return tableName_ != null; }
    }
    /// <summary>Clears the value of the "table_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTableName() {
      tableName_ = null;
    }

    /// <summary>Field number for the "rows" field.</summary>
    public const int RowsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.RowInBatchGetRowResponse> _repeated_rows_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.RowInBatchGetRowResponse.Parser);
    private readonly pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.RowInBatchGetRowResponse> rows_ = new pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.RowInBatchGetRowResponse>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.RowInBatchGetRowResponse> Rows {
      get { return rows_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TableInBatchGetRowResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TableInBatchGetRowResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if(!rows_.Equals(other.rows_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTableName) hash ^= TableName.GetHashCode();
      hash ^= rows_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTableName) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      rows_.WriteTo(output, _repeated_rows_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTableName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      size += rows_.CalculateSize(_repeated_rows_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TableInBatchGetRowResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasTableName) {
        TableName = other.TableName;
      }
      rows_.Add(other.rows_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            rows_.AddEntriesFrom(input, _repeated_rows_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BatchGetRowResponse : pb::IMessage<BatchGetRowResponse> {
    private static readonly pb::MessageParser<BatchGetRowResponse> _parser = new pb::MessageParser<BatchGetRowResponse>(() => new BatchGetRowResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchGetRowResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchGetRowResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchGetRowResponse(BatchGetRowResponse other) : this() {
      tables_ = other.tables_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchGetRowResponse Clone() {
      return new BatchGetRowResponse(this);
    }

    /// <summary>Field number for the "tables" field.</summary>
    public const int TablesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableInBatchGetRowResponse> _repeated_tables_codec
        = pb::FieldCodec.ForMessage(10, global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableInBatchGetRowResponse.Parser);
    private readonly pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableInBatchGetRowResponse> tables_ = new pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableInBatchGetRowResponse>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableInBatchGetRowResponse> Tables {
      get { return tables_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchGetRowResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchGetRowResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!tables_.Equals(other.tables_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= tables_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      tables_.WriteTo(output, _repeated_tables_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += tables_.CalculateSize(_repeated_tables_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchGetRowResponse other) {
      if (other == null) {
        return;
      }
      tables_.Add(other.tables_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            tables_.AddEntriesFrom(input, _repeated_tables_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RowInBatchWriteRowRequest : pb::IMessage<RowInBatchWriteRowRequest> {
    private static readonly pb::MessageParser<RowInBatchWriteRowRequest> _parser = new pb::MessageParser<RowInBatchWriteRowRequest>(() => new RowInBatchWriteRowRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RowInBatchWriteRowRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RowInBatchWriteRowRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RowInBatchWriteRowRequest(RowInBatchWriteRowRequest other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      rowChange_ = other.rowChange_;
      condition_ = other.condition_ != null ? other.condition_.Clone() : null;
      returnContent_ = other.returnContent_ != null ? other.returnContent_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RowInBatchWriteRowRequest Clone() {
      return new RowInBatchWriteRowRequest(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.OperationType TypeDefaultValue = global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.OperationType.Put;

    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.OperationType type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.OperationType Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "row_change" field.</summary>
    public const int RowChangeFieldNumber = 2;
    private readonly static pb::ByteString RowChangeDefaultValue = pb::ByteString.Empty;

    private pb::ByteString rowChange_;
    /// <summary>
    /// encoded as InplaceRowChangeSet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString RowChange {
      get { return rowChange_ ?? RowChangeDefaultValue; }
      set {
        rowChange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "row_change" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRowChange {
      get { return rowChange_ != null; }
    }
    /// <summary>Clears the value of the "row_change" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRowChange() {
      rowChange_ = null;
    }

    /// <summary>Field number for the "condition" field.</summary>
    public const int ConditionFieldNumber = 3;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Condition condition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Condition Condition {
      get { return condition_; }
      set {
        condition_ = value;
      }
    }

    /// <summary>Field number for the "return_content" field.</summary>
    public const int ReturnContentFieldNumber = 4;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReturnContent returnContent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReturnContent ReturnContent {
      get { return returnContent_; }
      set {
        returnContent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RowInBatchWriteRowRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RowInBatchWriteRowRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (RowChange != other.RowChange) return false;
      if (!object.Equals(Condition, other.Condition)) return false;
      if (!object.Equals(ReturnContent, other.ReturnContent)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasRowChange) hash ^= RowChange.GetHashCode();
      if (condition_ != null) hash ^= Condition.GetHashCode();
      if (returnContent_ != null) hash ^= ReturnContent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasRowChange) {
        output.WriteRawTag(18);
        output.WriteBytes(RowChange);
      }
      if (condition_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Condition);
      }
      if (returnContent_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ReturnContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (HasRowChange) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RowChange);
      }
      if (condition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Condition);
      }
      if (returnContent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReturnContent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RowInBatchWriteRowRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasRowChange) {
        RowChange = other.RowChange;
      }
      if (other.condition_ != null) {
        if (condition_ == null) {
          Condition = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Condition();
        }
        Condition.MergeFrom(other.Condition);
      }
      if (other.returnContent_ != null) {
        if (returnContent_ == null) {
          ReturnContent = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReturnContent();
        }
        ReturnContent.MergeFrom(other.ReturnContent);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.OperationType) input.ReadEnum();
            break;
          }
          case 18: {
            RowChange = input.ReadBytes();
            break;
          }
          case 26: {
            if (condition_ == null) {
              Condition = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Condition();
            }
            input.ReadMessage(Condition);
            break;
          }
          case 34: {
            if (returnContent_ == null) {
              ReturnContent = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ReturnContent();
            }
            input.ReadMessage(ReturnContent);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TableInBatchWriteRowRequest : pb::IMessage<TableInBatchWriteRowRequest> {
    private static readonly pb::MessageParser<TableInBatchWriteRowRequest> _parser = new pb::MessageParser<TableInBatchWriteRowRequest>(() => new TableInBatchWriteRowRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TableInBatchWriteRowRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableInBatchWriteRowRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableInBatchWriteRowRequest(TableInBatchWriteRowRequest other) : this() {
      tableName_ = other.tableName_;
      rows_ = other.rows_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableInBatchWriteRowRequest Clone() {
      return new TableInBatchWriteRowRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private readonly static string TableNameDefaultValue = "";

    private string tableName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_ ?? TableNameDefaultValue; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTableName {
      get { return tableName_ != null; }
    }
    /// <summary>Clears the value of the "table_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTableName() {
      tableName_ = null;
    }

    /// <summary>Field number for the "rows" field.</summary>
    public const int RowsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.RowInBatchWriteRowRequest> _repeated_rows_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.RowInBatchWriteRowRequest.Parser);
    private readonly pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.RowInBatchWriteRowRequest> rows_ = new pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.RowInBatchWriteRowRequest>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.RowInBatchWriteRowRequest> Rows {
      get { return rows_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TableInBatchWriteRowRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TableInBatchWriteRowRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if(!rows_.Equals(other.rows_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTableName) hash ^= TableName.GetHashCode();
      hash ^= rows_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTableName) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      rows_.WriteTo(output, _repeated_rows_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTableName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      size += rows_.CalculateSize(_repeated_rows_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TableInBatchWriteRowRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasTableName) {
        TableName = other.TableName;
      }
      rows_.Add(other.rows_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            rows_.AddEntriesFrom(input, _repeated_rows_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BatchWriteRowRequest : pb::IMessage<BatchWriteRowRequest> {
    private static readonly pb::MessageParser<BatchWriteRowRequest> _parser = new pb::MessageParser<BatchWriteRowRequest>(() => new BatchWriteRowRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchWriteRowRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchWriteRowRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchWriteRowRequest(BatchWriteRowRequest other) : this() {
      tables_ = other.tables_.Clone();
      transactionId_ = other.transactionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchWriteRowRequest Clone() {
      return new BatchWriteRowRequest(this);
    }

    /// <summary>Field number for the "tables" field.</summary>
    public const int TablesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableInBatchWriteRowRequest> _repeated_tables_codec
        = pb::FieldCodec.ForMessage(10, global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableInBatchWriteRowRequest.Parser);
    private readonly pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableInBatchWriteRowRequest> tables_ = new pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableInBatchWriteRowRequest>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableInBatchWriteRowRequest> Tables {
      get { return tables_; }
    }

    /// <summary>Field number for the "transaction_id" field.</summary>
    public const int TransactionIdFieldNumber = 2;
    private readonly static string TransactionIdDefaultValue = "";

    private string transactionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TransactionId {
      get { return transactionId_ ?? TransactionIdDefaultValue; }
      set {
        transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "transaction_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTransactionId {
      get { return transactionId_ != null; }
    }
    /// <summary>Clears the value of the "transaction_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTransactionId() {
      transactionId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchWriteRowRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchWriteRowRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!tables_.Equals(other.tables_)) return false;
      if (TransactionId != other.TransactionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= tables_.GetHashCode();
      if (HasTransactionId) hash ^= TransactionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      tables_.WriteTo(output, _repeated_tables_codec);
      if (HasTransactionId) {
        output.WriteRawTag(18);
        output.WriteString(TransactionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += tables_.CalculateSize(_repeated_tables_codec);
      if (HasTransactionId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TransactionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchWriteRowRequest other) {
      if (other == null) {
        return;
      }
      tables_.Add(other.tables_);
      if (other.HasTransactionId) {
        TransactionId = other.TransactionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            tables_.AddEntriesFrom(input, _repeated_tables_codec);
            break;
          }
          case 18: {
            TransactionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RowInBatchWriteRowResponse : pb::IMessage<RowInBatchWriteRowResponse> {
    private static readonly pb::MessageParser<RowInBatchWriteRowResponse> _parser = new pb::MessageParser<RowInBatchWriteRowResponse>(() => new RowInBatchWriteRowResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RowInBatchWriteRowResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RowInBatchWriteRowResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RowInBatchWriteRowResponse(RowInBatchWriteRowResponse other) : this() {
      _hasBits0 = other._hasBits0;
      isOk_ = other.isOk_;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      consumed_ = other.consumed_ != null ? other.consumed_.Clone() : null;
      row_ = other.row_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RowInBatchWriteRowResponse Clone() {
      return new RowInBatchWriteRowResponse(this);
    }

    /// <summary>Field number for the "is_ok" field.</summary>
    public const int IsOkFieldNumber = 1;
    private readonly static bool IsOkDefaultValue = false;

    private bool isOk_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOk {
      get { if ((_hasBits0 & 1) != 0) { return isOk_; } else { return IsOkDefaultValue; } }
      set {
        _hasBits0 |= 1;
        isOk_ = value;
      }
    }
    /// <summary>Gets whether the "is_ok" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIsOk {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "is_ok" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIsOk() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Error error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Error Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "consumed" field.</summary>
    public const int ConsumedFieldNumber = 3;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity consumed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity Consumed {
      get { return consumed_; }
      set {
        consumed_ = value;
      }
    }

    /// <summary>Field number for the "row" field.</summary>
    public const int RowFieldNumber = 4;
    private readonly static pb::ByteString RowDefaultValue = pb::ByteString.Empty;

    private pb::ByteString row_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Row {
      get { return row_ ?? RowDefaultValue; }
      set {
        row_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "row" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRow {
      get { return row_ != null; }
    }
    /// <summary>Clears the value of the "row" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRow() {
      row_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RowInBatchWriteRowResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RowInBatchWriteRowResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsOk != other.IsOk) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (!object.Equals(Consumed, other.Consumed)) return false;
      if (Row != other.Row) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIsOk) hash ^= IsOk.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (consumed_ != null) hash ^= Consumed.GetHashCode();
      if (HasRow) hash ^= Row.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasIsOk) {
        output.WriteRawTag(8);
        output.WriteBool(IsOk);
      }
      if (error_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Error);
      }
      if (consumed_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Consumed);
      }
      if (HasRow) {
        output.WriteRawTag(34);
        output.WriteBytes(Row);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasIsOk) {
        size += 1 + 1;
      }
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (consumed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Consumed);
      }
      if (HasRow) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Row);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RowInBatchWriteRowResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasIsOk) {
        IsOk = other.IsOk;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Error();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.consumed_ != null) {
        if (consumed_ == null) {
          Consumed = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity();
        }
        Consumed.MergeFrom(other.Consumed);
      }
      if (other.HasRow) {
        Row = other.Row;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsOk = input.ReadBool();
            break;
          }
          case 18: {
            if (error_ == null) {
              Error = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Error();
            }
            input.ReadMessage(Error);
            break;
          }
          case 26: {
            if (consumed_ == null) {
              Consumed = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity();
            }
            input.ReadMessage(Consumed);
            break;
          }
          case 34: {
            Row = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TableInBatchWriteRowResponse : pb::IMessage<TableInBatchWriteRowResponse> {
    private static readonly pb::MessageParser<TableInBatchWriteRowResponse> _parser = new pb::MessageParser<TableInBatchWriteRowResponse>(() => new TableInBatchWriteRowResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TableInBatchWriteRowResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableInBatchWriteRowResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableInBatchWriteRowResponse(TableInBatchWriteRowResponse other) : this() {
      tableName_ = other.tableName_;
      rows_ = other.rows_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableInBatchWriteRowResponse Clone() {
      return new TableInBatchWriteRowResponse(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private readonly static string TableNameDefaultValue = "";

    private string tableName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_ ?? TableNameDefaultValue; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTableName {
      get { return tableName_ != null; }
    }
    /// <summary>Clears the value of the "table_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTableName() {
      tableName_ = null;
    }

    /// <summary>Field number for the "rows" field.</summary>
    public const int RowsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.RowInBatchWriteRowResponse> _repeated_rows_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.RowInBatchWriteRowResponse.Parser);
    private readonly pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.RowInBatchWriteRowResponse> rows_ = new pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.RowInBatchWriteRowResponse>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.RowInBatchWriteRowResponse> Rows {
      get { return rows_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TableInBatchWriteRowResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TableInBatchWriteRowResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if(!rows_.Equals(other.rows_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTableName) hash ^= TableName.GetHashCode();
      hash ^= rows_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTableName) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      rows_.WriteTo(output, _repeated_rows_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTableName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      size += rows_.CalculateSize(_repeated_rows_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TableInBatchWriteRowResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasTableName) {
        TableName = other.TableName;
      }
      rows_.Add(other.rows_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            rows_.AddEntriesFrom(input, _repeated_rows_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BatchWriteRowResponse : pb::IMessage<BatchWriteRowResponse> {
    private static readonly pb::MessageParser<BatchWriteRowResponse> _parser = new pb::MessageParser<BatchWriteRowResponse>(() => new BatchWriteRowResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchWriteRowResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchWriteRowResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchWriteRowResponse(BatchWriteRowResponse other) : this() {
      tables_ = other.tables_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchWriteRowResponse Clone() {
      return new BatchWriteRowResponse(this);
    }

    /// <summary>Field number for the "tables" field.</summary>
    public const int TablesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableInBatchWriteRowResponse> _repeated_tables_codec
        = pb::FieldCodec.ForMessage(10, global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableInBatchWriteRowResponse.Parser);
    private readonly pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableInBatchWriteRowResponse> tables_ = new pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableInBatchWriteRowResponse>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableInBatchWriteRowResponse> Tables {
      get { return tables_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchWriteRowResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchWriteRowResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!tables_.Equals(other.tables_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= tables_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      tables_.WriteTo(output, _repeated_tables_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += tables_.CalculateSize(_repeated_tables_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchWriteRowResponse other) {
      if (other == null) {
        return;
      }
      tables_.Add(other.tables_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            tables_.AddEntriesFrom(input, _repeated_tables_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// HBase支持以下参数：
  ///     1. TimeRange或指定time
  ///     2. Filter（根据列值或列名来过滤）
  /// 我们只支持给同版本的选择条件。
  /// </summary>
  public sealed partial class GetRangeRequest : pb::IMessage<GetRangeRequest> {
    private static readonly pb::MessageParser<GetRangeRequest> _parser = new pb::MessageParser<GetRangeRequest>(() => new GetRangeRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRangeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRangeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRangeRequest(GetRangeRequest other) : this() {
      _hasBits0 = other._hasBits0;
      tableName_ = other.tableName_;
      direction_ = other.direction_;
      columnsToGet_ = other.columnsToGet_.Clone();
      timeRange_ = other.timeRange_ != null ? other.timeRange_.Clone() : null;
      maxVersions_ = other.maxVersions_;
      limit_ = other.limit_;
      inclusiveStartPrimaryKey_ = other.inclusiveStartPrimaryKey_;
      exclusiveEndPrimaryKey_ = other.exclusiveEndPrimaryKey_;
      cacheBlocks_ = other.cacheBlocks_;
      filter_ = other.filter_;
      startColumn_ = other.startColumn_;
      endColumn_ = other.endColumn_;
      token_ = other.token_;
      transactionId_ = other.transactionId_;
      dataBlockTypeHint_ = other.dataBlockTypeHint_;
      returnEntirePrimaryKeys_ = other.returnEntirePrimaryKeys_;
      compressTypeHint_ = other.compressTypeHint_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRangeRequest Clone() {
      return new GetRangeRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private readonly static string TableNameDefaultValue = "";

    private string tableName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_ ?? TableNameDefaultValue; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTableName {
      get { return tableName_ != null; }
    }
    /// <summary>Clears the value of the "table_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTableName() {
      tableName_ = null;
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 2;
    private readonly static global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Direction DirectionDefaultValue = global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Direction.Forward;

    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Direction direction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Direction Direction {
      get { if ((_hasBits0 & 1) != 0) { return direction_; } else { return DirectionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        direction_ = value;
      }
    }
    /// <summary>Gets whether the "direction" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDirection {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "direction" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDirection() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "columns_to_get" field.</summary>
    public const int ColumnsToGetFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_columnsToGet_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> columnsToGet_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 不指定则读出所有的列
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ColumnsToGet {
      get { return columnsToGet_; }
    }

    /// <summary>Field number for the "time_range" field.</summary>
    public const int TimeRangeFieldNumber = 4;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TimeRange timeRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TimeRange TimeRange {
      get { return timeRange_; }
      set {
        timeRange_ = value;
      }
    }

    /// <summary>Field number for the "max_versions" field.</summary>
    public const int MaxVersionsFieldNumber = 5;
    private readonly static int MaxVersionsDefaultValue = 0;

    private int maxVersions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxVersions {
      get { if ((_hasBits0 & 2) != 0) { return maxVersions_; } else { return MaxVersionsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        maxVersions_ = value;
      }
    }
    /// <summary>Gets whether the "max_versions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMaxVersions {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "max_versions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMaxVersions() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 6;
    private readonly static int LimitDefaultValue = 0;

    private int limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Limit {
      get { if ((_hasBits0 & 4) != 0) { return limit_; } else { return LimitDefaultValue; } }
      set {
        _hasBits0 |= 4;
        limit_ = value;
      }
    }
    /// <summary>Gets whether the "limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLimit {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLimit() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "inclusive_start_primary_key" field.</summary>
    public const int InclusiveStartPrimaryKeyFieldNumber = 7;
    private readonly static pb::ByteString InclusiveStartPrimaryKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString inclusiveStartPrimaryKey_;
    /// <summary>
    /// encoded as InplaceRowChangeSet, but only has primary key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString InclusiveStartPrimaryKey {
      get { return inclusiveStartPrimaryKey_ ?? InclusiveStartPrimaryKeyDefaultValue; }
      set {
        inclusiveStartPrimaryKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "inclusive_start_primary_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInclusiveStartPrimaryKey {
      get { return inclusiveStartPrimaryKey_ != null; }
    }
    /// <summary>Clears the value of the "inclusive_start_primary_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInclusiveStartPrimaryKey() {
      inclusiveStartPrimaryKey_ = null;
    }

    /// <summary>Field number for the "exclusive_end_primary_key" field.</summary>
    public const int ExclusiveEndPrimaryKeyFieldNumber = 8;
    private readonly static pb::ByteString ExclusiveEndPrimaryKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString exclusiveEndPrimaryKey_;
    /// <summary>
    /// encoded as InplaceRowChangeSet, but only has primary key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ExclusiveEndPrimaryKey {
      get { return exclusiveEndPrimaryKey_ ?? ExclusiveEndPrimaryKeyDefaultValue; }
      set {
        exclusiveEndPrimaryKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "exclusive_end_primary_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExclusiveEndPrimaryKey {
      get { return exclusiveEndPrimaryKey_ != null; }
    }
    /// <summary>Clears the value of the "exclusive_end_primary_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExclusiveEndPrimaryKey() {
      exclusiveEndPrimaryKey_ = null;
    }

    /// <summary>Field number for the "cache_blocks" field.</summary>
    public const int CacheBlocksFieldNumber = 9;
    private readonly static bool CacheBlocksDefaultValue = true;

    private bool cacheBlocks_;
    /// <summary>
    /// 本次读出的数据是否进入BlockCache
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CacheBlocks {
      get { if ((_hasBits0 & 8) != 0) { return cacheBlocks_; } else { return CacheBlocksDefaultValue; } }
      set {
        _hasBits0 |= 8;
        cacheBlocks_ = value;
      }
    }
    /// <summary>Gets whether the "cache_blocks" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCacheBlocks {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "cache_blocks" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCacheBlocks() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 10;
    private readonly static pb::ByteString FilterDefaultValue = pb::ByteString.Empty;

    private pb::ByteString filter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Filter {
      get { return filter_ ?? FilterDefaultValue; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "filter" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFilter {
      get { return filter_ != null; }
    }
    /// <summary>Clears the value of the "filter" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFilter() {
      filter_ = null;
    }

    /// <summary>Field number for the "start_column" field.</summary>
    public const int StartColumnFieldNumber = 11;
    private readonly static string StartColumnDefaultValue = "";

    private string startColumn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartColumn {
      get { return startColumn_ ?? StartColumnDefaultValue; }
      set {
        startColumn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "start_column" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStartColumn {
      get { return startColumn_ != null; }
    }
    /// <summary>Clears the value of the "start_column" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStartColumn() {
      startColumn_ = null;
    }

    /// <summary>Field number for the "end_column" field.</summary>
    public const int EndColumnFieldNumber = 12;
    private readonly static string EndColumnDefaultValue = "";

    private string endColumn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndColumn {
      get { return endColumn_ ?? EndColumnDefaultValue; }
      set {
        endColumn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "end_column" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEndColumn {
      get { return endColumn_ != null; }
    }
    /// <summary>Clears the value of the "end_column" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEndColumn() {
      endColumn_ = null;
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 13;
    private readonly static pb::ByteString TokenDefaultValue = pb::ByteString.Empty;

    private pb::ByteString token_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearToken() {
      token_ = null;
    }

    /// <summary>Field number for the "transaction_id" field.</summary>
    public const int TransactionIdFieldNumber = 14;
    private readonly static string TransactionIdDefaultValue = "";

    private string transactionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TransactionId {
      get { return transactionId_ ?? TransactionIdDefaultValue; }
      set {
        transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "transaction_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTransactionId {
      get { return transactionId_ != null; }
    }
    /// <summary>Clears the value of the "transaction_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTransactionId() {
      transactionId_ = null;
    }

    /// <summary>Field number for the "data_block_type_hint" field.</summary>
    public const int DataBlockTypeHintFieldNumber = 15;
    private readonly static global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DataBlockType DataBlockTypeHintDefaultValue = global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DataBlockType.DbtPlainBuffer;

    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DataBlockType dataBlockTypeHint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DataBlockType DataBlockTypeHint {
      get { if ((_hasBits0 & 16) != 0) { return dataBlockTypeHint_; } else { return DataBlockTypeHintDefaultValue; } }
      set {
        _hasBits0 |= 16;
        dataBlockTypeHint_ = value;
      }
    }
    /// <summary>Gets whether the "data_block_type_hint" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDataBlockTypeHint {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "data_block_type_hint" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDataBlockTypeHint() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "return_entire_primary_keys" field.</summary>
    public const int ReturnEntirePrimaryKeysFieldNumber = 16;
    private readonly static bool ReturnEntirePrimaryKeysDefaultValue = true;

    private bool returnEntirePrimaryKeys_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ReturnEntirePrimaryKeys {
      get { if ((_hasBits0 & 32) != 0) { return returnEntirePrimaryKeys_; } else { return ReturnEntirePrimaryKeysDefaultValue; } }
      set {
        _hasBits0 |= 32;
        returnEntirePrimaryKeys_ = value;
      }
    }
    /// <summary>Gets whether the "return_entire_primary_keys" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReturnEntirePrimaryKeys {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "return_entire_primary_keys" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReturnEntirePrimaryKeys() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "compress_type_hint" field.</summary>
    public const int CompressTypeHintFieldNumber = 17;
    private readonly static global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CompressType CompressTypeHintDefaultValue = global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CompressType.CptNone;

    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CompressType compressTypeHint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CompressType CompressTypeHint {
      get { if ((_hasBits0 & 64) != 0) { return compressTypeHint_; } else { return CompressTypeHintDefaultValue; } }
      set {
        _hasBits0 |= 64;
        compressTypeHint_ = value;
      }
    }
    /// <summary>Gets whether the "compress_type_hint" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCompressTypeHint {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "compress_type_hint" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCompressTypeHint() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRangeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRangeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if (Direction != other.Direction) return false;
      if(!columnsToGet_.Equals(other.columnsToGet_)) return false;
      if (!object.Equals(TimeRange, other.TimeRange)) return false;
      if (MaxVersions != other.MaxVersions) return false;
      if (Limit != other.Limit) return false;
      if (InclusiveStartPrimaryKey != other.InclusiveStartPrimaryKey) return false;
      if (ExclusiveEndPrimaryKey != other.ExclusiveEndPrimaryKey) return false;
      if (CacheBlocks != other.CacheBlocks) return false;
      if (Filter != other.Filter) return false;
      if (StartColumn != other.StartColumn) return false;
      if (EndColumn != other.EndColumn) return false;
      if (Token != other.Token) return false;
      if (TransactionId != other.TransactionId) return false;
      if (DataBlockTypeHint != other.DataBlockTypeHint) return false;
      if (ReturnEntirePrimaryKeys != other.ReturnEntirePrimaryKeys) return false;
      if (CompressTypeHint != other.CompressTypeHint) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTableName) hash ^= TableName.GetHashCode();
      if (HasDirection) hash ^= Direction.GetHashCode();
      hash ^= columnsToGet_.GetHashCode();
      if (timeRange_ != null) hash ^= TimeRange.GetHashCode();
      if (HasMaxVersions) hash ^= MaxVersions.GetHashCode();
      if (HasLimit) hash ^= Limit.GetHashCode();
      if (HasInclusiveStartPrimaryKey) hash ^= InclusiveStartPrimaryKey.GetHashCode();
      if (HasExclusiveEndPrimaryKey) hash ^= ExclusiveEndPrimaryKey.GetHashCode();
      if (HasCacheBlocks) hash ^= CacheBlocks.GetHashCode();
      if (HasFilter) hash ^= Filter.GetHashCode();
      if (HasStartColumn) hash ^= StartColumn.GetHashCode();
      if (HasEndColumn) hash ^= EndColumn.GetHashCode();
      if (HasToken) hash ^= Token.GetHashCode();
      if (HasTransactionId) hash ^= TransactionId.GetHashCode();
      if (HasDataBlockTypeHint) hash ^= DataBlockTypeHint.GetHashCode();
      if (HasReturnEntirePrimaryKeys) hash ^= ReturnEntirePrimaryKeys.GetHashCode();
      if (HasCompressTypeHint) hash ^= CompressTypeHint.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTableName) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (HasDirection) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Direction);
      }
      columnsToGet_.WriteTo(output, _repeated_columnsToGet_codec);
      if (timeRange_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TimeRange);
      }
      if (HasMaxVersions) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxVersions);
      }
      if (HasLimit) {
        output.WriteRawTag(48);
        output.WriteInt32(Limit);
      }
      if (HasInclusiveStartPrimaryKey) {
        output.WriteRawTag(58);
        output.WriteBytes(InclusiveStartPrimaryKey);
      }
      if (HasExclusiveEndPrimaryKey) {
        output.WriteRawTag(66);
        output.WriteBytes(ExclusiveEndPrimaryKey);
      }
      if (HasCacheBlocks) {
        output.WriteRawTag(72);
        output.WriteBool(CacheBlocks);
      }
      if (HasFilter) {
        output.WriteRawTag(82);
        output.WriteBytes(Filter);
      }
      if (HasStartColumn) {
        output.WriteRawTag(90);
        output.WriteString(StartColumn);
      }
      if (HasEndColumn) {
        output.WriteRawTag(98);
        output.WriteString(EndColumn);
      }
      if (HasToken) {
        output.WriteRawTag(106);
        output.WriteBytes(Token);
      }
      if (HasTransactionId) {
        output.WriteRawTag(114);
        output.WriteString(TransactionId);
      }
      if (HasDataBlockTypeHint) {
        output.WriteRawTag(120);
        output.WriteEnum((int) DataBlockTypeHint);
      }
      if (HasReturnEntirePrimaryKeys) {
        output.WriteRawTag(128, 1);
        output.WriteBool(ReturnEntirePrimaryKeys);
      }
      if (HasCompressTypeHint) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) CompressTypeHint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTableName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (HasDirection) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Direction);
      }
      size += columnsToGet_.CalculateSize(_repeated_columnsToGet_codec);
      if (timeRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeRange);
      }
      if (HasMaxVersions) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxVersions);
      }
      if (HasLimit) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (HasInclusiveStartPrimaryKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(InclusiveStartPrimaryKey);
      }
      if (HasExclusiveEndPrimaryKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ExclusiveEndPrimaryKey);
      }
      if (HasCacheBlocks) {
        size += 1 + 1;
      }
      if (HasFilter) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Filter);
      }
      if (HasStartColumn) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartColumn);
      }
      if (HasEndColumn) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndColumn);
      }
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Token);
      }
      if (HasTransactionId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TransactionId);
      }
      if (HasDataBlockTypeHint) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DataBlockTypeHint);
      }
      if (HasReturnEntirePrimaryKeys) {
        size += 2 + 1;
      }
      if (HasCompressTypeHint) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) CompressTypeHint);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRangeRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasTableName) {
        TableName = other.TableName;
      }
      if (other.HasDirection) {
        Direction = other.Direction;
      }
      columnsToGet_.Add(other.columnsToGet_);
      if (other.timeRange_ != null) {
        if (timeRange_ == null) {
          TimeRange = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TimeRange();
        }
        TimeRange.MergeFrom(other.TimeRange);
      }
      if (other.HasMaxVersions) {
        MaxVersions = other.MaxVersions;
      }
      if (other.HasLimit) {
        Limit = other.Limit;
      }
      if (other.HasInclusiveStartPrimaryKey) {
        InclusiveStartPrimaryKey = other.InclusiveStartPrimaryKey;
      }
      if (other.HasExclusiveEndPrimaryKey) {
        ExclusiveEndPrimaryKey = other.ExclusiveEndPrimaryKey;
      }
      if (other.HasCacheBlocks) {
        CacheBlocks = other.CacheBlocks;
      }
      if (other.HasFilter) {
        Filter = other.Filter;
      }
      if (other.HasStartColumn) {
        StartColumn = other.StartColumn;
      }
      if (other.HasEndColumn) {
        EndColumn = other.EndColumn;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      if (other.HasTransactionId) {
        TransactionId = other.TransactionId;
      }
      if (other.HasDataBlockTypeHint) {
        DataBlockTypeHint = other.DataBlockTypeHint;
      }
      if (other.HasReturnEntirePrimaryKeys) {
        ReturnEntirePrimaryKeys = other.ReturnEntirePrimaryKeys;
      }
      if (other.HasCompressTypeHint) {
        CompressTypeHint = other.CompressTypeHint;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 16: {
            Direction = (global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Direction) input.ReadEnum();
            break;
          }
          case 26: {
            columnsToGet_.AddEntriesFrom(input, _repeated_columnsToGet_codec);
            break;
          }
          case 34: {
            if (timeRange_ == null) {
              TimeRange = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TimeRange();
            }
            input.ReadMessage(TimeRange);
            break;
          }
          case 40: {
            MaxVersions = input.ReadInt32();
            break;
          }
          case 48: {
            Limit = input.ReadInt32();
            break;
          }
          case 58: {
            InclusiveStartPrimaryKey = input.ReadBytes();
            break;
          }
          case 66: {
            ExclusiveEndPrimaryKey = input.ReadBytes();
            break;
          }
          case 72: {
            CacheBlocks = input.ReadBool();
            break;
          }
          case 82: {
            Filter = input.ReadBytes();
            break;
          }
          case 90: {
            StartColumn = input.ReadString();
            break;
          }
          case 98: {
            EndColumn = input.ReadString();
            break;
          }
          case 106: {
            Token = input.ReadBytes();
            break;
          }
          case 114: {
            TransactionId = input.ReadString();
            break;
          }
          case 120: {
            DataBlockTypeHint = (global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DataBlockType) input.ReadEnum();
            break;
          }
          case 128: {
            ReturnEntirePrimaryKeys = input.ReadBool();
            break;
          }
          case 136: {
            CompressTypeHint = (global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CompressType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetRangeResponse : pb::IMessage<GetRangeResponse> {
    private static readonly pb::MessageParser<GetRangeResponse> _parser = new pb::MessageParser<GetRangeResponse>(() => new GetRangeResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRangeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRangeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRangeResponse(GetRangeResponse other) : this() {
      _hasBits0 = other._hasBits0;
      consumed_ = other.consumed_ != null ? other.consumed_.Clone() : null;
      rows_ = other.rows_;
      nextStartPrimaryKey_ = other.nextStartPrimaryKey_;
      nextToken_ = other.nextToken_;
      dataBlockType_ = other.dataBlockType_;
      compressType_ = other.compressType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRangeResponse Clone() {
      return new GetRangeResponse(this);
    }

    /// <summary>Field number for the "consumed" field.</summary>
    public const int ConsumedFieldNumber = 1;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity consumed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity Consumed {
      get { return consumed_; }
      set {
        consumed_ = value;
      }
    }

    /// <summary>Field number for the "rows" field.</summary>
    public const int RowsFieldNumber = 2;
    private readonly static pb::ByteString RowsDefaultValue = pb::ByteString.Empty;

    private pb::ByteString rows_;
    /// <summary>
    /// encoded as InplaceRowChangeSet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Rows {
      get { return rows_ ?? RowsDefaultValue; }
      set {
        rows_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "rows" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRows {
      get { return rows_ != null; }
    }
    /// <summary>Clears the value of the "rows" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRows() {
      rows_ = null;
    }

    /// <summary>Field number for the "next_start_primary_key" field.</summary>
    public const int NextStartPrimaryKeyFieldNumber = 3;
    private readonly static pb::ByteString NextStartPrimaryKeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString nextStartPrimaryKey_;
    /// <summary>
    /// 若为空，则代表数据全部读取完毕. encoded as InplaceRowChangeSet, but only has primary key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString NextStartPrimaryKey {
      get { return nextStartPrimaryKey_ ?? NextStartPrimaryKeyDefaultValue; }
      set {
        nextStartPrimaryKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "next_start_primary_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNextStartPrimaryKey {
      get { return nextStartPrimaryKey_ != null; }
    }
    /// <summary>Clears the value of the "next_start_primary_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNextStartPrimaryKey() {
      nextStartPrimaryKey_ = null;
    }

    /// <summary>Field number for the "next_token" field.</summary>
    public const int NextTokenFieldNumber = 4;
    private readonly static pb::ByteString NextTokenDefaultValue = pb::ByteString.Empty;

    private pb::ByteString nextToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString NextToken {
      get { return nextToken_ ?? NextTokenDefaultValue; }
      set {
        nextToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "next_token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNextToken {
      get { return nextToken_ != null; }
    }
    /// <summary>Clears the value of the "next_token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNextToken() {
      nextToken_ = null;
    }

    /// <summary>Field number for the "data_block_type" field.</summary>
    public const int DataBlockTypeFieldNumber = 5;
    private readonly static global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DataBlockType DataBlockTypeDefaultValue = global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DataBlockType.DbtPlainBuffer;

    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DataBlockType dataBlockType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DataBlockType DataBlockType {
      get { if ((_hasBits0 & 1) != 0) { return dataBlockType_; } else { return DataBlockTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        dataBlockType_ = value;
      }
    }
    /// <summary>Gets whether the "data_block_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDataBlockType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "data_block_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDataBlockType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "compress_type" field.</summary>
    public const int CompressTypeFieldNumber = 6;
    private readonly static global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CompressType CompressTypeDefaultValue = global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CompressType.CptNone;

    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CompressType compressType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CompressType CompressType {
      get { if ((_hasBits0 & 2) != 0) { return compressType_; } else { return CompressTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        compressType_ = value;
      }
    }
    /// <summary>Gets whether the "compress_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCompressType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "compress_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCompressType() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRangeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRangeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Consumed, other.Consumed)) return false;
      if (Rows != other.Rows) return false;
      if (NextStartPrimaryKey != other.NextStartPrimaryKey) return false;
      if (NextToken != other.NextToken) return false;
      if (DataBlockType != other.DataBlockType) return false;
      if (CompressType != other.CompressType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (consumed_ != null) hash ^= Consumed.GetHashCode();
      if (HasRows) hash ^= Rows.GetHashCode();
      if (HasNextStartPrimaryKey) hash ^= NextStartPrimaryKey.GetHashCode();
      if (HasNextToken) hash ^= NextToken.GetHashCode();
      if (HasDataBlockType) hash ^= DataBlockType.GetHashCode();
      if (HasCompressType) hash ^= CompressType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (consumed_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Consumed);
      }
      if (HasRows) {
        output.WriteRawTag(18);
        output.WriteBytes(Rows);
      }
      if (HasNextStartPrimaryKey) {
        output.WriteRawTag(26);
        output.WriteBytes(NextStartPrimaryKey);
      }
      if (HasNextToken) {
        output.WriteRawTag(34);
        output.WriteBytes(NextToken);
      }
      if (HasDataBlockType) {
        output.WriteRawTag(40);
        output.WriteEnum((int) DataBlockType);
      }
      if (HasCompressType) {
        output.WriteRawTag(48);
        output.WriteEnum((int) CompressType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (consumed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Consumed);
      }
      if (HasRows) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Rows);
      }
      if (HasNextStartPrimaryKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(NextStartPrimaryKey);
      }
      if (HasNextToken) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(NextToken);
      }
      if (HasDataBlockType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DataBlockType);
      }
      if (HasCompressType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CompressType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRangeResponse other) {
      if (other == null) {
        return;
      }
      if (other.consumed_ != null) {
        if (consumed_ == null) {
          Consumed = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity();
        }
        Consumed.MergeFrom(other.Consumed);
      }
      if (other.HasRows) {
        Rows = other.Rows;
      }
      if (other.HasNextStartPrimaryKey) {
        NextStartPrimaryKey = other.NextStartPrimaryKey;
      }
      if (other.HasNextToken) {
        NextToken = other.NextToken;
      }
      if (other.HasDataBlockType) {
        DataBlockType = other.DataBlockType;
      }
      if (other.HasCompressType) {
        CompressType = other.CompressType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (consumed_ == null) {
              Consumed = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity();
            }
            input.ReadMessage(Consumed);
            break;
          }
          case 18: {
            Rows = input.ReadBytes();
            break;
          }
          case 26: {
            NextStartPrimaryKey = input.ReadBytes();
            break;
          }
          case 34: {
            NextToken = input.ReadBytes();
            break;
          }
          case 40: {
            DataBlockType = (global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.DataBlockType) input.ReadEnum();
            break;
          }
          case 48: {
            CompressType = (global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.CompressType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ###########################################  LocalTransaction  ########################################### 
  /// </summary>
  public sealed partial class StartLocalTransactionRequest : pb::IMessage<StartLocalTransactionRequest> {
    private static readonly pb::MessageParser<StartLocalTransactionRequest> _parser = new pb::MessageParser<StartLocalTransactionRequest>(() => new StartLocalTransactionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartLocalTransactionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartLocalTransactionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartLocalTransactionRequest(StartLocalTransactionRequest other) : this() {
      tableName_ = other.tableName_;
      key_ = other.key_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartLocalTransactionRequest Clone() {
      return new StartLocalTransactionRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private readonly static string TableNameDefaultValue = "";

    private string tableName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_ ?? TableNameDefaultValue; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTableName {
      get { return tableName_ != null; }
    }
    /// <summary>Clears the value of the "table_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTableName() {
      tableName_ = null;
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 2;
    private readonly static pb::ByteString KeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString key_;
    /// <summary>
    /// encoded as SQLVariant
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Key {
      get { return key_ ?? KeyDefaultValue; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasKey {
      get { return key_ != null; }
    }
    /// <summary>Clears the value of the "key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearKey() {
      key_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartLocalTransactionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartLocalTransactionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if (Key != other.Key) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTableName) hash ^= TableName.GetHashCode();
      if (HasKey) hash ^= Key.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTableName) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (HasKey) {
        output.WriteRawTag(18);
        output.WriteBytes(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTableName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (HasKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Key);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartLocalTransactionRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasTableName) {
        TableName = other.TableName;
      }
      if (other.HasKey) {
        Key = other.Key;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            Key = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StartLocalTransactionResponse : pb::IMessage<StartLocalTransactionResponse> {
    private static readonly pb::MessageParser<StartLocalTransactionResponse> _parser = new pb::MessageParser<StartLocalTransactionResponse>(() => new StartLocalTransactionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartLocalTransactionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartLocalTransactionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartLocalTransactionResponse(StartLocalTransactionResponse other) : this() {
      transactionId_ = other.transactionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartLocalTransactionResponse Clone() {
      return new StartLocalTransactionResponse(this);
    }

    /// <summary>Field number for the "transaction_id" field.</summary>
    public const int TransactionIdFieldNumber = 1;
    private readonly static string TransactionIdDefaultValue = "";

    private string transactionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TransactionId {
      get { return transactionId_ ?? TransactionIdDefaultValue; }
      set {
        transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "transaction_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTransactionId {
      get { return transactionId_ != null; }
    }
    /// <summary>Clears the value of the "transaction_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTransactionId() {
      transactionId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartLocalTransactionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartLocalTransactionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransactionId != other.TransactionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTransactionId) hash ^= TransactionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTransactionId) {
        output.WriteRawTag(10);
        output.WriteString(TransactionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTransactionId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TransactionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartLocalTransactionResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasTransactionId) {
        TransactionId = other.TransactionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TransactionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommitTransactionRequest : pb::IMessage<CommitTransactionRequest> {
    private static readonly pb::MessageParser<CommitTransactionRequest> _parser = new pb::MessageParser<CommitTransactionRequest>(() => new CommitTransactionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommitTransactionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitTransactionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitTransactionRequest(CommitTransactionRequest other) : this() {
      transactionId_ = other.transactionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitTransactionRequest Clone() {
      return new CommitTransactionRequest(this);
    }

    /// <summary>Field number for the "transaction_id" field.</summary>
    public const int TransactionIdFieldNumber = 1;
    private readonly static string TransactionIdDefaultValue = "";

    private string transactionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TransactionId {
      get { return transactionId_ ?? TransactionIdDefaultValue; }
      set {
        transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "transaction_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTransactionId {
      get { return transactionId_ != null; }
    }
    /// <summary>Clears the value of the "transaction_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTransactionId() {
      transactionId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommitTransactionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommitTransactionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransactionId != other.TransactionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTransactionId) hash ^= TransactionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTransactionId) {
        output.WriteRawTag(10);
        output.WriteString(TransactionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTransactionId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TransactionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommitTransactionRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasTransactionId) {
        TransactionId = other.TransactionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TransactionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CommitTransactionResponse : pb::IMessage<CommitTransactionResponse> {
    private static readonly pb::MessageParser<CommitTransactionResponse> _parser = new pb::MessageParser<CommitTransactionResponse>(() => new CommitTransactionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommitTransactionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitTransactionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitTransactionResponse(CommitTransactionResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommitTransactionResponse Clone() {
      return new CommitTransactionResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommitTransactionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommitTransactionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommitTransactionResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class AbortTransactionRequest : pb::IMessage<AbortTransactionRequest> {
    private static readonly pb::MessageParser<AbortTransactionRequest> _parser = new pb::MessageParser<AbortTransactionRequest>(() => new AbortTransactionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AbortTransactionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbortTransactionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbortTransactionRequest(AbortTransactionRequest other) : this() {
      transactionId_ = other.transactionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbortTransactionRequest Clone() {
      return new AbortTransactionRequest(this);
    }

    /// <summary>Field number for the "transaction_id" field.</summary>
    public const int TransactionIdFieldNumber = 1;
    private readonly static string TransactionIdDefaultValue = "";

    private string transactionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TransactionId {
      get { return transactionId_ ?? TransactionIdDefaultValue; }
      set {
        transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "transaction_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTransactionId {
      get { return transactionId_ != null; }
    }
    /// <summary>Clears the value of the "transaction_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTransactionId() {
      transactionId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AbortTransactionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AbortTransactionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransactionId != other.TransactionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTransactionId) hash ^= TransactionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTransactionId) {
        output.WriteRawTag(10);
        output.WriteString(TransactionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTransactionId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TransactionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AbortTransactionRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasTransactionId) {
        TransactionId = other.TransactionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TransactionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AbortTransactionResponse : pb::IMessage<AbortTransactionResponse> {
    private static readonly pb::MessageParser<AbortTransactionResponse> _parser = new pb::MessageParser<AbortTransactionResponse>(() => new AbortTransactionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AbortTransactionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbortTransactionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbortTransactionResponse(AbortTransactionResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbortTransactionResponse Clone() {
      return new AbortTransactionResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AbortTransactionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AbortTransactionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AbortTransactionResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ListStreamRequest : pb::IMessage<ListStreamRequest> {
    private static readonly pb::MessageParser<ListStreamRequest> _parser = new pb::MessageParser<ListStreamRequest>(() => new ListStreamRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListStreamRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListStreamRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListStreamRequest(ListStreamRequest other) : this() {
      tableName_ = other.tableName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListStreamRequest Clone() {
      return new ListStreamRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private readonly static string TableNameDefaultValue = "";

    private string tableName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_ ?? TableNameDefaultValue; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTableName {
      get { return tableName_ != null; }
    }
    /// <summary>Clears the value of the "table_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTableName() {
      tableName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListStreamRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListStreamRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTableName) hash ^= TableName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTableName) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTableName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListStreamRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasTableName) {
        TableName = other.TableName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Stream : pb::IMessage<Stream> {
    private static readonly pb::MessageParser<Stream> _parser = new pb::MessageParser<Stream>(() => new Stream());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Stream> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stream() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stream(Stream other) : this() {
      _hasBits0 = other._hasBits0;
      streamId_ = other.streamId_;
      tableName_ = other.tableName_;
      creationTime_ = other.creationTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stream Clone() {
      return new Stream(this);
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 1;
    private readonly static string StreamIdDefaultValue = "";

    private string streamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StreamId {
      get { return streamId_ ?? StreamIdDefaultValue; }
      set {
        streamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "stream_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStreamId {
      get { return streamId_ != null; }
    }
    /// <summary>Clears the value of the "stream_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStreamId() {
      streamId_ = null;
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 2;
    private readonly static string TableNameDefaultValue = "";

    private string tableName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_ ?? TableNameDefaultValue; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTableName {
      get { return tableName_ != null; }
    }
    /// <summary>Clears the value of the "table_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTableName() {
      tableName_ = null;
    }

    /// <summary>Field number for the "creation_time" field.</summary>
    public const int CreationTimeFieldNumber = 3;
    private readonly static long CreationTimeDefaultValue = 0L;

    private long creationTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreationTime {
      get { if ((_hasBits0 & 1) != 0) { return creationTime_; } else { return CreationTimeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        creationTime_ = value;
      }
    }
    /// <summary>Gets whether the "creation_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCreationTime {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "creation_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCreationTime() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Stream);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Stream other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StreamId != other.StreamId) return false;
      if (TableName != other.TableName) return false;
      if (CreationTime != other.CreationTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStreamId) hash ^= StreamId.GetHashCode();
      if (HasTableName) hash ^= TableName.GetHashCode();
      if (HasCreationTime) hash ^= CreationTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasStreamId) {
        output.WriteRawTag(10);
        output.WriteString(StreamId);
      }
      if (HasTableName) {
        output.WriteRawTag(18);
        output.WriteString(TableName);
      }
      if (HasCreationTime) {
        output.WriteRawTag(24);
        output.WriteInt64(CreationTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasStreamId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StreamId);
      }
      if (HasTableName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (HasCreationTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreationTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Stream other) {
      if (other == null) {
        return;
      }
      if (other.HasStreamId) {
        StreamId = other.StreamId;
      }
      if (other.HasTableName) {
        TableName = other.TableName;
      }
      if (other.HasCreationTime) {
        CreationTime = other.CreationTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StreamId = input.ReadString();
            break;
          }
          case 18: {
            TableName = input.ReadString();
            break;
          }
          case 24: {
            CreationTime = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListStreamResponse : pb::IMessage<ListStreamResponse> {
    private static readonly pb::MessageParser<ListStreamResponse> _parser = new pb::MessageParser<ListStreamResponse>(() => new ListStreamResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListStreamResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListStreamResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListStreamResponse(ListStreamResponse other) : this() {
      streams_ = other.streams_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListStreamResponse Clone() {
      return new ListStreamResponse(this);
    }

    /// <summary>Field number for the "streams" field.</summary>
    public const int StreamsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Stream> _repeated_streams_codec
        = pb::FieldCodec.ForMessage(10, global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Stream.Parser);
    private readonly pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Stream> streams_ = new pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Stream>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.Stream> Streams {
      get { return streams_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListStreamResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListStreamResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!streams_.Equals(other.streams_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= streams_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      streams_.WriteTo(output, _repeated_streams_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += streams_.CalculateSize(_repeated_streams_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListStreamResponse other) {
      if (other == null) {
        return;
      }
      streams_.Add(other.streams_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            streams_.AddEntriesFrom(input, _repeated_streams_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StreamShard : pb::IMessage<StreamShard> {
    private static readonly pb::MessageParser<StreamShard> _parser = new pb::MessageParser<StreamShard>(() => new StreamShard());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamShard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamShard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamShard(StreamShard other) : this() {
      shardId_ = other.shardId_;
      parentId_ = other.parentId_;
      parentSiblingId_ = other.parentSiblingId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamShard Clone() {
      return new StreamShard(this);
    }

    /// <summary>Field number for the "shard_id" field.</summary>
    public const int ShardIdFieldNumber = 1;
    private readonly static string ShardIdDefaultValue = "";

    private string shardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShardId {
      get { return shardId_ ?? ShardIdDefaultValue; }
      set {
        shardId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "shard_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasShardId {
      get { return shardId_ != null; }
    }
    /// <summary>Clears the value of the "shard_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearShardId() {
      shardId_ = null;
    }

    /// <summary>Field number for the "parent_id" field.</summary>
    public const int ParentIdFieldNumber = 2;
    private readonly static string ParentIdDefaultValue = "";

    private string parentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParentId {
      get { return parentId_ ?? ParentIdDefaultValue; }
      set {
        parentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "parent_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasParentId {
      get { return parentId_ != null; }
    }
    /// <summary>Clears the value of the "parent_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearParentId() {
      parentId_ = null;
    }

    /// <summary>Field number for the "parent_sibling_id" field.</summary>
    public const int ParentSiblingIdFieldNumber = 3;
    private readonly static string ParentSiblingIdDefaultValue = "";

    private string parentSiblingId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParentSiblingId {
      get { return parentSiblingId_ ?? ParentSiblingIdDefaultValue; }
      set {
        parentSiblingId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "parent_sibling_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasParentSiblingId {
      get { return parentSiblingId_ != null; }
    }
    /// <summary>Clears the value of the "parent_sibling_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearParentSiblingId() {
      parentSiblingId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamShard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamShard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShardId != other.ShardId) return false;
      if (ParentId != other.ParentId) return false;
      if (ParentSiblingId != other.ParentSiblingId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasShardId) hash ^= ShardId.GetHashCode();
      if (HasParentId) hash ^= ParentId.GetHashCode();
      if (HasParentSiblingId) hash ^= ParentSiblingId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasShardId) {
        output.WriteRawTag(10);
        output.WriteString(ShardId);
      }
      if (HasParentId) {
        output.WriteRawTag(18);
        output.WriteString(ParentId);
      }
      if (HasParentSiblingId) {
        output.WriteRawTag(26);
        output.WriteString(ParentSiblingId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasShardId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShardId);
      }
      if (HasParentId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParentId);
      }
      if (HasParentSiblingId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParentSiblingId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamShard other) {
      if (other == null) {
        return;
      }
      if (other.HasShardId) {
        ShardId = other.ShardId;
      }
      if (other.HasParentId) {
        ParentId = other.ParentId;
      }
      if (other.HasParentSiblingId) {
        ParentSiblingId = other.ParentSiblingId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ShardId = input.ReadString();
            break;
          }
          case 18: {
            ParentId = input.ReadString();
            break;
          }
          case 26: {
            ParentSiblingId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DescribeStreamRequest : pb::IMessage<DescribeStreamRequest> {
    private static readonly pb::MessageParser<DescribeStreamRequest> _parser = new pb::MessageParser<DescribeStreamRequest>(() => new DescribeStreamRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DescribeStreamRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeStreamRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeStreamRequest(DescribeStreamRequest other) : this() {
      _hasBits0 = other._hasBits0;
      streamId_ = other.streamId_;
      inclusiveStartShardId_ = other.inclusiveStartShardId_;
      shardLimit_ = other.shardLimit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeStreamRequest Clone() {
      return new DescribeStreamRequest(this);
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 1;
    private readonly static string StreamIdDefaultValue = "";

    private string streamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StreamId {
      get { return streamId_ ?? StreamIdDefaultValue; }
      set {
        streamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "stream_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStreamId {
      get { return streamId_ != null; }
    }
    /// <summary>Clears the value of the "stream_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStreamId() {
      streamId_ = null;
    }

    /// <summary>Field number for the "inclusive_start_shard_id" field.</summary>
    public const int InclusiveStartShardIdFieldNumber = 2;
    private readonly static string InclusiveStartShardIdDefaultValue = "";

    private string inclusiveStartShardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InclusiveStartShardId {
      get { return inclusiveStartShardId_ ?? InclusiveStartShardIdDefaultValue; }
      set {
        inclusiveStartShardId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "inclusive_start_shard_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInclusiveStartShardId {
      get { return inclusiveStartShardId_ != null; }
    }
    /// <summary>Clears the value of the "inclusive_start_shard_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInclusiveStartShardId() {
      inclusiveStartShardId_ = null;
    }

    /// <summary>Field number for the "shard_limit" field.</summary>
    public const int ShardLimitFieldNumber = 3;
    private readonly static int ShardLimitDefaultValue = 0;

    private int shardLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ShardLimit {
      get { if ((_hasBits0 & 1) != 0) { return shardLimit_; } else { return ShardLimitDefaultValue; } }
      set {
        _hasBits0 |= 1;
        shardLimit_ = value;
      }
    }
    /// <summary>Gets whether the "shard_limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasShardLimit {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "shard_limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearShardLimit() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DescribeStreamRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DescribeStreamRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StreamId != other.StreamId) return false;
      if (InclusiveStartShardId != other.InclusiveStartShardId) return false;
      if (ShardLimit != other.ShardLimit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStreamId) hash ^= StreamId.GetHashCode();
      if (HasInclusiveStartShardId) hash ^= InclusiveStartShardId.GetHashCode();
      if (HasShardLimit) hash ^= ShardLimit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasStreamId) {
        output.WriteRawTag(10);
        output.WriteString(StreamId);
      }
      if (HasInclusiveStartShardId) {
        output.WriteRawTag(18);
        output.WriteString(InclusiveStartShardId);
      }
      if (HasShardLimit) {
        output.WriteRawTag(24);
        output.WriteInt32(ShardLimit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasStreamId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StreamId);
      }
      if (HasInclusiveStartShardId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InclusiveStartShardId);
      }
      if (HasShardLimit) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShardLimit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DescribeStreamRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasStreamId) {
        StreamId = other.StreamId;
      }
      if (other.HasInclusiveStartShardId) {
        InclusiveStartShardId = other.InclusiveStartShardId;
      }
      if (other.HasShardLimit) {
        ShardLimit = other.ShardLimit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StreamId = input.ReadString();
            break;
          }
          case 18: {
            InclusiveStartShardId = input.ReadString();
            break;
          }
          case 24: {
            ShardLimit = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DescribeStreamResponse : pb::IMessage<DescribeStreamResponse> {
    private static readonly pb::MessageParser<DescribeStreamResponse> _parser = new pb::MessageParser<DescribeStreamResponse>(() => new DescribeStreamResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DescribeStreamResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeStreamResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeStreamResponse(DescribeStreamResponse other) : this() {
      _hasBits0 = other._hasBits0;
      streamId_ = other.streamId_;
      expirationTime_ = other.expirationTime_;
      tableName_ = other.tableName_;
      creationTime_ = other.creationTime_;
      streamStatus_ = other.streamStatus_;
      shards_ = other.shards_.Clone();
      nextShardId_ = other.nextShardId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DescribeStreamResponse Clone() {
      return new DescribeStreamResponse(this);
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 1;
    private readonly static string StreamIdDefaultValue = "";

    private string streamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StreamId {
      get { return streamId_ ?? StreamIdDefaultValue; }
      set {
        streamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "stream_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStreamId {
      get { return streamId_ != null; }
    }
    /// <summary>Clears the value of the "stream_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStreamId() {
      streamId_ = null;
    }

    /// <summary>Field number for the "expiration_time" field.</summary>
    public const int ExpirationTimeFieldNumber = 2;
    private readonly static int ExpirationTimeDefaultValue = 0;

    private int expirationTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExpirationTime {
      get { if ((_hasBits0 & 1) != 0) { return expirationTime_; } else { return ExpirationTimeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        expirationTime_ = value;
      }
    }
    /// <summary>Gets whether the "expiration_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExpirationTime {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "expiration_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExpirationTime() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 3;
    private readonly static string TableNameDefaultValue = "";

    private string tableName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_ ?? TableNameDefaultValue; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTableName {
      get { return tableName_ != null; }
    }
    /// <summary>Clears the value of the "table_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTableName() {
      tableName_ = null;
    }

    /// <summary>Field number for the "creation_time" field.</summary>
    public const int CreationTimeFieldNumber = 4;
    private readonly static long CreationTimeDefaultValue = 0L;

    private long creationTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreationTime {
      get { if ((_hasBits0 & 2) != 0) { return creationTime_; } else { return CreationTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        creationTime_ = value;
      }
    }
    /// <summary>Gets whether the "creation_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCreationTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "creation_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCreationTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "stream_status" field.</summary>
    public const int StreamStatusFieldNumber = 5;
    private readonly static global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamStatus StreamStatusDefaultValue = global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamStatus.StreamEnabling;

    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamStatus streamStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamStatus StreamStatus {
      get { if ((_hasBits0 & 4) != 0) { return streamStatus_; } else { return StreamStatusDefaultValue; } }
      set {
        _hasBits0 |= 4;
        streamStatus_ = value;
      }
    }
    /// <summary>Gets whether the "stream_status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStreamStatus {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "stream_status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStreamStatus() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "shards" field.</summary>
    public const int ShardsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamShard> _repeated_shards_codec
        = pb::FieldCodec.ForMessage(50, global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamShard.Parser);
    private readonly pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamShard> shards_ = new pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamShard>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamShard> Shards {
      get { return shards_; }
    }

    /// <summary>Field number for the "next_shard_id" field.</summary>
    public const int NextShardIdFieldNumber = 7;
    private readonly static string NextShardIdDefaultValue = "";

    private string nextShardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextShardId {
      get { return nextShardId_ ?? NextShardIdDefaultValue; }
      set {
        nextShardId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "next_shard_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNextShardId {
      get { return nextShardId_ != null; }
    }
    /// <summary>Clears the value of the "next_shard_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNextShardId() {
      nextShardId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DescribeStreamResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DescribeStreamResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StreamId != other.StreamId) return false;
      if (ExpirationTime != other.ExpirationTime) return false;
      if (TableName != other.TableName) return false;
      if (CreationTime != other.CreationTime) return false;
      if (StreamStatus != other.StreamStatus) return false;
      if(!shards_.Equals(other.shards_)) return false;
      if (NextShardId != other.NextShardId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStreamId) hash ^= StreamId.GetHashCode();
      if (HasExpirationTime) hash ^= ExpirationTime.GetHashCode();
      if (HasTableName) hash ^= TableName.GetHashCode();
      if (HasCreationTime) hash ^= CreationTime.GetHashCode();
      if (HasStreamStatus) hash ^= StreamStatus.GetHashCode();
      hash ^= shards_.GetHashCode();
      if (HasNextShardId) hash ^= NextShardId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasStreamId) {
        output.WriteRawTag(10);
        output.WriteString(StreamId);
      }
      if (HasExpirationTime) {
        output.WriteRawTag(16);
        output.WriteInt32(ExpirationTime);
      }
      if (HasTableName) {
        output.WriteRawTag(26);
        output.WriteString(TableName);
      }
      if (HasCreationTime) {
        output.WriteRawTag(32);
        output.WriteInt64(CreationTime);
      }
      if (HasStreamStatus) {
        output.WriteRawTag(40);
        output.WriteEnum((int) StreamStatus);
      }
      shards_.WriteTo(output, _repeated_shards_codec);
      if (HasNextShardId) {
        output.WriteRawTag(58);
        output.WriteString(NextShardId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasStreamId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StreamId);
      }
      if (HasExpirationTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExpirationTime);
      }
      if (HasTableName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (HasCreationTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreationTime);
      }
      if (HasStreamStatus) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StreamStatus);
      }
      size += shards_.CalculateSize(_repeated_shards_codec);
      if (HasNextShardId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextShardId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DescribeStreamResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasStreamId) {
        StreamId = other.StreamId;
      }
      if (other.HasExpirationTime) {
        ExpirationTime = other.ExpirationTime;
      }
      if (other.HasTableName) {
        TableName = other.TableName;
      }
      if (other.HasCreationTime) {
        CreationTime = other.CreationTime;
      }
      if (other.HasStreamStatus) {
        StreamStatus = other.StreamStatus;
      }
      shards_.Add(other.shards_);
      if (other.HasNextShardId) {
        NextShardId = other.NextShardId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StreamId = input.ReadString();
            break;
          }
          case 16: {
            ExpirationTime = input.ReadInt32();
            break;
          }
          case 26: {
            TableName = input.ReadString();
            break;
          }
          case 32: {
            CreationTime = input.ReadInt64();
            break;
          }
          case 40: {
            StreamStatus = (global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.StreamStatus) input.ReadEnum();
            break;
          }
          case 50: {
            shards_.AddEntriesFrom(input, _repeated_shards_codec);
            break;
          }
          case 58: {
            NextShardId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetShardIteratorRequest : pb::IMessage<GetShardIteratorRequest> {
    private static readonly pb::MessageParser<GetShardIteratorRequest> _parser = new pb::MessageParser<GetShardIteratorRequest>(() => new GetShardIteratorRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetShardIteratorRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetShardIteratorRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetShardIteratorRequest(GetShardIteratorRequest other) : this() {
      streamId_ = other.streamId_;
      shardId_ = other.shardId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetShardIteratorRequest Clone() {
      return new GetShardIteratorRequest(this);
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 1;
    private readonly static string StreamIdDefaultValue = "";

    private string streamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StreamId {
      get { return streamId_ ?? StreamIdDefaultValue; }
      set {
        streamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "stream_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStreamId {
      get { return streamId_ != null; }
    }
    /// <summary>Clears the value of the "stream_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStreamId() {
      streamId_ = null;
    }

    /// <summary>Field number for the "shard_id" field.</summary>
    public const int ShardIdFieldNumber = 2;
    private readonly static string ShardIdDefaultValue = "";

    private string shardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShardId {
      get { return shardId_ ?? ShardIdDefaultValue; }
      set {
        shardId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "shard_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasShardId {
      get { return shardId_ != null; }
    }
    /// <summary>Clears the value of the "shard_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearShardId() {
      shardId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetShardIteratorRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetShardIteratorRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StreamId != other.StreamId) return false;
      if (ShardId != other.ShardId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStreamId) hash ^= StreamId.GetHashCode();
      if (HasShardId) hash ^= ShardId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasStreamId) {
        output.WriteRawTag(10);
        output.WriteString(StreamId);
      }
      if (HasShardId) {
        output.WriteRawTag(18);
        output.WriteString(ShardId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasStreamId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StreamId);
      }
      if (HasShardId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShardId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetShardIteratorRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasStreamId) {
        StreamId = other.StreamId;
      }
      if (other.HasShardId) {
        ShardId = other.ShardId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StreamId = input.ReadString();
            break;
          }
          case 18: {
            ShardId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetShardIteratorResponse : pb::IMessage<GetShardIteratorResponse> {
    private static readonly pb::MessageParser<GetShardIteratorResponse> _parser = new pb::MessageParser<GetShardIteratorResponse>(() => new GetShardIteratorResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetShardIteratorResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetShardIteratorResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetShardIteratorResponse(GetShardIteratorResponse other) : this() {
      shardIterator_ = other.shardIterator_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetShardIteratorResponse Clone() {
      return new GetShardIteratorResponse(this);
    }

    /// <summary>Field number for the "shard_iterator" field.</summary>
    public const int ShardIteratorFieldNumber = 1;
    private readonly static string ShardIteratorDefaultValue = "";

    private string shardIterator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShardIterator {
      get { return shardIterator_ ?? ShardIteratorDefaultValue; }
      set {
        shardIterator_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "shard_iterator" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasShardIterator {
      get { return shardIterator_ != null; }
    }
    /// <summary>Clears the value of the "shard_iterator" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearShardIterator() {
      shardIterator_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetShardIteratorResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetShardIteratorResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShardIterator != other.ShardIterator) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasShardIterator) hash ^= ShardIterator.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasShardIterator) {
        output.WriteRawTag(10);
        output.WriteString(ShardIterator);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasShardIterator) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShardIterator);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetShardIteratorResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasShardIterator) {
        ShardIterator = other.ShardIterator;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ShardIterator = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetStreamRecordRequest : pb::IMessage<GetStreamRecordRequest> {
    private static readonly pb::MessageParser<GetStreamRecordRequest> _parser = new pb::MessageParser<GetStreamRecordRequest>(() => new GetStreamRecordRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetStreamRecordRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamRecordRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamRecordRequest(GetStreamRecordRequest other) : this() {
      _hasBits0 = other._hasBits0;
      shardIterator_ = other.shardIterator_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamRecordRequest Clone() {
      return new GetStreamRecordRequest(this);
    }

    /// <summary>Field number for the "shard_iterator" field.</summary>
    public const int ShardIteratorFieldNumber = 1;
    private readonly static string ShardIteratorDefaultValue = "";

    private string shardIterator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShardIterator {
      get { return shardIterator_ ?? ShardIteratorDefaultValue; }
      set {
        shardIterator_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "shard_iterator" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasShardIterator {
      get { return shardIterator_ != null; }
    }
    /// <summary>Clears the value of the "shard_iterator" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearShardIterator() {
      shardIterator_ = null;
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 2;
    private readonly static int LimitDefaultValue = 0;

    private int limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Limit {
      get { if ((_hasBits0 & 1) != 0) { return limit_; } else { return LimitDefaultValue; } }
      set {
        _hasBits0 |= 1;
        limit_ = value;
      }
    }
    /// <summary>Gets whether the "limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLimit {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLimit() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetStreamRecordRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetStreamRecordRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShardIterator != other.ShardIterator) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasShardIterator) hash ^= ShardIterator.GetHashCode();
      if (HasLimit) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasShardIterator) {
        output.WriteRawTag(10);
        output.WriteString(ShardIterator);
      }
      if (HasLimit) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasShardIterator) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShardIterator);
      }
      if (HasLimit) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetStreamRecordRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasShardIterator) {
        ShardIterator = other.ShardIterator;
      }
      if (other.HasLimit) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ShardIterator = input.ReadString();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetStreamRecordResponse : pb::IMessage<GetStreamRecordResponse> {
    private static readonly pb::MessageParser<GetStreamRecordResponse> _parser = new pb::MessageParser<GetStreamRecordResponse>(() => new GetStreamRecordResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetStreamRecordResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamRecordResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamRecordResponse(GetStreamRecordResponse other) : this() {
      streamRecords_ = other.streamRecords_.Clone();
      nextShardIterator_ = other.nextShardIterator_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamRecordResponse Clone() {
      return new GetStreamRecordResponse(this);
    }

    /// <summary>Field number for the "stream_records" field.</summary>
    public const int StreamRecordsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.GetStreamRecordResponse.Types.StreamRecord> _repeated_streamRecords_codec
        = pb::FieldCodec.ForMessage(10, global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.GetStreamRecordResponse.Types.StreamRecord.Parser);
    private readonly pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.GetStreamRecordResponse.Types.StreamRecord> streamRecords_ = new pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.GetStreamRecordResponse.Types.StreamRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.GetStreamRecordResponse.Types.StreamRecord> StreamRecords {
      get { return streamRecords_; }
    }

    /// <summary>Field number for the "next_shard_iterator" field.</summary>
    public const int NextShardIteratorFieldNumber = 2;
    private readonly static string NextShardIteratorDefaultValue = "";

    private string nextShardIterator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextShardIterator {
      get { return nextShardIterator_ ?? NextShardIteratorDefaultValue; }
      set {
        nextShardIterator_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "next_shard_iterator" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNextShardIterator {
      get { return nextShardIterator_ != null; }
    }
    /// <summary>Clears the value of the "next_shard_iterator" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNextShardIterator() {
      nextShardIterator_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetStreamRecordResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetStreamRecordResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!streamRecords_.Equals(other.streamRecords_)) return false;
      if (NextShardIterator != other.NextShardIterator) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= streamRecords_.GetHashCode();
      if (HasNextShardIterator) hash ^= NextShardIterator.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      streamRecords_.WriteTo(output, _repeated_streamRecords_codec);
      if (HasNextShardIterator) {
        output.WriteRawTag(18);
        output.WriteString(NextShardIterator);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += streamRecords_.CalculateSize(_repeated_streamRecords_codec);
      if (HasNextShardIterator) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextShardIterator);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetStreamRecordResponse other) {
      if (other == null) {
        return;
      }
      streamRecords_.Add(other.streamRecords_);
      if (other.HasNextShardIterator) {
        NextShardIterator = other.NextShardIterator;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            streamRecords_.AddEntriesFrom(input, _repeated_streamRecords_codec);
            break;
          }
          case 18: {
            NextShardIterator = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetStreamRecordResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class StreamRecord : pb::IMessage<StreamRecord> {
        private static readonly pb::MessageParser<StreamRecord> _parser = new pb::MessageParser<StreamRecord>(() => new StreamRecord());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<StreamRecord> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.GetStreamRecordResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StreamRecord() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StreamRecord(StreamRecord other) : this() {
          _hasBits0 = other._hasBits0;
          actionType_ = other.actionType_;
          record_ = other.record_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StreamRecord Clone() {
          return new StreamRecord(this);
        }

        /// <summary>Field number for the "action_type" field.</summary>
        public const int ActionTypeFieldNumber = 1;
        private readonly static global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ActionType ActionTypeDefaultValue = global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ActionType.PutRow;

        private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ActionType actionType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ActionType ActionType {
          get { if ((_hasBits0 & 1) != 0) { return actionType_; } else { return ActionTypeDefaultValue; } }
          set {
            _hasBits0 |= 1;
            actionType_ = value;
          }
        }
        /// <summary>Gets whether the "action_type" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasActionType {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "action_type" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearActionType() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "record" field.</summary>
        public const int RecordFieldNumber = 2;
        private readonly static pb::ByteString RecordDefaultValue = pb::ByteString.Empty;

        private pb::ByteString record_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Record {
          get { return record_ ?? RecordDefaultValue; }
          set {
            record_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "record" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasRecord {
          get { return record_ != null; }
        }
        /// <summary>Clears the value of the "record" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearRecord() {
          record_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as StreamRecord);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(StreamRecord other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ActionType != other.ActionType) return false;
          if (Record != other.Record) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasActionType) hash ^= ActionType.GetHashCode();
          if (HasRecord) hash ^= Record.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (HasActionType) {
            output.WriteRawTag(8);
            output.WriteEnum((int) ActionType);
          }
          if (HasRecord) {
            output.WriteRawTag(18);
            output.WriteBytes(Record);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasActionType) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ActionType);
          }
          if (HasRecord) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Record);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(StreamRecord other) {
          if (other == null) {
            return;
          }
          if (other.HasActionType) {
            ActionType = other.ActionType;
          }
          if (other.HasRecord) {
            Record = other.Record;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ActionType = (global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ActionType) input.ReadEnum();
                break;
              }
              case 18: {
                Record = input.ReadBytes();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// +++++ ComputeSplitPointsBySize  +++++ 
  /// </summary>
  public sealed partial class ComputeSplitPointsBySizeRequest : pb::IMessage<ComputeSplitPointsBySizeRequest> {
    private static readonly pb::MessageParser<ComputeSplitPointsBySizeRequest> _parser = new pb::MessageParser<ComputeSplitPointsBySizeRequest>(() => new ComputeSplitPointsBySizeRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComputeSplitPointsBySizeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeSplitPointsBySizeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeSplitPointsBySizeRequest(ComputeSplitPointsBySizeRequest other) : this() {
      _hasBits0 = other._hasBits0;
      tableName_ = other.tableName_;
      splitSize_ = other.splitSize_;
      splitSizeUnitInByte_ = other.splitSizeUnitInByte_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeSplitPointsBySizeRequest Clone() {
      return new ComputeSplitPointsBySizeRequest(this);
    }

    /// <summary>Field number for the "table_name" field.</summary>
    public const int TableNameFieldNumber = 1;
    private readonly static string TableNameDefaultValue = "";

    private string tableName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_ ?? TableNameDefaultValue; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "table_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTableName {
      get { return tableName_ != null; }
    }
    /// <summary>Clears the value of the "table_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTableName() {
      tableName_ = null;
    }

    /// <summary>Field number for the "split_size" field.</summary>
    public const int SplitSizeFieldNumber = 2;
    private readonly static long SplitSizeDefaultValue = 0L;

    private long splitSize_;
    /// <summary>
    /// in 100MB
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SplitSize {
      get { if ((_hasBits0 & 1) != 0) { return splitSize_; } else { return SplitSizeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        splitSize_ = value;
      }
    }
    /// <summary>Gets whether the "split_size" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSplitSize {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "split_size" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSplitSize() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "split_size_unit_in_byte" field.</summary>
    public const int SplitSizeUnitInByteFieldNumber = 3;
    private readonly static long SplitSizeUnitInByteDefaultValue = 0L;

    private long splitSizeUnitInByte_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SplitSizeUnitInByte {
      get { if ((_hasBits0 & 2) != 0) { return splitSizeUnitInByte_; } else { return SplitSizeUnitInByteDefaultValue; } }
      set {
        _hasBits0 |= 2;
        splitSizeUnitInByte_ = value;
      }
    }
    /// <summary>Gets whether the "split_size_unit_in_byte" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSplitSizeUnitInByte {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "split_size_unit_in_byte" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSplitSizeUnitInByte() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComputeSplitPointsBySizeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComputeSplitPointsBySizeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if (SplitSize != other.SplitSize) return false;
      if (SplitSizeUnitInByte != other.SplitSizeUnitInByte) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTableName) hash ^= TableName.GetHashCode();
      if (HasSplitSize) hash ^= SplitSize.GetHashCode();
      if (HasSplitSizeUnitInByte) hash ^= SplitSizeUnitInByte.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTableName) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (HasSplitSize) {
        output.WriteRawTag(16);
        output.WriteInt64(SplitSize);
      }
      if (HasSplitSizeUnitInByte) {
        output.WriteRawTag(24);
        output.WriteInt64(SplitSizeUnitInByte);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTableName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (HasSplitSize) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SplitSize);
      }
      if (HasSplitSizeUnitInByte) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SplitSizeUnitInByte);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComputeSplitPointsBySizeRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasTableName) {
        TableName = other.TableName;
      }
      if (other.HasSplitSize) {
        SplitSize = other.SplitSize;
      }
      if (other.HasSplitSizeUnitInByte) {
        SplitSizeUnitInByte = other.SplitSizeUnitInByte;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 16: {
            SplitSize = input.ReadInt64();
            break;
          }
          case 24: {
            SplitSizeUnitInByte = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ComputeSplitPointsBySizeResponse : pb::IMessage<ComputeSplitPointsBySizeResponse> {
    private static readonly pb::MessageParser<ComputeSplitPointsBySizeResponse> _parser = new pb::MessageParser<ComputeSplitPointsBySizeResponse>(() => new ComputeSplitPointsBySizeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComputeSplitPointsBySizeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.TableStoreReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeSplitPointsBySizeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeSplitPointsBySizeResponse(ComputeSplitPointsBySizeResponse other) : this() {
      consumed_ = other.consumed_ != null ? other.consumed_.Clone() : null;
      schema_ = other.schema_.Clone();
      splitPoints_ = other.splitPoints_.Clone();
      locations_ = other.locations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComputeSplitPointsBySizeResponse Clone() {
      return new ComputeSplitPointsBySizeResponse(this);
    }

    /// <summary>Field number for the "consumed" field.</summary>
    public const int ConsumedFieldNumber = 1;
    private global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity consumed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity Consumed {
      get { return consumed_; }
      set {
        consumed_ = value;
      }
    }

    /// <summary>Field number for the "schema" field.</summary>
    public const int SchemaFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PrimaryKeySchema> _repeated_schema_codec
        = pb::FieldCodec.ForMessage(18, global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PrimaryKeySchema.Parser);
    private readonly pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PrimaryKeySchema> schema_ = new pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PrimaryKeySchema>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.PrimaryKeySchema> Schema {
      get { return schema_; }
    }

    /// <summary>Field number for the "split_points" field.</summary>
    public const int SplitPointsFieldNumber = 3;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_splitPoints_codec
        = pb::FieldCodec.ForBytes(26);
    private readonly pbc::RepeatedField<pb::ByteString> splitPoints_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    ///*
    /// Split points between splits, in the increasing order
    ///
    /// A split is a consecutive range of primary keys,
    /// whose data size is about split_size specified in the request.
    /// The size could be hard to be precise.
    ///
    /// A split point is an array of primary-key column w.r.t. table schema,
    /// which is never longer than that of table schema.
    /// Tailing -inf will be omitted to reduce transmission payloads.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> SplitPoints {
      get { return splitPoints_; }
    }

    /// <summary>Field number for the "locations" field.</summary>
    public const int LocationsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ComputeSplitPointsBySizeResponse.Types.SplitLocation> _repeated_locations_codec
        = pb::FieldCodec.ForMessage(34, global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ComputeSplitPointsBySizeResponse.Types.SplitLocation.Parser);
    private readonly pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ComputeSplitPointsBySizeResponse.Types.SplitLocation> locations_ = new pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ComputeSplitPointsBySizeResponse.Types.SplitLocation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ComputeSplitPointsBySizeResponse.Types.SplitLocation> Locations {
      get { return locations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComputeSplitPointsBySizeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComputeSplitPointsBySizeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Consumed, other.Consumed)) return false;
      if(!schema_.Equals(other.schema_)) return false;
      if(!splitPoints_.Equals(other.splitPoints_)) return false;
      if(!locations_.Equals(other.locations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (consumed_ != null) hash ^= Consumed.GetHashCode();
      hash ^= schema_.GetHashCode();
      hash ^= splitPoints_.GetHashCode();
      hash ^= locations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (consumed_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Consumed);
      }
      schema_.WriteTo(output, _repeated_schema_codec);
      splitPoints_.WriteTo(output, _repeated_splitPoints_codec);
      locations_.WriteTo(output, _repeated_locations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (consumed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Consumed);
      }
      size += schema_.CalculateSize(_repeated_schema_codec);
      size += splitPoints_.CalculateSize(_repeated_splitPoints_codec);
      size += locations_.CalculateSize(_repeated_locations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComputeSplitPointsBySizeResponse other) {
      if (other == null) {
        return;
      }
      if (other.consumed_ != null) {
        if (consumed_ == null) {
          Consumed = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity();
        }
        Consumed.MergeFrom(other.Consumed);
      }
      schema_.Add(other.schema_);
      splitPoints_.Add(other.splitPoints_);
      locations_.Add(other.locations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (consumed_ == null) {
              Consumed = new global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ConsumedCapacity();
            }
            input.ReadMessage(Consumed);
            break;
          }
          case 18: {
            schema_.AddEntriesFrom(input, _repeated_schema_codec);
            break;
          }
          case 26: {
            splitPoints_.AddEntriesFrom(input, _repeated_splitPoints_codec);
            break;
          }
          case 34: {
            locations_.AddEntriesFrom(input, _repeated_locations_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ComputeSplitPointsBySizeResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      ///*
      /// Locations where splits lies in.
      ///
      /// By the managed nature of TableStore, these locations are no more than hints.
      /// If a location is not suitable to be seen, an empty string will be placed.
      /// </summary>
      public sealed partial class SplitLocation : pb::IMessage<SplitLocation> {
        private static readonly pb::MessageParser<SplitLocation> _parser = new pb::MessageParser<SplitLocation>(() => new SplitLocation());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SplitLocation> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Com.Alicloud.Openservices.Tablestore.Core.Protocol.ComputeSplitPointsBySizeResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SplitLocation() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SplitLocation(SplitLocation other) : this() {
          _hasBits0 = other._hasBits0;
          location_ = other.location_;
          repeat_ = other.repeat_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SplitLocation Clone() {
          return new SplitLocation(this);
        }

        /// <summary>Field number for the "location" field.</summary>
        public const int LocationFieldNumber = 1;
        private readonly static string LocationDefaultValue = "";

        private string location_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Location {
          get { return location_ ?? LocationDefaultValue; }
          set {
            location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "location" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasLocation {
          get { return location_ != null; }
        }
        /// <summary>Clears the value of the "location" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearLocation() {
          location_ = null;
        }

        /// <summary>Field number for the "repeat" field.</summary>
        public const int RepeatFieldNumber = 2;
        private readonly static long RepeatDefaultValue = 0L;

        private long repeat_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Repeat {
          get { if ((_hasBits0 & 1) != 0) { return repeat_; } else { return RepeatDefaultValue; } }
          set {
            _hasBits0 |= 1;
            repeat_ = value;
          }
        }
        /// <summary>Gets whether the "repeat" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasRepeat {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "repeat" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearRepeat() {
          _hasBits0 &= ~1;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SplitLocation);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SplitLocation other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Location != other.Location) return false;
          if (Repeat != other.Repeat) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasLocation) hash ^= Location.GetHashCode();
          if (HasRepeat) hash ^= Repeat.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (HasLocation) {
            output.WriteRawTag(10);
            output.WriteString(Location);
          }
          if (HasRepeat) {
            output.WriteRawTag(16);
            output.WriteSInt64(Repeat);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasLocation) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Location);
          }
          if (HasRepeat) {
            size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Repeat);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SplitLocation other) {
          if (other == null) {
            return;
          }
          if (other.HasLocation) {
            Location = other.Location;
          }
          if (other.HasRepeat) {
            Repeat = other.Repeat;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Location = input.ReadString();
                break;
              }
              case 16: {
                Repeat = input.ReadSInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
